{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/components/ayuda/ayuda.component.ts","./src/app/components/ayuda/ayuda.component.html","./src/app/components/buscador/buscador.component.ts","./src/app/components/buscador/buscador.component.html","./src/app/components/chat/chat.component.ts","./src/app/components/chat/chat.component.html","./src/app/components/flotante/flotante.component.ts","./src/app/components/flotante/flotante.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/imagen/capturas.component.ts","./src/app/components/imagen/capturas.component.html","./src/app/components/imagen/modimagen.component.ts","./src/app/components/imagen/modimagen.component.html","./src/app/components/lista-usuarios/lista-usuarios.component.ts","./src/app/components/lista-usuarios/lista-usuarios.component.html","./src/app/components/menu/menu.component.ts","./src/app/components/menu/menu.component.html","./src/app/components/periodicidad/accion.component.ts","./src/app/components/periodicidad/accion.component.html","./src/app/components/periodicidad/accionhistorico.component.ts","./src/app/components/periodicidad/accionhistorico.component.html","./src/app/components/periodicidad/check.component.ts","./src/app/components/periodicidad/check.component.html","./src/app/guards/authguard.guard.ts","./src/app/guards/usuario-guard.service.ts","./src/app/models/accionpuntual.ts","./src/app/models/ayuda.ts","./src/app/models/constantes.model.ts","./src/app/models/incidencia.ts","./src/app/models/issue.ts","./src/app/models/issuehistorico.ts","./src/app/models/periodicidad.ts","./src/app/models/periodicidadmadre.ts","./src/app/models/personas.ts","./src/app/models/seguimiento.ts","./src/app/models/turnos.ts","./src/app/models/usuario.ts","./src/app/pages/abririncidencia.component.ts","./src/app/pages/abririncidencia.component.html","./src/app/pages/alta.component.ts","./src/app/pages/alta.component.html","./src/app/pages/configuracion.pages.ts","./src/app/pages/configuracion.pages.html","./src/app/pages/descarga.pages.ts","./src/app/pages/descarga.pages.html","./src/app/pages/detalle.component.ts","./src/app/pages/detalle.component.html","./src/app/pages/detallehistorico.component.ts","./src/app/pages/detallehistorico.component.html","./src/app/pages/detallepersona.component.ts","./src/app/pages/detallepersona.component.html","./src/app/pages/formularios/ayuda.component.ts","./src/app/pages/formularios/ayuda.component.html","./src/app/pages/formularios/configuracion-general.component.ts","./src/app/pages/formularios/configuracion-general.component.html","./src/app/pages/formularios/incidenciadetalle.component.ts","./src/app/pages/formularios/incidenciadetalle.component.html","./src/app/pages/formularios/incidencias.component.ts","./src/app/pages/formularios/incidencias.component.html","./src/app/pages/formularios/listados.component.ts","./src/app/pages/formularios/listados.component.html","./src/app/pages/formularios/roles.component.ts","./src/app/pages/formularios/roles.component.html","./src/app/pages/formularios/turnos.component.ts","./src/app/pages/formularios/turnos.component.html","./src/app/pages/historico.component.ts","./src/app/pages/historico.component.html","./src/app/pages/historicomini.component.ts","./src/app/pages/historicomini.component.html","./src/app/pages/home.component.ts","./src/app/pages/home.component.html","./src/app/pages/identificacion/identificacion.component.ts","./src/app/pages/identificacion/identificacion.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/mensajes/mensajes.component.ts","./src/app/pages/mensajes/mensajes.component.html","./src/app/pages/perfil.component.ts","./src/app/pages/perfil.component.html","./src/app/pages/personas.pages.ts","./src/app/pages/personas.pages.html","./src/app/pages/turnos/elegir.component.ts","./src/app/pages/turnos/elegir.component.html","./src/app/pages/turnos/homeget.component.ts","./src/app/pages/turnos/homeget.component.html","./src/app/services/admin-servicio.service.ts","./src/app/services/apipersonas.service.ts","./src/app/services/apiregistros.service.ts","./src/app/services/ayuda.service.ts","./src/app/services/chat.service.ts","./src/app/services/data.service.ts","./src/app/services/dataservice.service.ts","./src/app/services/detalle.service.ts","./src/app/services/detallehistorico.service.ts","./src/app/services/flotante.service.ts","./src/app/services/historico.service.ts","./src/app/services/incidencias.service.ts","./src/app/services/periodicidad.service.ts","./src/app/services/serviciocompartido.service.ts","./src/app/services/turnos.service.ts","./src/app/services/websocket.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport { DataserviceService } from './services/dataservice.service';\nimport { WebsocketService } from './services/websocket.service';\nimport { ChatService } from './services/chat.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  implements OnInit {\n  title = 'check';\n\n          loginbtn:boolean;\n          logoutbtn:boolean;\n          constructor(private dataService: DataserviceService, public wsService: WebsocketService, public chatService: ChatService) {\n            dataService.getLoggedInName.subscribe(nombres => this.changeName(nombres));\n            if(this.dataService.isLoggedIn())\n            {\n              console.log(\"loggedin\");\n              this.loginbtn=false;\n              this.logoutbtn=true\n            }\n            else{\n            this.loginbtn=true;\n            this.logoutbtn=false\n            }\n        \n        \n        }\n        private changeName(nombres: boolean): void {\n          this.logoutbtn = nombres;\n          this.loginbtn = !nombres;\n        }\n        logout()\n        {\n          this.dataService.deleteToken();\n          window.location.href = window.location.href;\n        }\n\n\n        ngOnInit(){\n          this.chatService.getMessagesPrivate().subscribe( msg =>{\n            console.log(msg);\n          });\n        }\n\n}\n","<div class=\"container-fluid\">\n  <router-outlet></router-outlet>\n\n    <app-flotante></app-flotante>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { routes } from './app.routes';\r\n//import { AppRoutingModule } from './app.routes';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { DataService } from './services/data.service';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { HomeComponent } from './pages/home.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { BuscadorComponent } from './components/buscador/buscador.component';\r\n\r\nimport { PersonasPage } from './pages/personas.pages';\r\n\r\nimport { DescargaPage } from './pages/descarga.pages';\r\nimport { ConfiguracionPage } from './pages/configuracion.pages';\r\n\r\nimport { DetalleComponent } from './pages/detalle.component';\r\n\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\n\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {environment} from '../environments/environment';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\r\nimport { AltaComponent } from './pages/alta.component';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { NgxFullCalendarModule } from 'ngx-fullcalendar';\r\nimport { CheckComponent } from './components/periodicidad/check.component';\r\nimport { AccionComponent } from './components/periodicidad/accion.component';\r\nimport { AccionHistoricoComponent } from './components/periodicidad/accionhistorico.component';\r\nimport { HistoricoComponent } from './pages/historico.component';\r\nimport { DetalleHistoricoComponent } from './pages/detallehistorico.component';\r\nimport { DetallePersona } from './pages/detallepersona.component';\r\nimport { ModimagenComponent } from './components/imagen/modimagen.component';\r\nimport { CapturasComponent } from './components/imagen/capturas.component';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport {JpImagePreloadModule} from '@jaspero/ng-image-preload';\r\nimport { PerfilPersona } from './pages/perfil.component';\r\nimport { AyudaComponent } from './components/ayuda/ayuda.component';\r\nimport { ElegirTurno } from './pages/turnos/elegir.component';\r\nimport { HomeGetComponent } from './pages/turnos/homeget.component';\r\nimport { FlotanteComponent } from './components/flotante/flotante.component';\r\nimport { MensajesComponent } from './pages/mensajes/mensajes.component';\r\nimport { ListaUsuariosComponent } from './components/lista-usuarios/lista-usuarios.component';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\r\nimport { IdentificacionComponent } from './pages/identificacion/identificacion.component';\r\nimport { HistoricoMiniComponent } from './pages/historicomini.component';\r\n\r\nimport { ConfiguracionGeneralComponent } from './pages/formularios/configuracion-general.component';\r\nimport { AyudaFormComponent } from './pages/formularios/ayuda.component';\r\nimport { RolesFormComponent } from './pages/formularios/roles.component';\r\nimport { TurnosFormComponent } from './pages/formularios/turnos.component';\r\nimport { ListadosComponent } from './pages/formularios/listados.component';\r\nimport { AbririncidenciaComponent } from './pages/abririncidencia.component';\r\nimport { IncidenciasComponent } from './pages/formularios/incidencias.component';\r\nimport { IncidenciadetalleComponent } from './pages/formularios/incidenciadetalle.component';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nconst config: SocketIoConfig = { url: environment.wsUrl, options: {} };\r\n\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n\r\n    ChatComponent,\r\n    ListaUsuariosComponent,\r\n    MensajesComponent,\r\n    IdentificacionComponent,\r\n    AppComponent,\r\n    HomeGetComponent,\r\n    HistoricoMiniComponent,\r\nCheckComponent,\r\n    HomeComponent,\r\n    DetalleComponent,\r\n    LoginComponent,\r\n    FlotanteComponent,\r\n    DetalleHistoricoComponent,\r\n  AccionComponent,\r\n  ModimagenComponent,\r\n  CapturasComponent,\r\n  AccionHistoricoComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    MenuComponent,\r\n    BuscadorComponent,\r\n    PersonasPage,\r\nHistoricoComponent,\r\n    DescargaPage,\r\n    ConfiguracionPage,\r\n    ElegirTurno,\r\n    AltaComponent,\r\n    DetallePersona,\r\n    PerfilPersona,\r\nAyudaComponent,\r\nAyudaFormComponent,\r\nRolesFormComponent,\r\nTurnosFormComponent,\r\nConfiguracionGeneralComponent,\r\nListadosComponent,\r\nAbririncidenciaComponent,\r\nIncidenciasComponent,\r\nIncidenciadetalleComponent\r\n    \r\n\r\n \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgxSpinnerModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    DragDropModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    JpImagePreloadModule.forRoot(),\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    NgxFullCalendarModule,\r\n    MatPaginatorModule,\r\n    [NgxMaterialTimepickerModule.setLocale('es-419')],\r\n    FormsModule,\r\n    NgxDatatableModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    //RouterModule.forRoot( routes ),\r\n    RouterModule.forRoot(routes, { useHash: true }),\r\n    ToastrModule.forRoot(),\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    SocketIoModule.forRoot(config),\r\n    CKEditorModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  entryComponents: [],\r\n  exports: [\r\n    RouterModule,\r\n  ],\r\n  providers: [\r\n\r\n    DataService,\r\n    { provide: LOCALE_ID, useValue: 'es' }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","\r\nimport { Routes} from '@angular/router';\r\n\r\nimport { HomeComponent } from './pages/home.component';\r\nimport { DetalleComponent } from './pages/detalle.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nimport { PersonasPage } from './pages/personas.pages';\r\nimport { AltaComponent } from './pages/alta.component';\r\nimport { HistoricoComponent } from './pages/historico.component';\r\nimport { DetalleHistoricoComponent } from './pages/detallehistorico.component';\r\nimport { DetallePersona } from './pages/detallepersona.component';\r\nimport { AuthguardGuard } from './guards/authguard.guard';\r\nimport { PerfilPersona } from './pages/perfil.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { AyudaComponent } from './components/ayuda/ayuda.component';\r\nimport { ElegirTurno } from './pages/turnos/elegir.component';\r\n\r\nimport { MensajesComponent } from './pages/mensajes/mensajes.component';\r\nimport { UsuarioGuardService } from './guards/usuario-guard.service';\r\nimport { IdentificacionComponent } from './pages/identificacion/identificacion.component';\r\nimport { ConfiguracionGeneralComponent } from './pages/formularios/configuracion-general.component';\r\nimport { AyudaFormComponent } from './pages/formularios/ayuda.component';\r\nimport { RolesFormComponent } from './pages/formularios/roles.component';\r\nimport { TurnosFormComponent } from './pages/formularios/turnos.component';\r\nimport { ListadosComponent } from './pages/formularios/listados.component';\r\nimport { AbririncidenciaComponent } from './pages/abririncidencia.component';\r\nimport { HomeGetComponent } from './pages/turnos/homeget.component';\r\nimport { IncidenciasComponent } from './pages/formularios/incidencias.component';\r\nimport { IncidenciadetalleComponent } from './pages/formularios/incidenciadetalle.component';\r\n\r\n\r\n\r\nexport const routes: Routes = [\r\n  { path: 'ayuda' , component: AyudaComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'elegirturno' , component: ElegirTurno, canActivate: [ AuthguardGuard ] },\r\n  { path: 'homeget' , component: HomeGetComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'home' , component: HomeComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'alta' , component: AltaComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'personas' , component: PersonasPage, canActivate: [ AuthguardGuard ] },\r\n  { path: 'perfil/:id_persona' , component: PerfilPersona, canActivate: [ AuthguardGuard ] },\r\n  { path: 'incidenciadetalle/:token_incidencia' , component: IncidenciadetalleComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'detallepersona/:id_persona' , component: DetallePersona, canActivate: [ AuthguardGuard ] },\r\n  { path: 'historico' , component: HistoricoComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'detallehistorico/:id_log' , component: DetalleHistoricoComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'detalle/:id_tarea' , component: DetalleComponent, canActivate: [ AuthguardGuard ]},\r\n  { path: 'formlistados' , component: ListadosComponent, canActivate: [ AuthguardGuard ]},\r\n  { path: 'abririncidencia' , component: AbririncidenciaComponent, canActivate: [ AuthguardGuard ]},\r\n  { path: 'incidencias' , component: IncidenciasComponent, canActivate: [ AuthguardGuard ]},\r\n\r\n  // { path: 'formroles' , component: RolesFormComponent, canActivate: [ AuthguardGuard ]},\r\n  // { path: 'formturnos' , component: TurnosFormComponent, canActivate: [ AuthguardGuard ]},\r\n  { path: 'configuraciongeneral' , component: ConfiguracionGeneralComponent, canActivate: [ AuthguardGuard ]},\r\n\r\n  { path: 'login'   , component: LoginComponent },\r\n  { path: 'identificacion'   , component: IdentificacionComponent },\r\n  { path: 'mensajes', component: MensajesComponent, canActivate: [ UsuarioGuardService ] },\r\n  { path: '', pathMatch: 'full', redirectTo: '/login'},\r\n  { path: '**', redirectTo: '/login' }\r\n];\r\n\r\n\r\n//export class AppRoutingModule { }\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { NgbModal, ModalDismissReasons, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { AyudaService } from '../../services/ayuda.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Ayuda } from '../../models/ayuda';\nimport { Constantes } from '../../models/constantes.model';\n\n@Component({\n  selector: 'app-ayuda',\n  templateUrl: './ayuda.component.html'\n})\nexport class AyudaComponent implements OnInit {\n  title = 'Ayuda';\n\n\n  contenidoayuda: Ayuda[] = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  closeResult: string;\n  modalOptions: NgbModalOptions;\n  constructor(private httpClient: HttpClient, private modalService: NgbModal, private ayudaService: AyudaService) {\n\n    this.modalOptions = {\n      backdrop: 'static',\n      backdropClass: 'customBackdrop',\n      size: 'lg'\n    }\n\n  }\n\n  ngOnInit() {\n    const id_persona = localStorage.getItem('id_persona');\n\n    //cargo el listado \n    this.httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_ayuda.php?id_persona=' + id_persona)\n      .subscribe(result => {\n        this.contenidoayuda = result;\n      });\n\n\n  }\n\n  open(ayuda) {\n    this.modalService.open(ayuda, this.modalOptions).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n}","<a title=\"Ayuda\" (click)=\"open(ayuda)\" class=\"nav-link pointerplus\"\n  ><i class=\"fa fa-question-circle mr-1 fa-1g\"></i>\n  Ayuda\n</a>\n\n<ng-template #ayuda let-modal class=\"modal-lg\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Ayuda</h4>\n    <button\n      type=\"button\"\n      class=\"close\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss('Cross click')\"\n    >\n      <span aria-hidden=\"true\">×</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div *ngFor=\"let contenido of contenidoayuda\">\n      <div id=\"card-966405\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <a\n              class=\"card-link collapsed\"\n              data-toggle=\"collapse\"\n              data-parent=\"#card-966405\"\n              href=\"#card-element-{{ contenido.numauto }}\"\n              >{{ contenido.ayudatitulo }}</a\n            >\n          </div>\n          <div id=\"card-element-{{ contenido.numauto }}\" class=\"collapse\">\n            <div class=\"card-body\">\n              {{ contenido.ayudatexto }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-dark\"\n      (click)=\"modal.close('Save click')\"\n    >\n      Cerrar\n    </button>\n  </div>\n</ng-template>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-buscador',\r\n    templateUrl: './buscador.component.html'\r\n})\r\n\r\nexport class BuscadorComponent {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"row mb-4\">\r\n    <div class=\"col-md-12 flex-column text-center ml-2 mr-3\">\r\n    <form class=\"form-inline\">\r\n      <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"{{ 'txtSearch' | translate }}\" /> \r\n      <button class=\"btn btn-info my-2 my-sm-0 btn-circle\" type=\"submit\">\r\n        <i class=\"fa  fa-search\"></i>\r\n      </button>\r\n    </form>\r\n  </div>\r\n  </div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ChatService } from '../../services/chat.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html'\n  \n})\nexport class ChatComponent implements OnInit, OnDestroy {\n\n  texto: string;\n  mensajesSubscription: Subscription;\n  elemento: HTMLElement;\n\n  mensajes: any[] = [];\n\n  constructor(public chatService: ChatService) { }\n\n  ngOnInit() {\n    this.elemento = document.getElementById('chat-mensajes');\n    this.mensajesSubscription = this.chatService.getMessages()\n                                          .subscribe(msg => {\n                                            this.mensajes.push( msg );\n                                            setTimeout(() =>{\n                                                this.elemento.scrollTop = this.elemento.scrollHeight;\n                                            },50);\n                                          });\n  }\n\nngOnDestroy(){\nthis.mensajesSubscription.unsubscribe;\n}\n  \n\n\n  \n\n}\n","\n<div id=\"chat-mensajes\">\n \n    <li class=\"list-group-item\" *ngFor=\"let msg of mensajes\" >\n           {{ msg.de }}: {{ msg.cuerpo }}\n    </li>\n  \n    <app-historicomini></app-historicomini>\n\n</div>\n\n<!-- <form (ngSubmit) = \"enviar()\">\n<input type=\"text\" \n        [(ngModel)]=\"texto\"\n        class=\"form-control chat-input\"\n        name=\"texto\"\n        placeholder=\"Mensaje\"\n        autofocusautocomplete=\"off\">\n\n</form> -->","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Personas } from '../../models/personas';\r\nimport { FlotanteService } from '../../services/flotante.service';\r\nimport { empty } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-flotante',\r\n    templateUrl: './flotante.component.html'\r\n})\r\n\r\nexport class FlotanteComponent implements OnInit {\r\n    user:Personas = new Personas();\r\n\r\n    isOn = true;\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private router:Router,\r\n        private flotanteService: FlotanteService\r\n        ){\r\n\r\n            if(localStorage.getItem('id_persona')!=null){\r\n                    const id_persona = localStorage.getItem('id_persona');\r\n                    this.flotanteService.getUserId ( id_persona )\r\n                    .subscribe( (respuesta:Personas) => {\r\n                        this.user = respuesta;\r\n                    });\r\n            }\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n  \r\n    cerrarConsola(){\r\n        \r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","\r\n\r\n  <ng-container *ngIf=\"user.level_rol === '8' && isOn\"> \r\n\r\n  \r\n  <div class=\"example-box\" cdkDrag>\r\n    <div class=\"flotante accordion-icons\" id=\"card-9668745984\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\" title=\"Arrastra para recolocar la consola\" alt=\"Arrastra para recolocar la consola\" id=\"cabeceraDraggable\">\r\n        <div class=\"row\">\r\n          <div class=\"col-11 their\"><h4>Consola de actividad</h4></div>\r\n          <div class=\"col-1 text-right\">\r\n\r\n          \r\n<div class=\"row\">\r\n          <div class=\"col-6 text-right botona \"> \r\n            <a class=\"card-link rightfloat\" \r\n            data-toggle=\"collapse\" \r\n            data-parent=\"#card-9668745984\" \r\n            href=\"#card-element-57874457742\"> \r\n            </a>\r\n           </div>\r\n          <div class=\"col-6 text-right botonb pt-1\">\r\n                <a href=\"#\" class=\"card-link rightfloat\" (click)=\"isOn= false\"></a>\r\n          </div>\r\n</div> \r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div id=\"card-element-57874457742\" class=\"collapse show\">\r\n          <div class=\"card-body overscroll\">\r\n\r\n            \r\n<app-mensajes></app-mensajes>\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<div class=\"row \">\r\n  <div class=\"col-12 footer text-center\">\r\n     <p *ngIf=\"user.level_rol === '8' && !isOn\"><button (click)=\"isOn= true\">+ abrir consola</button></p>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DataserviceService } from '../../services/dataservice.service';\r\nimport { WebsocketService } from '../../services/websocket.service';\r\n@Component({\r\n    selector: 'app-footer',\r\n    templateUrl: './footer.component.html'\r\n})\r\n\r\nexport class FooterComponent {\r\n    any: number;\r\n \r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private router:Router,\r\n        private dataService: DataserviceService,\r\n        public wsService: WebsocketService\r\n        ){\r\n        this.any = new Date().getFullYear();\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n","\r\n<div class=\"row \">\r\n    <div class=\"col-9 footer bg-dark text-center  text-white\">\r\n\r\n   \r\n          &copy; 2020 - {{ any }}\r\n    </div>\r\n    <div class=\"col-3 footer bg-dark text-center  text-white\">\r\n      Status servidor: \r\n      <span *ngIf=\"wsService.socketStatus\" class=\"text-success\">Online</span>\r\n      <span *ngIf=\"!wsService.socketStatus\"  class=\"text-danger\">Offline</span>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataserviceService } from '../../services/dataservice.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html'\r\n})\r\n\r\nexport class HeaderComponent {\r\n    \r\n  title = 'ng-bootstrap-modal-demo';\r\n\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private dataService: DataserviceService,\r\n        private router:Router,\r\n        private activatedRoute: ActivatedRoute\r\n        ){\r\n        this.translate.addLangs(['es','ca','en']);\r\n        this.translate.setDefaultLang('es');\r\n        const browserLang = translate.getBrowserLang();\r\n        translate.use(browserLang.match(/es|ca|en/) ? browserLang : 'es');\r\n        }\r\n\r\n\r\n        Logout() {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('id_rol');\r\n            localStorage.removeItem('id_persona');\r\n            localStorage.removeItem('valorTurno');\r\n            const redirect = this.dataService.redirectUrl ? this.dataService.redirectUrl : '/login';\r\n                        this.router.navigate([redirect]);\r\n          }\r\n\r\n}\r\n\r\n\r\n","<div class=\"row\">\r\n  <div class=\"col-12 bg-dark\">\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <a class=\"navbar-brand\" href=\"#\">CheckList</a>\r\n\r\n      <!-- Toggle button -->\r\n      <button\r\n        id=\"sidebarCollapse\"\r\n        data-toggle=\"collapse\"\r\n        type=\"button\"\r\n        class=\"navbar-toggler navbar-toggler-right\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n        <ul class=\"navbar-nav ml-md-auto\">\r\n          <li class=\"nav-item\">\r\n            <a\r\n              [routerLink]=\"['/', 'abririncidencia']\"\r\n              class=\"nav-link\"\r\n              alt=\"Abrir incidencia\"\r\n              title=\"Abrir incidencia\"\r\n            >\r\n              Enviar incidencia\r\n            </a>\r\n          </li>\r\n\r\n          <li class=\"nav-item\">\r\n            <app-ayuda></app-ayuda>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\" (click)=\"Logout()\">\r\n              <i class=\"fa fa-times-circle mr-1 fa-1g\"></i>\r\n              {{ \"txtSalir\" | translate }}\r\n            </a>\r\n          </li>\r\n\r\n          <li class=\"nav-item\">\r\n            <div>\r\n              <label>\r\n                <select\r\n                  class=\"form-control form-control-sm moresmall mt-2 ml-4\"\r\n                  #langSelect\r\n                  (change)=\"translate.use(langSelect.value)\"\r\n                >\r\n                  <option\r\n                    *ngFor=\"let lang of translate.getLangs()\"\r\n                    [value]=\"lang\"\r\n                    [selected]=\"lang === translate.currentLang\"\r\n                    >{{ lang }}</option\r\n                  >\r\n                </select>\r\n              </label>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #content let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">\r\n      Nueva entrada de FAQs\r\n    </h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"form-group\">\r\n      <input\r\n        name=\"id_persona_log\"\r\n        type=\"hidden\"\r\n        #id_persona_log=\"ngModel\"\r\n        [(ngModel)]=\"datosformularioayuda.id_persona_log\"\r\n      />\r\n      <label for=\"ayudatitulo\">Escriba un título</label>\r\n      <input\r\n        name=\"ayudatitulo\"\r\n        type=\"text\"\r\n        maxlength=\"100\"\r\n        #ayudatitulo=\"ngModel\"\r\n        class=\"form-control mb-2\"\r\n        [(ngModel)]=\"datosformularioayuda.ayudatitulo\"\r\n      />\r\n\r\n      <p>Texto (máx 650 carácteres)</p>\r\n      <div class=\"input-group\">\r\n        <textarea\r\n          rows=\"10\"\r\n          required\r\n          class=\"form-control mb-2\"\r\n          maxlength=\"650\"\r\n          name=\"ayudatexto\"\r\n          #ayudatexto=\"ngModel\"\r\n          [(ngModel)]=\"datosformularioayuda.ayudatexto\"\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button (click)=\"guardarNuevaAyuda()\" class=\"btn btn-info\">\r\n      Guardar registro\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { Personas } from '../../models/personas';\r\nimport { ApiPersonas } from '../../services/apipersonas.service';\r\n\r\n@Component({\r\n  selector: 'app-capturas',\r\n  templateUrl: './capturas.component.html'\r\n})\r\n\r\nexport class CapturasComponent implements OnInit {\r\n\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  personas: Personas[] = [];\r\n  fotopersona:Personas = new Personas();\r\n  accionForm: FormGroup;\r\n  private imageSrc: string = '';\r\n  datosFoto: string;\r\n    constructor(\r\n      private fb: FormBuilder, \r\n      private activatedRoute: ActivatedRoute, \r\n      private httpClient: HttpClient, \r\n      private perioService: ApiPersonas\r\n\r\n      ) {\r\n        \r\n\r\n        //modificar valores por defecto en la pagina de insercion TODO\r\n        this.accionForm = this.fb.group({\r\n\r\n          fotopersona: ['', Validators.required],\r\n          id_persona: this.activatedRoute.snapshot.paramMap.get('id_persona'),\r\n          id_persona_log: localStorage.getItem('id_persona'),\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n      this.cargaMadre();\r\n   \r\n  }\r\n  \r\n\r\n  cargaMadre(){\r\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona')\r\n    this.perioService.getFotografia(id_persona).subscribe( (respuesta: Personas) => {\r\n    this.fotopersona = respuesta;\r\n    //this.accionForm.controls['fechafin'].setValue(this.fotopersona[0]['imagen']);\r\n    \r\n    });\r\n  }\r\n\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n\r\n  handleInputChange(e) {\r\n    var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    var pattern = /image-*/;\r\n    var reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('invalid format');\r\n      return;\r\n    }\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n  _handleReaderLoaded(e) {\r\n    let reader = e.target;\r\n    this.imageSrc = reader.result;\r\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona')\r\n    \r\n    const id_persona_log = localStorage.getItem('id_persona')\r\n\r\n    this.datosFoto = JSON.stringify({ \"id_persona_log\": id_persona_log ,\"id_persona\": id_persona , \"fotopersona\": this.imageSrc});\r\n    this.perioService.altaRegistroFoto(this.datosFoto).subscribe();\r\n    \r\n    Swal.fire({\r\n      text: 'Foto actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    , this.recarga()\r\n    ;\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n   submitForm() {\r\n\r\n    // // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    // // const id_tarea: FormControl = this.accionForm.get('id_persona') as FormControl;\r\n\r\n    // this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    // Swal.fire({\r\n    //   text: 'Foto actualizada',\r\n    //   icon: 'success',\r\n    //   showConfirmButton: false\r\n    // })\r\n    // , this.recarga()\r\n    // ;\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","\r\n<div class=\"row\">\r\n  <div class=\"col-12 text-center mt-4\">\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" novalidate>\r\n  <input type=\"hidden\" class=\"form-control\"  name=\"id_persona\"  formControlName=\"id_persona\"  />\r\n  <label class=\"fileContainer\"><i class=\"fa fa-camera\"></i>\r\n\r\n  <input \r\n         type=\"file\"\r\n         name=\"fotopersona\"  \r\n         formControlName=\"fotopersona\"\r\n         accept=\"image/*\" \r\n         \r\n         />\r\n\r\n </label>\r\n</form>\r\n</div>\r\n</div>","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { Personas } from '../../models/personas';\r\nimport { ApiPersonas } from '../../services/apipersonas.service';\r\n\r\n@Component({\r\n  selector: 'app-modimagen',\r\n  templateUrl: './modimagen.component.html'\r\n})\r\n\r\nexport class ModimagenComponent implements OnInit {\r\n\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  personas: Personas[] = [];\r\n  fotopersona: Personas = new Personas();\r\n  accionForm: FormGroup;\r\n  private imageSrc: string = '';\r\n  datosFoto: string;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private httpClient: HttpClient,\r\n    private perioService: ApiPersonas\r\n\r\n  ) {\r\n\r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionForm = this.fb.group({\r\n      fotopersona: ['', Validators.required],\r\n      id_persona: localStorage.getItem('id_persona'),\r\n      id_persona_log: localStorage.getItem('id_persona'),\r\n\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cargaMadre();\r\n  }\r\n\r\n\r\n  cargaMadre() {\r\n    const id_persona = localStorage.getItem('id_persona')\r\n    this.perioService.getFotografia(id_persona).subscribe((respuesta: Personas) => {\r\n      this.fotopersona = respuesta;\r\n      //this.accionForm.controls['fechafin'].setValue(this.fotopersona[0]['imagen']);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n\r\n  handleInputChange(e) {\r\n    var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    var pattern = /image-*/;\r\n    var reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('invalid format');\r\n      return;\r\n    }\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n  _handleReaderLoaded(e) {\r\n    let reader = e.target;\r\n    this.imageSrc = reader.result;\r\n    const id_persona = localStorage.getItem('id_persona')\r\n\r\n    const id_persona_log = localStorage.getItem('id_persona')\r\n\r\n    this.datosFoto = JSON.stringify({ \"id_persona_log\": id_persona_log, \"id_persona\": id_persona, \"fotopersona\": this.imageSrc });\r\n    this.perioService.altaRegistroFoto(this.datosFoto).subscribe();\r\n\r\n    Swal.fire({\r\n      text: 'Foto actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n      , this.recarga()\r\n      ;\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  submitForm() {\r\n\r\n    // // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    // // const id_tarea: FormControl = this.accionForm.get('id_persona') as FormControl;\r\n\r\n    // this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    // Swal.fire({\r\n    //   text: 'Foto actualizada',\r\n    //   icon: 'success',\r\n    //   showConfirmButton: false\r\n    // })\r\n    // , this.recarga()\r\n    // ;\r\n  }\r\n\r\n\r\n\r\n\r\n}","          \r\n  <div class=\"block\" *ngIf=\"fotopersona.imagen==''\">\r\n    <img \r\n    class=\"nofoto animate fadeIn\" \r\n    src=\"./assets/nophoto.jpg\" \r\n    >\r\n  </div> \r\n\r\n \r\n   <div class=\"block\" *ngIf=\"fotopersona.imagen\">\r\n    <img \r\n    class=\"perfildetalle animate fadeIn\" \r\n    src=\"./assets/loader.gif\" \r\n    jpPreload=\"{{fotopersona.imagen}}\">\r\n  </div>\r\n  \r\n\r\n\r\n\r\n\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12 text-center mt-4\">\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" novalidate>\r\n  <input type=\"hidden\" class=\"form-control\"  name=\"id_persona\"  formControlName=\"id_persona\"  />\r\n  <label class=\"fileContainer\"><i class=\"fa fa-camera\"></i>\r\n\r\n  <input \r\n         type=\"file\"\r\n         name=\"fotopersona\"  \r\n         formControlName=\"fotopersona\"\r\n         (change)=\"handleInputChange($event)\"\r\n         accept=\"image/*\" \r\n         \r\n         />\r\n\r\n </label>\r\n</form>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../../services/chat.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-lista-usuarios',\n  templateUrl: './lista-usuarios.component.html'\n  \n})\nexport class ListaUsuariosComponent implements OnInit {\n\n\n  usuariosActivosObs: Observable<any>;\n\n\n  constructor(public chatService: ChatService) { }\n\n  ngOnInit() {\n\n    this.usuariosActivosObs = this.chatService.getUsuariosActivos();\n\n\n    //emitir obtener usuarios\n    this.chatService.emitirUsuariosActivos();\n  }\n\n}\n","<h1>usuarios</h1>\n\n<hr />\n<ul class=\"list-group\">\n    <li class=\"list-group-item\"\n    *ngFor=\"let usuario of usuariosActivosObs | async\">\n    {{ usuario.nombre}}\n    <span class=\"badge badge-primary\">{{ usuario.sala}}</span>\n    <span  class=\"badge badge-info\">{{ usuario.id}}</span>\n    </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\r\nimport { HAMMER_LOADER } from '@angular/platform-browser';\r\n\r\n\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { DataserviceService } from '../../services/dataservice.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Usermodule } from '../../models/usuario.model';\r\n\r\nimport { Personas } from '../../models/personas';\r\nimport { Roles } from '../../models/roles';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SharedService } from '../../services/serviciocompartido.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n    selector: 'app-menu',\r\n    templateUrl: './menu.component.html',\r\n    styleUrls: ['./menu.component.css']\r\n})\r\n\r\n\r\n\r\n\r\nexport class MenuComponent implements OnInit{\r\n\r\nclickEventsubscription:Subscription;\r\nuser:Personas = new Personas();\r\n\r\nPHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\nconstructor(private httpClient: HttpClient,private servicioCompartido: SharedService, private dataService: DataserviceService,private router:Router){\r\n\r\n    this.clickEventsubscription=this.servicioCompartido.getClickEvent().subscribe(()=>{\r\n        this.incrementCount();\r\n        })\r\n\r\n }\r\n public show:boolean = false;\r\n\r\n        ngOnInit(){\r\n            const id_persona = localStorage.getItem('id_persona');\r\n            this.dataService.getUserId ( localStorage.getItem('id_persona') )\r\n              .subscribe( (respuesta:Personas) => {\r\n                 this.user = respuesta;\r\n                this.user.id_persona=localStorage.getItem('id_persona');\r\n              });\r\n        }\r\n\r\n        \r\n\r\n        incrementCount(){\r\n            this.show = !this.show;\r\n        }\r\n\r\n\r\n}\r\n","<!-- Vertical navbar -->\r\n<div class=\"vertical-nav bg-white\" id=\"sidebar\">\r\n  <div class=\"py-4 px-3 mb-4 bg-light\">\r\n    <div class=\"media d-flex align-items-center\">\r\n\r\n\r\n\r\n\r\n      <div  *ngIf=\"user.imagen==null \">\r\n        <img \r\n        src=\"./assets/nophoto.jpg\" \r\n        width=\"75\"\r\n        class=\"mr-3 rounded-circle img-thumbnail shadow-sm\"\r\n        >\r\n      </div> \r\n    \r\n     \r\n       <div  *ngIf=\"user.imagen\">\r\n        <img \r\n        width=\"75\"\r\n        class=\"mr-3 rounded-circle img-thumbnail shadow-sm\"\r\n        src=\"./assets/loader.gif\" \r\n        jpPreload=\"{{user.imagen}}\">\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"media-body\" >\r\n        <h5 class=\"minnom m-0\">{{ user.nombres }}</h5>\r\n        <p class=\"font-weight-light roledef mt-2 mb-2\">\r\n          <em>{{ user.rol_name }}</em>\r\n        </p>\r\n        \r\n        <a [routerLink]=\"['/', 'perfil', user.id_persona]\" class=\"text-light\">\r\n          <i class=\"fa fa-user mr-1  fa-1g\"></i> <small>{{ \"txtProfile\" | translate }}</small>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n<app-buscador></app-buscador>\r\n\r\n<hr />\r\n\r\n  <p class=\"text-gray font-weight-bold text-uppercase px-3 small mt-2 pb-4 mb-0\">\r\n    {{ \"txtNavegacion\" | translate }}\r\n  </p>\r\n\r\n  <ul class=\"nav flex-column bg-white mb-0\">\r\n\r\n\r\n\r\n\r\n    <!-- <ng-container *ngIf=\"show\"> -->\r\n    <li class=\"nav-item\" routerLinkActive=\"active\" >\r\n      <a [routerLink]=\"['/', 'home']\" class=\"nav-link  \">\r\n        <i class=\"fa fa-home mr-3  fa-fw\"></i>\r\n        Tareas \r\n      </a>\r\n    </li>\r\n  <!-- </ng-container> -->\r\n  <!-- <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a  class=\"nav-link  \">\r\n      <i class=\"fa fa-home mr-3  fa-fw\"></i>\r\n      Turnos anteriores\r\n    </a>\r\n  </li> -->\r\n\r\n\r\n  <ng-container *ngIf=\"user.level_rol === '8'\"> \r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'personas']\" class=\"nav-link \">\r\n        <i class=\"fa fa-users mr-3  fa-fw\"></i>\r\n        {{ \"txtPersonas\" | translate }}\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'historico']\" class=\"nav-link \">\r\n        <i class=\"fa fa-history mr-3  fa-fw\"></i>\r\n        {{ \"txtConsultahistorica\" | translate }}\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a href =\"http://ibmes.site:8081/b/ajax/exportar_registros_tareas_csv.php\" class=\"nav-link \">\r\n        <i class=\"fa fa-download mr-3  fa-fw\"></i>\r\n        {{ \"txtDescargaInformacion\" | translate }}\r\n      </a>\r\n    </li>\r\n  </ng-container>\r\n  </ul>\r\n\r\n  <hr />\r\n\r\n\r\n<ng-container *ngIf=\"user.level_rol === '8'\"> \r\n  <p class=\"text-gray font-weight-bold text-uppercase px-3 small mt-2  pb-4 mb-0\">\r\n   {{ \"txtRolAdministrador\" | translate }}\r\n  </p>\r\n  <ul class=\"nav flex-column bg-white mb-0\">\r\n\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'formlistados']\" class=\"nav-link \">\r\n        <i class=\"fa fa-cog mr-3  fa-fw\"></i>\r\n        Listado de componentes\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'incidencias']\" class=\"nav-link \">\r\n        <i class=\"fa fa-cog mr-3  fa-fw\"></i>\r\n        Incidencias\r\n      </a>\r\n    </li>\r\n\r\n\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'configuracion']\" class=\"nav-link \">\r\n        <i class=\"fa fa-cog mr-3  fa-fw\"></i>\r\n        {{ \"txtConfiguracion\" | translate }}\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</ng-container>\r\n\r\n\r\n</div>\r\n<!-- End vertical navbar -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DiasMes } from '../../models/diasdelmes';\r\nimport { ModeloAccionPuntual } from '../../models/accionpuntual';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModeloPeriodicidad } from '../../models/periodicidad';\r\nimport { TramosSemana } from '../../models/tramossemana';\r\nimport { TramosMes } from '../../models/tramosmes';\r\nimport { TramosDias } from '../../models/tramosdias';\r\nimport Swal from 'sweetalert2';\r\nimport { PeriodicidadMadre } from '../../models/periodicidadmadre';\r\nimport { NoopScrollStrategy } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-accion',\r\n  templateUrl: './accion.component.html'\r\n})\r\n\r\nexport class AccionComponent implements OnInit {\r\n\r\n\r\n  registro: ModeloAccionPuntual = new ModeloAccionPuntual();\r\n  registroRetorno: ModeloPeriodicidad = new ModeloPeriodicidad();\r\n  periodicidades: ModeloPeriodicidad[] = [];\r\n\r\n  datoregistro = {\r\n    id_seguimiento: null,\r\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n    id_persona: null\r\n  }\r\n  madre: PeriodicidadMadre;\r\n\r\n  mad:PeriodicidadMadre = new PeriodicidadMadre();\r\n\r\n  mesActual: number = Date.now();\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  diasMes: DiasMes[] = [];\r\n  tramosSemana: TramosSemana[] = [];\r\n  tramosMes: TramosMes[] = [];\r\n  diasSemana: TramosDias[] = [];\r\n\r\n  datosRecibidos: string;\r\n  dias: any;\r\n  accionForm: FormGroup;\r\n\r\n  selectedHobbiesNames: [string];\r\n\r\n  mesVigente = new Date().getMonth() + 1;\r\n  datosborrado: string;\r\n  repeticiones: PeriodicidadMadre;\r\n  fechafin: any;\r\n  selectedAll: any;\r\n  names: any;\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private httpClient: HttpClient, private perioService: PeriodicidadService) {\r\n\r\n    //cargo los dias del mes en curso\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_dias_mes_actual.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos mes\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_mes.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos dias de la semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_dias_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo el listado de personas para esta ID tarea\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.periodicidades = result;\r\n    }, error => console.error(error));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionForm = this.fb.group({\r\n      checkArrayt: this.fb.array([]),\r\n      fechafin: new FormControl(''),\r\n    //   repeticiones: new FormControl(this.madre),\r\n      repeticiones: ['', Validators.required],\r\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n      id_categoria: '3', //id de accion puntual\r\n      id_persona: localStorage.getItem('id_persona')\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.cargaMadre();\r\n  }\r\n\r\n\r\n\r\n \r\n  selectAll(e) {\r\n    if (this.diasSemana.every(val => val.checked == true)){\r\n      this.diasSemana.forEach(val => { val.checked = null });\r\n    } else {\r\n      this.diasSemana.forEach(val => { val.checked = true });\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  cargaMadre(){\r\n\r\n\r\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id_tarea');\r\n\r\n    this.perioService.getDatosMadre(id_tarea).subscribe( (respuesta: PeriodicidadMadre) => {\r\n    this.madre = respuesta;\r\n    this.mad = respuesta;\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //eliminar registro\r\n  borrarRegistro(identificacion) {\r\n    this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n    this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  }\r\n\r\n  onCheckboxChange(e) {\r\n    const checkArrayt: FormArray = this.accionForm.get('checkArrayt') as FormArray;\r\n    if (e.target.checked) {\r\n\r\n      checkArrayt.push(new FormControl(e.target.value));\r\n\r\n    } else {\r\n\r\n      let i: number = 0;\r\n      checkArrayt.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          checkArrayt.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n\r\n      //quito el check y borro el registro 8no se aprecia porqu eno recarga la pagina)\r\n      this.borrarRegistro(e.target.value);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n  submitForm() {\r\n    const valormes = this.mesVigente;\r\n    // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    const id_tarea: FormControl = this.accionForm.get('id_tarea') as FormControl;\r\n\r\n    this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    Swal.fire({\r\n      text: 'Periodicidad actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: true\r\n    })\r\n    //, this.recarga()\r\n    ;\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card bg-default\">\r\n        <h5 class=\"card-header\">\r\n          Acción puntual\r\n        </h5>\r\n        <div class=\"card-body\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div class=\"row\">\r\n          \r\n            <div class=\"col-md-7\">\r\n          <div [formGroup]=\"accionForm\">\r\n          <input type=\"hidden\" class=\"form-control\"  name=\"id_tarea\"  formControlName=\"id_tarea\"  />\r\n          </div>\r\n\r\n          <div [formGroup]=\"accionForm\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_categoria\"  formControlName=\"id_categoria\"  />\r\n          </div>\r\n\r\n          <div [formGroup]=\"accionForm\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_persona\"  formControlName=\"id_persona\"  />\r\n          </div>\r\n\r\n             <div class=\"row\">\r\n            <div class=\"col-md-7\"><h5 class=\"titolpetit\">Posición en la semana</h5>\r\n            <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-6  minitext\">\r\n\r\n                  <!-- <li> \r\n                     <input type=\"checkbox\" formControlMode=\"selectedAll\" (change)=\"selectAll();\"/> \r\n                  </li> -->\r\n\r\n                  <div *ngFor=\"let dias of diasSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{dias.name}}</div><div class=\"col-4\">\r\n                      <input type=\"checkbox\"  name=\"dias.name{{dias.value}}\" [value]=\"dias.value\" \r\n                      checked=\"{{dias.checked}}\"  \r\n                      (change)=\"onCheckboxChange($event)\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n            \r\n                </div>\r\n                <div class=\"col-6  minitext\">\r\n                  <div *ngFor=\"let tramos of tramosSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{tramos.name}}</div><div class=\"col-4\">\r\n                      \r\n                      <input type=\"checkbox\" [value]=\"tramos.value\" checked=\"{{tramos.checked}}\" (change)=\"onCheckboxChange($event)\" />\r\n                    \r\n                      \r\n                    \r\n                    \r\n                    </div></div>\r\n                  </div>\r\n                </div>\r\n            </div>      \r\n            </div>\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Posición en el mes</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3  minitext\">\r\n                <div class=\"col-12\">\r\n                  <div *ngFor=\"let trames of tramosMes; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{trames.name}}</div><div class=\"col-4 text-right\">\r\n                      <input type=\"checkbox\" [value]=\"trames.value\" checked=\"{{trames.checked}}\" (change)=\"onCheckboxChange($event)\" /></div></div>\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div>\r\n           </div> \r\n\r\n\r\n           <div class=\"row\">\r\n            <div class=\"col-md-12\"><h5 class=\"titolpetit\"></h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12\">\r\n                 \r\n                 \r\n                 \r\n                  <div class=\"row\" [formGroup]=\"accionForm\">\r\n                    <div class=\"col-6\"> \r\n                      <label for=\"dp\">Fecha fin</label>\r\n                      <div class=\"input-group\">\r\n                        <input\r\n                          class=\"form-control\"\r\n                          ngbDatepicker\r\n                          #d=\"ngbDatepicker\"\r\n                          name=\"fechafin\"\r\n                          formControlName=\"fechafin\"\r\n                           placeholder =  {{mad.fechafin}} \r\n                          readonly\r\n                        />\r\n                        <div class=\"input-group-append\">\r\n                          <button\r\n                            class=\"btn btn-outline-secondary calendar\"\r\n                            (click)=\"d.toggle()\"\r\n                            type=\"button\"\r\n                          ></button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"col-6\" [formGroup]=\"accionForm\"><label for=\"repeticiones\">Número de repeticiones</label> \r\n                    \r\n                      <input type=\"number\" class=\"form-control\"  \r\n                      name=\"repeticiones\" \r\n                      value=  {{mad.repeticiones}} \r\n                      formControlName=\"repeticiones\"  \r\n  \r\n                      />\r\n                    \r\n                  \r\n                    </div>\r\n\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div> \r\n          </div>\r\n          </div>\r\n\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Selección de días</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12 m-0 p-0\">\r\n                  <div class=\"row mb-3 p-0 text-center\">\r\n                    <!-- <div class=\"col-12\">\r\n                      <h5 class=\"titolpetit\">{{mesActual | date: 'LLLL'}}</h5>\r\n                    </div> -->\r\n                  </div>\r\n                  <div class=\"row m-0 p-0 checkbox\">\r\n                      <div class=\"col-2  text-center p-0 m-0\" *ngFor=\"let diam of diasMes; let i=index\">\r\n\r\n                          <input type=\"checkbox\" \r\n                          [value]=\"diam.value\" name=\"checkbox{{diam.value}}\" id=\"checkbox{{diam.value}}\" \r\n                         \r\n                          checked=\"{{diam.checked}}\"  \r\n                          (change)=\"onCheckboxChange($event)\"\r\n                          />\r\n                        \r\n\r\n                        <label for=\"checkbox{{diam.value}}\">{{diam.name}}</label>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>      \r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-12 text-center\"><hr class=\"bdott\" />\r\n              <button type=\"submit\" class=\"btn btn-info mt-3\">\r\n                Guardar periodicidad\r\n              </button>\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </form>\r\n\r\n  <script>\r\n    CKEDITOR.replace(\"ibmeditor\", { \r\n    on : {\r\n      // maximize the editor on startup\r\n      'instanceReady' : function( evt ) {\r\n        evt.editor.resize(\"100%\");\r\n      }\r\n    }\r\n  });\r\n  </script>\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DiasMes } from '../../models/diasdelmes';\r\nimport { ModeloAccionPuntual } from '../../models/accionpuntual';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModeloPeriodicidad } from '../../models/periodicidad';\r\nimport { TramosSemana } from '../../models/tramossemana';\r\nimport { TramosMes } from '../../models/tramosmes';\r\nimport { TramosDias } from '../../models/tramosdias';\r\nimport Swal from 'sweetalert2';\r\nimport { PeriodicidadMadre } from '../../models/periodicidadmadre';\r\nimport { NoopScrollStrategy } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-accionhistorico',\r\n  templateUrl: './accionhistorico.component.html'\r\n})\r\n\r\nexport class AccionHistoricoComponent implements OnInit {\r\n\r\n\r\n  registro: ModeloAccionPuntual = new ModeloAccionPuntual();\r\n  registroRetorno: ModeloPeriodicidad = new ModeloPeriodicidad();\r\n  periodicidades: ModeloPeriodicidad[] = [];\r\n\r\n  datoregistro = {\r\n    id_seguimiento: null,\r\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\r\n    id_persona: null\r\n  }\r\n  madre: any;\r\n\r\n  \r\n  mesActual: number = Date.now();\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  diasMes: DiasMes[] = [];\r\n  tramosSemana: TramosSemana[] = [];\r\n  tramosMes: TramosMes[] = [];\r\n  diasSemana: TramosDias[] = [];\r\n  mad:PeriodicidadMadre = new PeriodicidadMadre();\r\n\r\n  datosRecibidos: string;\r\n  dias: any;\r\n  accionForm: FormGroup;\r\n\r\n  selectedHobbiesNames: [string];\r\n\r\n  mesVigente = new Date().getMonth() + 1;\r\n  datosborrado: string;\r\n\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private httpClient: HttpClient, private perioService: PeriodicidadService) {\r\n\r\n    //cargo los dias del mes en curso\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_dias_mes_actual.php').subscribe(result => {\r\n      this.diasMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos mes\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_mes.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos dias de la semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_dias_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo el listado de personas para esta ID tarea\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.periodicidades = result;\r\n    }, error => console.error(error));\r\n\r\n  \r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionForm = this.fb.group({\r\n      checkArrayt: this.fb.array([]),\r\n      fechafin: new FormControl(''),\r\n    //   repeticiones: new FormControl(this.madre),\r\n      repeticiones: ['', Validators.required],\r\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\r\n      id_categoria: '3' //id de accion puntual\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n this.cargaMadre();\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  cargaMadre(){\r\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id')\r\n    this.perioService.getDatosMadre(id_tarea).subscribe( (respuesta: PeriodicidadMadre) => {\r\n    this.madre = respuesta;\r\n    this.mad = respuesta[0];\r\n    this.accionForm.controls['fechafin'].setValue(this.madre[0]['fechafin']);\r\n    this.accionForm.controls['repeticiones'].setValue(this.madre[0]['repeticiones']);\r\n    console.log(this.mad.fechafin);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  //   this.perioService.getDatosMadre (this.datoregistro.id_tarea)\r\n  //     .subscribe( (\r\n  //       respuesta:PeriodicidadMadre) => {\r\n  //        this.madre = respuesta;\r\n  //        console.log(this.madre);\r\n  //     });\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //eliminar registro      \r\n  borrarRegistro(identificacion) {\r\n    this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n    this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  }\r\n\r\n  onCheckboxChange(e) {\r\n    const checkArrayt: FormArray = this.accionForm.get('checkArrayt') as FormArray;\r\n    if (e.target.checked) {\r\n      checkArrayt.push(new FormControl(e.target.value));\r\n    } else {\r\n      let i: number = 0;\r\n      checkArrayt.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          checkArrayt.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n      //quito el check y borro el registro 8no se aprecia porqu eno recarga la pagina)\r\n      this.borrarRegistro(e.target.value);\r\n    }\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n  submitForm() {\r\n    const valormes = this.mesVigente;\r\n    // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    const id_tarea: FormControl = this.accionForm.get('id_tarea') as FormControl;\r\n\r\n    this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    Swal.fire({\r\n      text: 'Periodicidad actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    //, this.recarga()\r\n    ;\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card bg-default\">\r\n        <h5 class=\"card-header\">\r\n          Acción puntual\r\n        </h5>\r\n        <div class=\"card-body\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div class=\"row\">\r\n          \r\n            <div class=\"col-md-7\">\r\n          <div [formGroup]=\"accionForm\">\r\n          <input type=\"hidden\" class=\"form-control\"  name=\"id_tarea\"  formControlName=\"id_tarea\"  />\r\n          </div>\r\n\r\n          <div [formGroup]=\"accionForm\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_categoria\"  formControlName=\"id_categoria\"  />\r\n          </div>\r\n\r\n             <div class=\"row\">\r\n            <div class=\"col-md-7\"><h5 class=\"titolpetit\">Posición en la semana</h5>\r\n            <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-6  minitext\">\r\n\r\n\r\n\r\n                  <div *ngFor=\"let dias of diasSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{dias.name}}</div><div class=\"col-4\">\r\n                      <input type=\"checkbox\"  name=\"dias.name{{dias.value}}\" [value]=\"dias.value\" \r\n                      checked=\"{{dias.checked}}\"  \r\n                      (change)=\"onCheckboxChange($event)\"\r\n                      disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n\r\n               \r\n                </div>\r\n                <div class=\"col-6  minitext\">\r\n                  <div *ngFor=\"let tramos of tramosSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{tramos.name}}</div><div class=\"col-4\">\r\n                      \r\n                      <input type=\"checkbox\" \r\n                      disabled\r\n                      [value]=\"tramos.value\" checked=\"{{tramos.checked}}\" (change)=\"onCheckboxChange($event)\" />\r\n                    \r\n                      \r\n                    \r\n                    \r\n                    </div></div>\r\n                  </div>\r\n                </div>\r\n            </div>      \r\n            </div>\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Posición en el mes</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3  minitext\">\r\n                <div class=\"col-12\">\r\n                  <div *ngFor=\"let trames of tramosMes; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{trames.name}}</div><div class=\"col-4 text-right\">\r\n                      <input type=\"checkbox\" \r\n                      disabled\r\n                      [value]=\"trames.value\" checked=\"{{trames.checked}}\" (change)=\"onCheckboxChange($event)\" /></div></div>\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div>\r\n           </div> \r\n\r\n\r\n           <div class=\"row\">\r\n            <div class=\"col-md-12\"><h5 class=\"titolpetit\"></h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"row\" [formGroup]=\"accionForm\">\r\n                    <div class=\"col-6\">\r\n                      \r\n                      <label for=\"dp\">Fecha fin</label>\r\n                      <div class=\"input-group\">\r\n                        <input\r\n                          class=\"form-control\"\r\n                          ngbDatepicker\r\n                          #d=\"ngbDatepicker\"\r\n                          name=\"fechafin\"\r\n                          formControlName=\"fechafin\"\r\n                          disabled\r\n                          placeholder =  {{mad.fechafin}} \r\n                          readonly\r\n                        />\r\n                        <div class=\"input-group-append\">\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"col-6\" [formGroup]=\"accionForm\"><label for=\"repeticiones\">Número de repeticiones</label> \r\n                    \r\n                      <input type=\"number\" class=\"form-control\"  \r\n                      name=\"repeticiones\" \r\n                      formControlName=\"repeticiones\"  \r\n                      disabled\r\n                      />\r\n                    \r\n                  \r\n                    </div>\r\n\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div> \r\n          </div>\r\n          </div>\r\n\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Selección de días</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12 m-0 p-0\">\r\n                  <div class=\"row mb-3 p-0 text-center\">\r\n                    <!-- <div class=\"col-12\">\r\n                      <h5 class=\"titolpetit\">{{mesActual | date: 'LLLL'}}</h5>\r\n                    </div> -->\r\n                  </div>\r\n                  <div class=\"row m-0 p-0 checkbox\">\r\n                      <div class=\"col-2  text-center p-0 m-0\" *ngFor=\"let diam of diasMes; let i=index\">\r\n\r\n                          <input type=\"checkbox\" \r\n                          [value]=\"diam.value\" name=\"checkbox{{diam.value}}\" id=\"checkbox{{diam.value}}\" \r\n                         \r\n                          checked=\"{{diam.checked}}\"  \r\n                          (change)=\"onCheckboxChange($event)\"\r\n                          disabled\r\n                          />\r\n                        \r\n\r\n                        <label for=\"checkbox{{diam.value}}\">{{diam.name}}</label>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>      \r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-12 text-center\"><hr class=\"bdott\" />\r\n              <!-- <button type=\"submit\" class=\"btn btn-info mt-3\">\r\n                Guardar periodicidad\r\n              </button> -->\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </form>\r\n\r\n  <script>\r\n    CKEDITOR.replace(\"ibmeditor\", { \r\n    on : {\r\n      // maximize the editor on startup\r\n      'instanceReady' : function( evt ) {\r\n        evt.editor.resize(\"100%\");\r\n      }\r\n    }\r\n  });\r\n  </script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DiasMes } from '../../models/diasdelmes';\r\nimport { ModeloAccionPuntual } from '../../models/accionpuntual';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModeloPeriodicidad } from '../../models/periodicidad';\r\nimport { TramosSemana } from '../../models/tramossemana';\r\nimport { TramosMes } from '../../models/tramosmes';\r\nimport { TramosDias } from '../../models/tramosdias';\r\nimport Swal from 'sweetalert2';\r\nimport { PeriodicidadMadre } from '../../models/periodicidadmadre';\r\nimport { NoopScrollStrategy } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-check',\r\n  templateUrl: './check.component.html'\r\n})\r\n\r\nexport class CheckComponent implements OnInit {\r\n\r\n\r\n  registro: ModeloAccionPuntual = new ModeloAccionPuntual();\r\n  registroRetorno: ModeloPeriodicidad = new ModeloPeriodicidad();\r\n  periodicidades: ModeloPeriodicidad[] = [];\r\n\r\n  datoregistro = {\r\n    id_seguimiento: null,\r\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n    id_persona: null\r\n  }\r\n  madre: PeriodicidadMadre;\r\n\r\n  mad:PeriodicidadMadre = new PeriodicidadMadre();\r\n\r\n  mesActual: number = Date.now();\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  diasMes: DiasMes[] = [];\r\n  tramosSemana: TramosSemana[] = [];\r\n  tramosMes: TramosMes[] = [];\r\n  diasSemana: TramosDias[] = [];\r\n\r\n  datosRecibidos: string;\r\n  dias: any;\r\n  accionFormCheck: FormGroup;\r\n\r\n  selectedHobbiesNames: [string];\r\n\r\n  mesVigente = new Date().getMonth() + 1;\r\n  datosborrado: string;\r\n  repeticiones: PeriodicidadMadre;\r\n  fechafin: any;\r\n\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private httpClient: HttpClient, private perioService: PeriodicidadService) {\r\n\r\n    //cargo los dias del mes en curso\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_dias_mes_actual.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos mes\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_mes.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos dias de la semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_dias_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo el listado de personas para esta ID tarea\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.periodicidades = result;\r\n    }, error => console.error(error));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionFormCheck = this.fb.group({\r\n      checkArrayt: this.fb.array([]),\r\n      fechafin: new FormControl(''),\r\n    //   repeticiones: new FormControl(this.madre),\r\n      repeticiones: ['', Validators.required],\r\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n      id_categoria: '1', //id de accion puntual\r\n      id_persona: localStorage.getItem('id_persona')\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n this.cargaMadre();\r\n\r\n  }\r\n\r\n\r\n  cargaMadre(){\r\n\r\n\r\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id_tarea');\r\n\r\n    this.perioService.getDatosMadre(id_tarea).subscribe( (respuesta: PeriodicidadMadre) => {\r\n    this.madre = respuesta;\r\n    this.mad = respuesta;\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //eliminar registro\r\n  borrarRegistro(identificacion) {\r\n    this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n    this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  }\r\n\r\n  onCheckboxChange(e) {\r\n    const checkArrayt: FormArray = this.accionFormCheck.get('checkArrayt') as FormArray;\r\n    if (e.target.checked) {\r\n      checkArrayt.push(new FormControl(e.target.value));\r\n    } else {\r\n      let i: number = 0;\r\n      checkArrayt.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          checkArrayt.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n      //quito el check y borro el registro 8no se aprecia porqu eno recarga la pagina)\r\n      this.borrarRegistro(e.target.value);\r\n    }\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n  submitForm() {\r\n    const valormes = this.mesVigente;\r\n    // const fechafin: FormControl = this.accionFormCheck.get('fechafin') as FormControl;\r\n    // const repeticiones: FormControl = this.accionFormCheck.get('repeticiones') as FormControl;\r\n    const id_tarea: FormControl = this.accionFormCheck.get('id_tarea') as FormControl;\r\n\r\n    this.perioService.altaRegistrochecks(this.accionFormCheck.value).subscribe();\r\n    Swal.fire({\r\n      text: 'Periodicidad actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    //, this.recarga()\r\n    ;\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<form [formGroup]=\"accionFormCheck\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n  <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card bg-default\">\r\n          <h5 class=\"card-header\">\r\n            Check\r\n          </h5>\r\n          <div class=\"card-body\">\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n            <div class=\"row\">\r\n            \r\n              <div class=\"col-md-7\">\r\n            <div [formGroup]=\"accionFormCheck\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_tarea\"  formControlName=\"id_tarea\"  />\r\n            </div>\r\n  \r\n            <div [formGroup]=\"accionFormCheck\">\r\n              <input type=\"hidden\" class=\"form-control\"  name=\"id_categoria\"  formControlName=\"id_categoria\"  />\r\n            </div>\r\n\r\n            \r\n          <div [formGroup]=\"accionFormCheck\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_persona\"  formControlName=\"id_persona\"  />\r\n          </div>\r\n  \r\n               <div class=\"row\">\r\n              <div class=\"col-md-7\"><h5 class=\"titolpetit\">Posición en la semana</h5>\r\n              <hr class=\"bdott\" />\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-6  minitext\">\r\n  \r\n  \r\n  \r\n                    <div *ngFor=\"let dias of diasSemana; let i=index\">\r\n                      <div class=\"row\"><div class=\"col-8\">{{dias.name}}</div><div class=\"col-4\">\r\n                        <input type=\"checkbox\"  name=\"dias.name{{dias.value}}\" [value]=\"dias.value\" \r\n                        checked=\"{{dias.checked}}\"  \r\n                        (change)=\"onCheckboxChange($event)\"\r\n                       \r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    </div>\r\n  \r\n                 \r\n                  </div>\r\n                  <div class=\"col-6  minitext\">\r\n                    <div *ngFor=\"let tramos of tramosSemana; let i=index\">\r\n                      <div class=\"row\"><div class=\"col-8\">{{tramos.name}}</div><div class=\"col-4\">\r\n                        \r\n                        <input type=\"checkbox\" \r\n                        \r\n                        [value]=\"tramos.value\" checked=\"{{tramos.checked}}\" (change)=\"onCheckboxChange($event)\" />\r\n                      \r\n                        \r\n                      \r\n                      \r\n                      </div></div>\r\n                    </div>\r\n                  </div>\r\n              </div>      \r\n              </div>\r\n              <div class=\"col-md-5\"><h5 class=\"titolpetit\">Posición en el mes</h5>\r\n                <hr class=\"bdott\" />\r\n                <div class=\"row mt-3  minitext\">\r\n                  <div class=\"col-12\">\r\n                    <div *ngFor=\"let trames of tramosMes; let i=index\">\r\n                      <div class=\"row\"><div class=\"col-8\">{{trames.name}}</div><div class=\"col-4 text-right\">\r\n                        <input type=\"checkbox\" \r\n                        \r\n                        [value]=\"trames.value\" checked=\"{{trames.checked}}\" (change)=\"onCheckboxChange($event)\" /></div></div>\r\n                    </div>\r\n                  </div>\r\n                </div>      \r\n              </div>\r\n             </div> \r\n  \r\n  \r\n             <div class=\"row\">\r\n              <div class=\"col-md-12\"><h5 class=\"titolpetit\"></h5>\r\n                <hr class=\"bdott\" />\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-12\">\r\n                    <div class=\"row\" [formGroup]=\"accionFormCheck\">\r\n                      <div class=\"col-6\">\r\n                        \r\n                        <!-- <label for=\"dp\">Fecha fin</label>\r\n                        <div class=\"input-group\">\r\n                          <input\r\n                            class=\"form-control\"\r\n                            ngbDatepicker\r\n                            #d=\"ngbDatepicker\"\r\n                            name=\"fechafin\"\r\n                            formControlName=\"fechafin\"\r\n                            disabled\r\n                            placeholder =  {{mad.fechafin}} \r\n                            readonly\r\n                          />\r\n                          <div class=\"input-group-append\">\r\n                            \r\n                          </div>\r\n                        </div> -->\r\n                      </div>\r\n  \r\n  \r\n  \r\n  \r\n                      <div class=\"col-6\" [formGroup]=\"accionFormCheck\">\r\n                        \r\n                        <!-- <label for=\"repeticiones\">Número de repeticiones</label> \r\n                      \r\n                        <input type=\"number\" class=\"form-control\"  \r\n                        name=\"repeticiones\" \r\n                        formControlName=\"repeticiones\"  \r\n                        disabled\r\n                        />\r\n                       -->\r\n                    \r\n                      </div>\r\n  \r\n  \r\n  \r\n  \r\n                    </div>\r\n                  </div>\r\n                </div>      \r\n              </div> \r\n            </div>\r\n            </div>\r\n  \r\n              <div class=\"col-md-5\"><h5 class=\"titolpetit\">Selección de días</h5>\r\n                <hr class=\"bdott\" />\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-12 m-0 p-0\">\r\n                    <div class=\"row mb-3 p-0 text-center\">\r\n                      <!-- <div class=\"col-12\">\r\n                        <h5 class=\"titolpetit\">{{mesActual | date: 'LLLL'}}</h5>\r\n                      </div> -->\r\n                    </div>\r\n                    <div class=\"row m-0 p-0 checkbox\">\r\n                        <div class=\"col-2  text-center p-0 m-0\" *ngFor=\"let diam of diasMes; let i=index\">\r\n  \r\n                            <input type=\"checkbox\" \r\n                            [value]=\"diam.value\" name=\"checkbox{{diam.value}}\" id=\"checkbox{{diam.value}}\" \r\n                           \r\n                            checked=\"{{diam.checked}}\"  \r\n                            (change)=\"onCheckboxChange($event)\"\r\n                            \r\n                            />\r\n                          \r\n  \r\n                          <label for=\"checkbox{{diam.value}}\">{{diam.name}}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>      \r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12 text-center\"><hr class=\"bdott\" />\r\n                 <button type=\"submit\" class=\"btn btn-info mt-3\">\r\n                  Guardar periodicidad\r\n                </button> \r\n               \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </form>\r\n  \r\n    <script>\r\n      CKEDITOR.replace(\"ibmeditor\", { \r\n      on : {\r\n        // maximize the editor on startup\r\n        'instanceReady' : function( evt ) {\r\n          evt.editor.resize(\"100%\");\r\n        }\r\n      }\r\n    });\r\n    </script>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  ","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router } from '@angular/router';\nimport { DataserviceService } from '../services/dataservice.service';\n\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardGuard implements CanActivate  {\n \n  constructor(private dataService: DataserviceService,private router: Router  ) {}\n \n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    const routeurl: string = state.url;\n    return this.isLogin(routeurl);\n  }\n  isLogin(routeurl: string) {\n    if (this.dataService.isLoggedIn()) {\n      return true;\n    }\n    this.dataService.redirectUrl = routeurl;\n    this.router.navigate(['/login'], {queryParams: { returnUrl: routeurl }} );\n  }\n}\n ","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { WebsocketService } from '../services/websocket.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioGuardService implements CanActivate{\n\n  constructor(public wsService: WebsocketService,\n    private router: Router) { }\n\n\n\n  canActivate(){\n    if( this.wsService.getUsuario() ) {\n      return true;\n    } else {\n      this.router.navigateByUrl('/');\n      return false;\n    }\n  }\n\n\n\n\n\n\n}\n","export class ModeloAccionPuntual {\n  id_periodicidad: string;\n  id_categoria: string;\n  id_period_madre: string;\n  fecha: string;\n  id_accion: string;\n  fechafin: string;\n  repeticiones: string;\n  name: string;\n  value: string;\n  id_tarea: string;\n  checked: string;\n  id_persona: string;\n}\n","export class Ayuda {\n  id_ayuda: string;\n  id_persona_log: string;\n  ayudatitulo: string;\n  ayudatexto: string;\n  numauto: string;\n}\n","\r\n\r\nexport class Constantes {\r\n\r\n  //public static SERVER_API:string;\r\n    public static API_SERVER = 'http://ibmes.site:8081/b';\r\n    //public static API_SERVER = 'http://localhost/b';\r\n    public static nombreTurnos = 'turnos';\r\n    public static ARND =  Math.floor(100000000 + Math.random() * 900000000);\r\n    public static BRND =  Math.floor(100000000 + Math.random() * 900000000);\r\n    public static CRND =  Math.floor(100000000000 + Math.random() * 900000000000);\r\n    public static DRND =  Math.floor(100000000000 + Math.random() * 900000000000);\r\n\r\n\r\n  }\r\n  \r\n \r\n","export class Incidencia {\n  id_persona_log: string;\n  nombres: string;\n  fecha:string;\n  resuelta:string;\n  fecharesuelta:string;\n  id_incidencias: string;\n  enunciado: string;\n  textoincidencia: string;\n  imagenincidencia:string;\n  token_incidencia:string;\n}\n","export class Issue {\n  id_tarea: string;\n  tarea: string;\n  ibm_hora: string;\n  hora: string;\n  estatus: string;\n  observaciones: string;\n  fecha: string;\n  fechamodi: string;\n  id_categoria: string;\n  id_persona: string;\n  flag_visibilidad: string;\n  prioridad: string;\n  decidecategoria: string;\nid_rol: string;\n}\n","export class IssueHistorico {\n\nid_log: string;\nid_tarea: string;\nfecha: string;\nnombres: string;\ndescripcion: string;\ntarea: string;\nid_persona: string;             \n\n}\n","export class ModeloPeriodicidad {\n\n\n  id_periodicidad: string;\n  id_categoria: string;\n  id_period_madre: string;\n  id_tarea: string;\n  value: string;\n  fecha: string;\n  fechafin: string;\n  repeticiones: string;\n  name: string;\n  checked: string;\n\n\n}\n\n","export class PeriodicidadMadre {\n\n    id_period_madre: string;\n    fecha: string;\n    id_tarea: string;\n    value: string;\n    fechafin: string;\n    repeticiones: string;\n\n\n}\n\n","export class Personas {\n  id_persona: string;\n  id_persona_log: string;\n  nombres: string;\n  telefono: string;\n  public email: string;\n  direccion: string;\n  registrado: string;\n  id_rol: string;\n  rol_name: string;\n  level_rol: string;\n  password: string;\n  imagen: string;\n\n\n\n  // constructor( email: string ){\n  //     this.email = email;\n  // }\n\n\n}\n","export class Seguimiento {\n  id_seguimiento: string;\n  id_persona: string;\n  id_tarea: string;\n\n}\n","export class Turnos {\n    horainicio: string;\n    horafin: string;\n    id_turno: string;\n    turno: string;\n    tipo_turno: string;\n    turno_horario: string;\n    id_persona: string;\n    id_rol: string;\n}\n","export class Usuario {\r\npublic id_persona: string;\r\n    public nombre: string;\r\n\r\n    constructor( nombre: string ){\r\n        this.nombre = nombre;\r\n    }\r\n\r\n}","\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport Swal from 'sweetalert2';\nimport { Observable } from 'rxjs';\nimport { FormControl, Validators, FormGroup, FormBuilder, NgForm } from '@angular/forms';\nimport { Constantes } from '../models/constantes.model';\nimport { AdminServicioService } from '../services/admin-servicio.service';\nimport { Personas } from '../models/personas';\nimport { Incidencia } from '../models/incidencia';\n\n\n\n@Component({\n  selector: 'app-abririncidencia',\n  templateUrl: './abririncidencia.component.html',\n  styles: [\n  ],\n})\n\nexport class AbririncidenciaComponent implements OnInit {\n\n  personas: Personas[] = [];\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  personasdatos: Personas = new Personas();\n  incidenciadatos: Incidencia = new Incidencia();\n\n  public imagePath;\n  imgURL: any;\n  public message: string;\n  private imageSrc: string = '';\n  datosFoto: string;\n  incidenciaForm = new FormGroup({\n      id_persona_log: new FormControl(),\n      nombres: new FormControl(),\n      enunciado: new FormControl(),\n      textoincidencia: new FormControl(),\n      imagenincidencia: new FormControl(),\n      tokenIncidencia: new FormControl()\n  });\n  base64textString: string;\n\n  constructor(private httpClient: HttpClient,private formBuilder: FormBuilder,private adminService: AdminServicioService) {\n\n\n    const id_persona = localStorage.getItem('id_persona');\n    this.adminService.getPersonas(id_persona)\n      .subscribe((respuesta: Personas) => {\n        this.personasdatos = respuesta;\n\n        this.incidenciaForm = formBuilder.group({\n          id_persona_log: id_persona,\n          nombres: this.personasdatos.nombres,\n          imagenincidencia: [''],\n          tokenIncidencia: [''],\n          enunciado: \n              ['',\n                  [\n                    Validators.minLength(10),\n                    Validators.maxLength(140),\n                    Validators.required\n                  ]\n              ],\n          textoincidencia: \n              ['',\n                  [\n                    Validators.minLength(10),\n                    Validators.maxLength(2440),\n                    Validators.required\n                  ]\n              ]\n        });\n      \n      });\n\n\n\n\n\n\n   }\n\n  ngOnInit(){\n\n\n\n\n\n  }\n\n  recarga() {\n    location.reload();\n  }\n\n\n\n\n  preview(e) {\n    var files = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    if (files.length === 0)\n      return;\n \n      var pattern = /image-*/;\n      if (!files.type.match(pattern)) {\n        alert('invalid format');\n        return;\n      }\n \n    var reader = new FileReader();\n    this.imagePath = files;\n    reader.readAsDataURL(files); \n    reader.onload = (_event) => { \n      this.imgURL = reader.result; \n      if (this.imgURL.length * 2  > 2**21) {  \n          Swal.fire({\n            title: 'ERROR en la imagen',\n            text: 'La imagen es mayor de 2Mb',\n            icon: 'success',\n            showConfirmButton: false\n          })\n       }\n    }\n  }\n\n makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n }\n \n\n  \n  guardaryenviarIncidencia(form: NgForm) { \n\n      if (this.incidenciaForm.valid) {\n        this.incidenciaForm.value.imagenincidencia = this.imgURL;\n        this.incidenciaForm.value.tokenIncidencia = this.makeid(15);\n        let peticion: Observable<any>;\n        peticion = this.adminService.guardarNuevancidencia(this.incidenciaForm.value);\n        peticion.subscribe(respuesta => {\n          Swal.fire({\n            title: this.incidenciadatos.enunciado,\n            text: `La incidencia ha sido abiertacon el token ${this.incidenciaForm.value.tokenIncidencia}`,\n            icon: 'success',\n            showConfirmButton: false\n          })\n           , this.recarga()\n         ;\n        });\n    \n\n      } \n    \n   }\n\n\n\n\n\n\n\n}\n","<div class=\"page-content\" id=\"content\">\n    <app-header></app-header>\n    <app-menu></app-menu>\n  \n    <div class=\"row m-2\">\n      <div class=\"col-md-12 mt-4\">\n        <h3>{{ \"txtRegistros\" | translate }}</h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n              <a [routerLink]=\"['/', 'home']\">Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\n              Abrir incidencia\n            </li>\n          </ol>\n        </nav>\n      </div>\n    </div>\n    <form #f=\"ngForm\" (ngSubmit)=\"guardaryenviarIncidencia( f )\" [formGroup]=\"incidenciaForm\">\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-6 alturaminima mb-5\">\n        <p>Si tiene alguna sugerencia o incidencia que comunicarnos con respecto al funcionamiento de esta aplicación, por favor, haga uso del siguiente formulario.</p>\n        \n        <hr class=\"mb-3 mt-2\" />\n\n      \n                <label>Enunciado</label>\n                <input type=\"text\"\n                placeholder=\"Escriba un enunciado\" \n                autocomplete=\"off\" \n                class=\"form-control input-sm mb-3\"\n                value=\"\"\n                formControlName=\"enunciado\">\n\n                <label>Texto</label>\n                <textarea rows=\"10\"\n                placeholder=\"Escriba un texto\" \n                class=\"form-control  input-sm mb-3\"\n                formControlName=\"textoincidencia\"></textarea>\n\n\n            <button  \n            [disabled]=\"incidenciaForm.invalid\" \n            class=\"btn btn-info\">\n              Enviar incidencia\n          </button>\n\n  \n        \n\n\n      </div>\n      <div class=\"col-md-6 alturaminima mb-5\">\n        <div class=\"row\">\n            <div class=\"col-12 text-center\"><img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\"></div>\n        </div>\n        <div class=\"row\">\n        <div class=\"col-12 text-center mt-4\">\n\n\n\n                        <label for=\"imagenincidencia\" class=\"fileContainer\"><i class=\"fa fa-camera\"></i>\n                        <input \n                               type=\"file\"\n                               id=\"imagenincidencia\"\n                               name=\"imagenincidencia\"  \n                               formControlName=\"imagenincidencia\"\n                  \n                               accept=\"image/*\" \n                               (change)=\"preview($event)\"\n                               />\n                      \n                       </label>\n                       <hr />\n                       <p class=\"mt-2\">Si desea adjuntar una captura de pantalla, por favor pulse aquí</p>\n                    </div>\n                \n                </div>\n  \n\n      </div>\n    </div>\n</form> \n    <app-footer></app-footer>\n  </div>\n  ","import {Component, ViewChild} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { ApiService } from '../services/apiregistros.service';\nimport { Issue } from  '../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../models/constantes.model';\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { Router } from '@angular/router';\nimport { Roles } from '../models/roles';\n\nimport { Estados } from '../models/estados';\nimport { Categorias } from '../models/categorias';\nimport { FullCalendarOptions, EventObject } from 'ngx-fullcalendar';\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\n\n\n\n@Component({\n  selector: 'app-alta',\n  templateUrl: './alta.component.html'\n  \n})\n\nexport class AltaComponent {\n\n    model: NgbDateStruct;\n    registro: Issue = new Issue();\n    options: FullCalendarOptions;\n   events: EventObject[];\n\n    public Editor = ClassicEditor;\n    public onReady( editor ) {\n        editor.ui.getEditableElement().parentElement.insertBefore(\n            editor.ui.view.toolbar.element,\n            editor.ui.getEditableElement()\n        );\n    }\n    roles: Roles[] = [];\n   // recurrencias: Recurrencias[] = [];\n    estados: Estados [] = [];\n    categorias: Categorias [] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n    personas:Issue[] = [];\n    issue: Issue = new Issue();\n    editing = {};\n    rows = [];\n    temp = [];\n\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n    datoregistro = {\n        id_tarea: null,\n        tarea: null,\n        id_persona: localStorage.getItem('id_persona'),\n        ibm_hora: null,\n        estatus: null,\n        observaciones: null,\n        id_categoria:  null,\n        flag_visibilidad:  null,\n        prioridad:  null,\n        id_rol:null\n    }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id: any;\n  valor: any;\n  ever: any;\n  datos: string;\n\n  \n  constructor(private httpClient: HttpClient, private apiService: ApiService, private router: Router) {\n\n\n        //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read_noadmin.php').subscribe(result => {\n            this.roles = result;\n          }, error => console.error(error));\n \n\n        //cargo las categorias para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/categorias_read.php').subscribe(result => {\n            this.categorias = result;\n          }, error => console.error(error));                   \n\n\n\n  }\n\n  ngOnInit(){\n\n\n\n\n\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n    this.router.navigate(['/home']);\n  }\n\n\n  //alta de registro\n  altaRegistro() {\n\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.tarea==null || this.datoregistro.ibm_hora==null ){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n\n          console.log(this.datoregistro);\n          Swal.fire({\n            title: this.datoregistro.tarea,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : true\n          });\n\n          //una vez creada la tarea, obtenemos el lastId para abrir la tarea creada.\n          this.apiService.getLastId()\n          .subscribe((respuesta: any) => {\n            this.registro = respuesta;\n            const identif = JSON.stringify(this.registro).slice(1, -1);\n            const identificador = Constantes.ARND+identif+Constantes.BRND;\n           \n            this.router.navigateByUrl(`/detalle/${identificador}`);\n          });\n\n          // ,this.recarga()\n          // ;      \n        });\n    }\n  }\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ \"txtNuevoRegistro\" | translate }} \n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-6 pt-5\">\n      <div class=\"form-group\">\n\n\n\n        <input\n        #id_persona=\"ngModel\"\n        name=\"id_persona\"\n        type=\"hidden\"\n        [(ngModel)]=\"datoregistro.id_persona\"\n      />\n\n        <label for=\"tarea\">{{ \"txtTarea\" | translate }}</label>\n        <input\n          required\n          style=\"background-color: white;\"\n          placeholder=\"Resumen tarea\"\n          class=\"form-control form-control-sm\"\n          [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n          #tarea=\"ngModel\"\n          required\n          minlength=\"4\"\n          name=\"tarea\"\n          type=\"text\"\n          [(ngModel)]=\"datoregistro.tarea\"\n        />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n\n\n\n\n          <div class=\"form-group 24hr-example\">\n            <label for=\"ibm_hora\">{{ \"txtHora\" | translate }}</label>\n            <input\n              required\n              aria-label=\"24hr format\"\n              style=\"background-color: white;\"\n              placeholder=\"00:00\"\n              class=\"form-control form-control-sm reloj\"\n              [class.is-invalid]=\"ibm_hora.invalid && ibm_hora.touched\"\n              #ibm_hora=\"ngModel\"\n              minlength=\"5\"\n              maxlength=\"5\"\n              type=\"text\"\n              [(ngModel)]=\"datoregistro.ibm_hora\"\n              [ngxTimepicker]=\"fullTime\"\n              [format]=\"24\"\n              readonly\n            />\n            <ngx-material-timepicker\n              #fullTime\n              [minutesGap]=\"15\"\n            ></ngx-material-timepicker>\n          </div>\n\n\n\n\n\n          \n        </div>\n\n        \n    \n<div class=\"form-group\">\n         \n            <label for=\"id_rol\">Rol</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"id_rol\"\n              placeholder=\"Seleccione categoria\"\n              #id_rol=\"ngModel\"\n              [(ngModel)]=\"datoregistro.id_rol\"\n            >\n              <option [ngValue]=\"null\">Seleccione Rol</option>\n              <option\n                *ngFor=\"let rol of roles\"\n                value=\"{{ rol.id_rol }}\"\n              >\n                {{ rol.rol_name }}\n              </option>\n            </select>\n</div> \n\n<!-- <div class=\"form-group\">\n         \n            <label for=\"id_categoria\">Categoría</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"id_categoria\"\n              placeholder=\"Seleccione categoria\"\n              #id_categoria=\"ngModel\"\n              [(ngModel)]=\"datoregistro.id_categoria\"\n            >\n              <option [ngValue]=\"null\">Seleccione Categoría</option>\n              <option\n                *ngFor=\"let categoria of categorias\"\n                value=\"{{ categoria.id_categoria }}\"\n              >\n                {{ categoria.categoria_name }}\n              </option>\n            </select>\n</div> -->\n\n\n    \n        <div class=\"col-md-6\">\n            <label for=\"prioridad\">Prioridad</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"prioridad\"\n              placeholder=\"Seleccione prioridad\"\n              #prioridad=\"ngModel\"\n              [(ngModel)]=\"datoregistro.prioridad\"\n            >\n              <option [ngValue]=\"null\" selected>Seleccione prioridad</option>\n              <option value=\"alta\">Alta</option>\n              <option value=\"media\">Media</option>\n              <option value=\"baja\">Baja</option>\n            </select>\n        </div>\n        <div class=\"col-md-2\"></div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <!-- <div class=\"form-group\">\n            <label for=\"tarea\">Asignar persona</label>\n            <input\n              required\n              style=\"background-color: white;\"\n              placeholder=\"Resumen tarea\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n              #tarea=\"ngModel\"\n              required\n              minlength=\"4\"\n              name=\"tarea\"\n              type=\"text\"\n              [(ngModel)]=\"datoregistro.tarea\"\n            />\n          </div> -->\n        </div>\n        <div class=\"col-md-4\">\n\n            \n<!-- \n\n            <div class=\"form-group\">\n                <label for=\"id_recurrencia\">Recurrencia</label>\n                <select\n                  required\n                  style=\"background-color: white;\"\n                  class=\"form-control form-control-sm\"\n                  name=\"id_recurrencia\"\n                  #estatus=\"ngModel\"\n                  [(ngModel)]=\"datoregistro.id_recurrencia\"\n                >\n                  <option [ngValue]=\"null\">Seleccione recurrencia</option>\n                  <option\n                    *ngFor=\"let recurrencia of recurrencias\"\n                    value=\"{{ recurrencia.id_recurrencia }}\"\n                  >\n                    {{ recurrencia.recurrencia_name }}\n                  </option>\n                </select>\n              </div>\n\n -->\n\n\n\n\n\n        </div>\n        <div class=\"col-md-4\">\n          <div *ngIf=\"datoregistro.id_categoria === '3'\">\n            <label for=\"dp\">Fecha fin acción</label>\n            <div class=\"input-group\">\n              <input\n                class=\"form-control\"\n                placeholder=\"yyyy-mm-dd\"\n                name=\"dp\"\n                [(ngModel)]=\"model\"\n                ngbDatepicker\n                #d=\"ngbDatepicker\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  class=\"btn btn-outline-secondary calendar\"\n                  (click)=\"d.toggle()\"\n                  type=\"button\"\n                ></button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-4\">\n\n        </div>\n        <div class=\"col-4\"></div>\n        <div class=\"col-4\"></div>\n      </div>\n    </div>\n    <div class=\"col-md-6 pt-5\">\n      <div class=\"form-group\">\n        <label for=\"observaciones\">{{ \"txtObservaciones\" | translate }}</label>\n\n        <ckeditor\n          (ready)=\"onReady($event)\"\n          rows=\"10\"\n          placeholder=\"Observaciones\"\n          #observaciones=\"ngModel\"\n          maxlength=\"2000\"\n          name=\"observaciones\"\n          [(ngModel)]=\"datoregistro.observaciones\"\n          [editor]=\"Editor\"\n          data=\"\"\n        ></ckeditor>\n      </div>\n\n      <div class=\"form-group text-center\">\n        <button (click)=\"altaRegistro()\" class=\"btn btn-primary colortopacio\">\n          {{ \"txtAgregar\" | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-configuracion',\r\n    templateUrl: './configuracion.pages.html'\r\n})\r\n\r\nexport class ConfiguracionPage {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"page-content\" id=\"content\">\r\n  <app-header></app-header>\r\n  <app-menu></app-menu>\r\n\r\n  \r\n  <div class=\"row m-2\">\r\n    <div class=\"col-md-12 mt-4\">\r\n      <h3>Configuración</h3>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\"><a [routerLink]=\"['/', 'home']\">Home</a></li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">Configuración</li>\r\n        </ol>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n  <div class=\"row m-2 mt-4\">\r\n    <div class=\"col-md-12 \">\r\n      <table class=\"table table-hover table-sm \">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Acciones\r\n            </th>\r\n            <th>\r\n              categoria\r\n            </th>\r\n            <th>\r\n              recurrencia\r\n            </th>\r\n            <th>\r\n              Status\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr class=\"table-active\">\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-descarga',\r\n    templateUrl: './descarga.pages.html'\r\n})\r\n\r\nexport class DescargaPage {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"page-content\" id=\"content\">\r\n  <app-header></app-header>\r\n  <app-menu></app-menu>\r\n\r\n  \r\n  <div class=\"row m-2\">\r\n    <div class=\"col-md-12 mt-4\">\r\n      <h3>Descarga</h3>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\"><a [routerLink]=\"['/', 'home']\">Home</a></li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">Descarga</li>\r\n        </ol>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n  <div class=\"row m-2 mt-4\">\r\n    <div class=\"col-md-12 \">\r\n      <table class=\"table table-hover table-sm \">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Acciones\r\n            </th>\r\n            <th>\r\n              categoria\r\n            </th>\r\n            <th>\r\n              recurrencia\r\n            </th>\r\n            <th>\r\n              Status\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr class=\"table-active\">\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Issue } from '../models/issue';\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Roles } from '../models/roles';\nimport { Recurrencias } from '../models/recurrencias';\nimport { Estados } from '../models/estados';\nimport { Categorias } from '../models/categorias';\nimport { Constantes } from '../models/constantes.model';\n\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\n@Component({\n  selector: 'app-detalle',\n  templateUrl: './detalle.component.html'\n\n})\n\n\n\nexport class DetalleComponent implements OnInit {\n  closeResult = '';\n  model: NgbDateStruct;\n  registro: Issue = new Issue();\n  dregistroa: Issue = new Issue();\n  registropersona: Seguimiento = new Seguimiento();\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  id_categoria: string;\n  periodetalle: any[];\n  categoperiod: any;\n  periodcate: any;\n\n  public onReady(editor) {\n    editor.ui.getEditableElement().parentElement.insertBefore(\n      editor.ui.view.toolbar.element,\n      editor.ui.getEditableElement()\n    );\n  }\n\n  roles: Roles[] = [];\n  recurrencias: Recurrencias[] = [];\n  estados: Estados[] = [];\n  categorias: Categorias[] = [];\n  personas: Personas[] = [];\n  suscripcion: Seguimiento[] = [];\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  datosborrado: string;\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_seguimiento: null,\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\n    id_persona: null,\n    id_persona_log: localStorage.getItem('id_persona')\n  }\n  constructor(private httpClient: HttpClient, private registroService: DetalleService,\n    private activatedRoute: ActivatedRoute, private router: Router,\n    private modalService: NgbModal) {\n\n\n    this.dias = [\n      { name: 'OptionA', value: 'first_opt', checked: true },\n      { name: 'OptionB', value: 'second_opt', checked: false },\n      { name: 'OptionC', value: 'third_opt', checked: true }\n    ];\n\n\n\n\n    //cargo los roles para los combos select\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n      this.roles = result;\n    }, error => console.error(error));\n    //cargo los estados para los combos select\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/estados_read.php').subscribe(result => {\n      this.estados = result;\n    }, error => console.error(error));\n    //cargo las recurrencias para los combos select\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/recurrencias_read.php').subscribe(result => {\n      this.recurrencias = result;\n    }, error => console.error(error));\n    //cargo las categorias para los combos select\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/categorias_read.php').subscribe(result => {\n      this.categorias = result;\n    }, error => console.error(error));\n    //cargo las personas para los combos select\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n      this.personas = result;\n    }, error => console.error(error));\n    //cargo el listado de personas para esta ID tarea\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_suscritas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n      this.suscripcion = result;\n    }, error => console.error(error));\n\n\n\n\n\n\n\n  }\n\n  ngOnInit() {\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id_tarea');\n    this.registroService.getPerson(id_tarea)\n      .subscribe((respuesta: Issue) => {\n        this.registro = respuesta;\n        this.registro.id_tarea = id_tarea;\n        this.registro.id_persona = localStorage.getItem('id_persona');\n\n\n        //cargo el listado periodicidades de esta tarea para verificar a que categoria pertenecen y mostrar un combo u otro\n        this.httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n          this.periodetalle = result[0];\n          if (undefined == this.periodetalle) {\n            this.registro.decidecategoria = '0';\n          } else {\n            this.periodcate = this.periodetalle['id_categoria'];\n            this.registro.decidecategoria = this.periodcate;\n          }\n        }, error => console.error(error));\n\n      });\n\n  }\n\n\n  recarga() {\n    location.reload();\n  }\n\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  guardarregistro(form: NgForm) {\n    if (this.registro.tarea == '' || this.registro.ibm_hora == '' || this.registro.estatus == '') {\n      Swal.fire({\n        text: 'Los campos obligatorios no pueden quedar vacíos',\n        icon: 'error',\n        showConfirmButton: true\n      });\n    } else {\n\n\n    \n        let peticion: Observable<any>;\n        peticion = this.registroService.actualizarRegistro(this.registro);\n        peticion.subscribe(respuesta => {\n          Swal.fire({\n            title: this.registro.tarea,\n            text: 'Registro modificado',\n            icon: 'success',\n            showConfirmButton: true\n          })\n          \n          //, this.recarga();\n\n        });\n\n      \n\n    }\n\n  }\n\n\n\n\n\n  guardarseguimiento() {\n    if (this.datoregistro.id_persona == null) {\n      Swal.fire({\n        text: 'Debe seleccionar a alguien!',\n        icon: 'error',\n        showConfirmButton: true\n      });\n    } else {\n      let peticion: Observable<any>;\n      peticion = this.registroService.actualizarRegistroSeguimiento(this.datoregistro);\n      peticion.subscribe(respuesta => {\n        Swal.fire({\n          title: this.datoregistro.id_persona,\n          text: 'Persona asignada',\n          icon: 'success',\n          showConfirmButton: false\n        }), this.recarga();\n      });\n    }\n  }\n\n\n\n  \n\n\n\n\n  //eliminar registro      \n  eliminarpersona(registro: Seguimiento, i: string) {\n\n    Swal.fire({\n      title: `¿Desea elimina a esta persona del seguimiento?`,\n      text: 'Confirme si desea borrar el registro',\n      icon: 'question',\n      showConfirmButton: true,\n      showCancelButton: true\n\n    }).then(respuesta => {\n\n      if (respuesta.value) {\n        this.datosborrado = JSON.stringify({ \"id_seguimiento\": registro.id_seguimiento });\n        this.registroService.delete(this.datosborrado).subscribe();\n\n        Swal.fire({\n          title: registro.id_seguimiento,\n          text: 'Registro eliminado',\n          icon: 'success',\n          showConfirmButton: false\n        }), this.recarga();\n\n      }\n    });\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // registro: any = {};\n\n\n  //   constructor( private activatedRoute: ActivatedRoute, \n  //                private _registroService: registrosService \n  //                ) {\n\n  //     this.activatedRoute.params.subscribe ( params => {\n  //       this.registro = this._registroService.getPerson( params['id'] );\n  //     })\n\n  //    }\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.tarea }} - #{{ registro.id_tarea }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  \n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n\n\n\n\n<div class=\"row\">\n  <div class=\"col-12\">\n    {{ \"txtCreado\" | translate }}:\n    <em class=\"text-muted\">{{\n      registro.fecha \n    }}</em>\n    | {{ \"txtUltimaModificacion\" | translate }}:\n    <em class=\"text-muted\" *ngIf=\"registro.fechamodi == null\"\n      >nunca modificado</em\n    >\n    <em class=\"text-muted\">{{\n      registro.fechamodi \n    }}</em>\n  </div>\n\n</div>\n\n        \n        \n        \n        \n        </div>\n      </div>\n    </div>\n    <form (ngSubmit)=\"guardarregistro(f)\" #f=\"ngForm\">\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-7 alturaminima mb-5\">\n        <input\n          type=\"hidden\"\n          class=\"form-control\"\n          name=\"id_tarea\"\n          readonly\n          [(ngModel)]=\"registro.id_tarea\"\n        />\n\n\n        <input\n        #id_persona=\"ngModel\"\n        name=\"id_persona\"\n        type=\"hidden\"\n        [(ngModel)]=\"registro.id_persona\"\n      />\n\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group\">\n              <label for=\"tarea\">\n                {{ \"txtTarea\" | translate }}\n              </label>\n              <input\n                name=\"tarea\"\n                required\n                class=\"form-control form-control-sm\"\n                [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n                #tarea=\"ngModel\"\n                minlength=\"4\"\n                type=\"text\"\n                [(ngModel)]=\"registro.tarea\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"ibm_hora\">\n                {{ \"txtHora\" | translate }} \n              </label>\n              <input\n                name=\"ibm_hora\"\n                required\n                id=\"reloj\"\n                style=\"background-color: white;\"\n                placeholder=\"00:00\"\n                class=\"form-control form-control-sm hora\"\n                [class.is-invalid]=\"ibm_hora.invalid && ibm_hora.touched\"\n                #ibm_hora=\"ngModel\"\n                type=\"text\"\n                [(ngModel)]=\"registro.ibm_hora\"\n                [ngxTimepicker]=\"fullTime\"\n                [format]=\"24\"\n                readonly\n              />\n\n              <ngx-material-timepicker\n                #fullTime\n                [minutesGap]=\"15\"\n              ></ngx-material-timepicker>\n            </div>\n          </div>\n          <!-- <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"estatus\">\n                {{ \"txtStatus\" | translate }}\n              </label>\n\n              <select\n                required\n                class=\"form-control form-control-sm\"\n                name=\"estatus\"\n                [class.is-invalid]=\"estatus.invalid && estatus.touched\"\n                #estatus=\"ngModel\"\n                [(ngModel)]=\"registro.estatus\"\n                ><option value=\"{{ registro.estatus }}\" selected>{{\n                  registro.estatus\n                }}</option>\n                <option value=\"OK\">OK</option>\n                <option value=\"KO\">KO</option>\n                <option value=\"OK-INC\">OK-INC</option>\n                <option value=\"PENDIENTE\">PENDIENTE</option>\n              </select>\n            </div>\n          </div> -->\n          <div class=\"col-md-8\">\n            <div class=\"form-group\">\n              <label for=\"id_categoria\">Categoría</label>\n              <select\n                required\n                style=\"background-color: white;\"\n                class=\"form-control form-control-sm\"\n                name=\"id_categoria\"\n                #id_categoria=\"ngModel\"\n                [(ngModel)]=\"registro.id_categoria\"\n              >\n\n              <option\n              *ngFor=\"let categoria of categorias\"\n              value=\"{{ categoria.id_categoria }}\"\n              >\n              {{ categoria.categoria_name }}\n              </option>\n\n              </select>\n            </div>\n          </div>\n        </div>\n<!--acciones variables-->\n        <div class=\"row\">\n          <div class=\"col-md-12 mb-3\">\n\n          <div *ngIf=\"registro.decidecategoria != ''\">\n                      <!--accion puntual-->\n                      <div *ngIf=\"registro.id_categoria === '3'\">\n                        <div *ngIf=\"registro.decidecategoria === '3'\"><app-accion></app-accion></div>\n                      </div>\n                      <!--/end accion puntual-->\n                      <!--check-->\n                      <div *ngIf=\"registro.id_categoria === '1'\">\n                        <div *ngIf=\"registro.decidecategoria === '1'\"><app-check></app-check></div>\n                      </div>\n                      <!--end check-->\n          </div>\n          <div *ngIf=\"registro.decidecategoria === '0' \">\n                      <!--accion puntual-->\n                      <div *ngIf=\"registro.id_categoria === '3'\">\n                        <app-accion></app-accion>\n                      </div>\n                      <!--/end accion puntual-->\n                      <!--check-->\n                      <div *ngIf=\"registro.id_categoria === '1'\">\n                        <app-check></app-check>\n                      </div>\n                      <!--end check-->\n          </div>\n\n\n          </div>  \n        </div>\n<!--/end acciones variables-->\n        <div class=\"row\">\n          <div class=\"col-4\">\n            <label for=\"prioridad\">Prioridad</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"prioridad\"\n              placeholder=\"Seleccione prioridad\"\n              #prioridad=\"ngModel\"\n              [(ngModel)]=\"registro.prioridad\"\n            >\n              <option [ngValue]=\"null\" selected>Seleccione prioridad</option>\n              <option value=\"alta\">Alta</option>\n              <option value=\"media\">Media</option>\n              <option value=\"baja\">Baja</option>\n            </select>\n          </div>\n          <div class=\"col-4\"></div>\n          <div class=\"col-4\"></div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12 mt-3 mb-3\">\n            <hr />\n\n            <div class=\"row\">\n              <div class=\"col-10 mt-2 mb-2 pt3 pb3\">\n                <h5 class=\"titolpetit\">\n                  Personas que participan en el seguimiento\n                </h5>\n              </div>\n              <div class=\"col-2 mt-2 mb-2 text-right\">\n                <a\n                  alt=\"Asignar nueva persona de seguimiento\"\n                  title=\"Asignar nueva persona de seguimiento\"\n                  (click)=\"open(content)\"\n                  class=\"altaseguimiento\"\n                  ><i class=\"fa fa-plus fa-1\"></i\n                ></a>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div\n                class=\"col-12 mt-1 mb-1 pb1 pt1\"\n                *ngFor=\"let suscripcio of suscripcion\"\n              >\n                <div class=\"row\">\n                  <div class=\"col-4\">\n                    {{ suscripcio.id_seguimiento }} - {{ suscripcio.nombres }}\n                  </div>\n                  <div class=\"col-4\">{{ suscripcio.email }}</div>\n                  <div class=\"col-2\">{{ suscripcio.rol_name }}</div>\n                  <div class=\"col-2 text-right\">\n                    <a\n                      alt=\"Eliminar persona de seguimiento\"\n                      title=\"Eliminar persona de seguimiento\"\n                      (click)=\"eliminarpersona(suscripcio, i)\"\n                      class=\"altaseguimiento\"\n                      ><i class=\"fa fa-trash\"></i\n                    ></a>\n                  </div>\n                </div>\n\n                <hr class=\"bdott\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group text-center\">\n              <button type=\"submit\" class=\"btn btn-info mr-2\">\n                {{ \"txtModificar\" | translate }}\n              </button>\n              <button [routerLink]=\"['/home']\" class=\"btn btn-warning\">\n                {{ \"txtVolver\" | translate }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-5 alturaminima mb-5\">\n        <div class=\"form-group\">\n          <label for=\"observaciones\">{{\n            \"txtObservaciones\" | translate\n          }}</label>\n          <ckeditor\n          [config]=\"{ toolbar: [ 'link', '|', 'bold', 'italic' ] }\"\n            (ready)=\"onReady($event)\"\n            id=\"ibmeditor\"\n            placeholder=\"Observaciones\"\n            #observaciones=\"ngModel\"\n            maxlength=\"2000\"\n            name=\"observaciones\"\n            [(ngModel)]=\"registro.observaciones\"\n            [editor]=\"Editor\"\n            data=\"\"\n          ></ckeditor>\n        </div>\n      </div>\n    </div>\n  </form>\n\n  <ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Seguimiento de la issue\n      </h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <input\n          name=\"id_tarea\"\n          type=\"hidden\"\n          #id_tarea=\"ngModel\"\n          [(ngModel)]=\"datoregistro.id_tarea\"\n        />\n        <input\n          name=\"id_persona_log\"\n          type=\"hidden\"\n          #id_persona_log=\"ngModel\"\n          [(ngModel)]=\"datoregistro.id_persona_log\"\n        />\n\n        \n        <label for=\"id_persona\"\n          >Seleccione la persona para designarle el seguimiento</label\n        >\n        <div class=\"input-group\">\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm\"\n            name=\"id_persona\"\n            placeholder=\"Seleccione persona\"\n            #id_persona=\"ngModel\"\n            [(ngModel)]=\"datoregistro.id_persona\"\n          >\n            <option [ngValue]=\"null\">Seleccione persona</option>\n            <option\n              *ngFor=\"let persona of personas\"\n              value=\"{{ persona.id_persona }}\"\n            >\n              {{ persona.nombres }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button (click)=\"guardarseguimiento()\" class=\"btn btn-info\">\n        Añadir persona\n      </button>\n    </div>\n  </ng-template>\n\n  <app-footer></app-footer>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../models/issue';\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Roles } from '../models/roles';\nimport { Recurrencias } from '../models/recurrencias';\nimport { Estados } from '../models/estados';\nimport { Categorias } from '../models/categorias';\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\nimport { DetalleHistoricoService } from '../services/detallehistorico.service';\nimport { IssueHistorico } from '../models/issuehistorico';\n@Component({\n  selector: 'app-detallehistorico',\n  templateUrl: './detallehistorico.component.html'\n  \n})\n\n\n\nexport class DetalleHistoricoComponent implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:IssueHistorico = new IssueHistorico();\n  registropersona:Seguimiento = new Seguimiento();\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n  roles: Roles[] = [];\n    recurrencias: Recurrencias[] = [];\n    estados: Estados [] = [];\n    categorias: Categorias [] = [];\n    personas: Personas [] = [];\n    suscripcion: Seguimiento[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n    datoregistro = {\n      id_seguimiento: null,\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\n      id_persona: null\n    }\n  constructor(private httpClient: HttpClient,private registroService: DetalleHistoricoService,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n\n\n        //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n      //cargo los estados para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/estados_read.php').subscribe(result => {\n          this.estados = result;\n        }, error => console.error(error));\n       //cargo las recurrencias para los combos select\n       httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/recurrencias_read.php').subscribe(result => {\n          this.recurrencias = result;\n        }, error => console.error(error));\n      //cargo las categorias para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/categorias_read.php').subscribe(result => {\n          this.categorias = result;\n        }, error => console.error(error));        \n      //cargo las personas para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n        this.personas = result;\n      }, error => console.error(error));   \n     //cargo el listado de personas para esta ID tarea\n     httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_suscritas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n      this.suscripcion = result;\n     }, error => console.error(error));\n\n\n\n\n              }\n\n  ngOnInit(){\n    const id_log = this.activatedRoute.snapshot.paramMap.get('id_log');\n    this.registroService.getDetalleHistorico ( id_log )\n      .subscribe( (respuesta:IssueHistorico) => {\n         this.registro = respuesta;\n         this.registro.id_log =   id_log;\n    \n      });\n\n  }\n\n\n  recarga(){ \n    location.reload();\n  }\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n   //eliminar registro      \n   eliminarpersona ( registro: Seguimiento, i:string){\n\n    Swal.fire({\n        title: `¿Desea elimina a esta persona del seguimiento?`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n      console.log(\"id seguimiento: \",registro.id_seguimiento);\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"id_seguimiento\": registro.id_seguimiento });\n            this.registroService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.id_seguimiento,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>Histórico de Logs</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.tarea }} - #{{ registro.id_log }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.fecha | date: \"dd/MM/y HH:mm\"\n          }}</em>\n          \n         \n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-7 alturaminima mb-5\">\n        <input\n          type=\"hidden\"\n          class=\"form-control\"\n          name=\"id_log\"\n          readonly\n          [(ngModel)]=\"registro.id_log\"\n        />\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group\">\n              <label for=\"tarea\">\n                {{ \"txtTarea\" | translate }}\n              </label>\n              <input\n                name=\"tarea\"\n                required\n                class=\"form-control form-control-sm\"\n                [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n                #tarea=\"ngModel\"\n                minlength=\"4\"\n                type=\"text\"\n                [(ngModel)]=\"registro.tarea\"\n                disabled\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"nombres\">\n                Usuario\n              </label>\n              <input\n                name=\"nombres\"\n                required\n              \n                style=\"background-color: white;\"\n        \n                class=\"form-control form-control-sm\"\n              \n                #nombres=\"ngModel\"\n    \n                type=\"text\"\n                [(ngModel)]=\"registro.nombres\"\n             readonly\n                disabled\n              />\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"id_persona\">\n                Usuario creado\n              </label>\n              <input\n                name=\"id_persona\"\n                required\n              \n                style=\"background-color: white;\"\n        \n                class=\"form-control form-control-sm\"\n              \n                #id_persona=\"ngModel\"\n    \n                type=\"text\"\n                [(ngModel)]=\"registro.id_persona\"\n             readonly\n                disabled\n              />\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n       \n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-12 mb-3\" >\n \n          </div>  \n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-4\"></div>\n          <div class=\"col-4\"></div>\n          <div class=\"col-4\"></div>\n        </div>\n\n  \n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group text-center\">\n              <!-- <button type=\"submit\" class=\"btn btn-info mr-2\">\n                {{ \"txtModificar\" | translate }}\n              </button> -->\n              <button [routerLink]=\"['/historico']\" class=\"btn btn-warning\">\n                {{ \"txtVolver\" | translate }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-5 alturaminima mb-5\">\n        <div class=\"form-group\">\n          <label for=\"observaciones\">{{\n            \"txtObservaciones\" | translate\n          }}</label>\n          <textarea\n            #descripcion=\"ngModel\"\n    class=\"form-control\"\n    rows=\"10\"\n            name=\"observaciones\"\n            [(ngModel)]=\"registro.descripcion\"\n\n            disabled\n          ></textarea>\n        </div>\n      </div>\n    </div>\n \n\n \n\n  <app-footer></app-footer>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\nimport { DetalleHistoricoService } from '../services/detallehistorico.service';\nimport { ApiPersonas } from '../services/apipersonas.service';\nimport { Roles } from '../models/roles';\n@Component({\n  selector: 'app-detallepersona',\n  templateUrl: './detallepersona.component.html'\n  \n})\n\n\n\nexport class DetallePersona implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:Personas = new Personas();\n\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n\n    personas: Personas [] = [];\n    roles: Roles[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n\n    fieldTextType: boolean;\n    datoregistro = {\n      id_persona: this.activatedRoute.snapshot.paramMap.get('id_persona'),\n      id_persona_log: localStorage.getItem('id_persona'),\n      nombres: null,\n      telefono: null,\n      email:  null,\n      direccion: null,\n      registrado: null,\n      id_rol: null,\n      password:  null,\n      imagen:  null\n    }\n\n    \n\n  constructor(private httpClient: HttpClient,private registroService: ApiPersonas,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n       //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n\n              }\n\n\n\n  ngOnInit(){\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona');\n \n    this.registroService.getPerson ( id_persona )\n      .subscribe( (respuesta:Personas) => {\n         this.registro = respuesta;\n         this.registro.id_persona =   id_persona;\n\n      });\n\n  }\n\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  recarga(){ \n    location.reload();\n  }\n\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  \n\n\n\n  //alta de registro\n  altaRegistro() {\n\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.nombres==null || this.datoregistro.email==null || this.datoregistro.id_rol==null || this.datoregistro.password==null){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos obligatorios no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.registroService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.nombres,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : false\n          }),this.recarga();      \n        });\n    }\n  }\n\n  \n\n\n  guardarregistro( ){\n    console.log(this.registro);\n    if(\n      this.registro.nombres=='' || \n      this.registro.telefono=='' || \n      this.registro.email=='' || \n      this.registro.password=='' ||\n      this.registro.direccion=='' ||\n      this.registro.id_rol=='' \n      ){\n     Swal.fire({\n       text: 'Los campos obligatorios no pueden quedar vacíos',\n       icon: 'error',  \n       showConfirmButton : true\n     }); \n    }  else {\n            //validacion email      \n            var patronEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/;\n            var emailResult = patronEmail.test(this.registro.email);\n            if(emailResult==false){\n              Swal.fire({\n                text: 'El campo E-mail debe cumplir con el formato adecuado',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else \n            // validacion password\n            // al menos 1 número, una minúscula y una mayuscula\n            // al menos 6 carácteres\n            var patronPassword = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/;\n            var passwordResult = patronPassword.test(this.registro.password);\n            if(passwordResult==false){\n              Swal.fire({\n                text: 'El campo Password debe tener al menos 1 número, una minúscula y una mayúscula y como mínimo 6 carácteres',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else {\n              let peticion: Observable<any>;\n              peticion = this.registroService.actualizarRegistro(this.registro);\n              peticion.subscribe( respuesta => {\n                Swal.fire({\n                  title: this.registro.nombres,\n                  text: 'Registro modificado',\n                  icon: 'success',  \n                  showConfirmButton : false\n                }),this.recarga();  \n              });\n            }\n\n   }\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.nombres }} - #{{ registro.id_persona }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.registrado | date: \"dd/MM/y HH:mm\"\n          }}</em>\n         \n          \n          \n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-2 alturaminima mb-5\">\n       \n\n\n\n\n<app-modimagen></app-modimagen>\n\n\n\n\n\n\n\n      </div>\n\n        <div class=\"col-md-10 alturaminima mb-5\">\n\n\n\n        <div class=\"form-group\">\n          <label for=\"nombres\">{{ \"txtNombres\" | translate }}</label>\n          <input\n            required\n            style=\"background-color: white;\"\n            placeholder=\"{{ 'txtNombres' | translate }}\"\n            class=\"form-control form-control-sm\"\n            [class.is-invalid]=\"nombres.invalid && nombres.touched\"\n            #nombres=\"ngModel\"\n            required\n            minlength=\"4\"\n            name=\"nombres\"\n            type=\"text\"\n            [(ngModel)]=\"registro.nombres\"\n          />\n        </div>\n  \n\n\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"txtEmail\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtEmail' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"email.invalid && email.touched\"\n              #email=\"ngModel\"\n              required\n              [email]=\"true\"\n              name=\"email\"\n              type=\"email\"\n              [(ngModel)]=\"registro.email\"\n            />\n          </div>\n  </div>\n  <div class=\"col-md-4\">       \n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"txtPassword\" | translate }}</label>\n            <div class=\"input-group\">\n            <input\n              required\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtPassword' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"password.invalid && password.touched\"\n              #password=\"ngModel\"\n              required\n              name=\"password\"\n              type=\"password\"\n              [(ngModel)]=\"registro.password\"\n              [type]=\"fieldTextType ? 'text' : 'password'\"\n            />\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\">\n                <i\n                class=\"fa\"\n                [ngClass]=\"{\n                  'fa-eye-slash': !fieldTextType,\n                  'fa-eye': fieldTextType\n                }\"\n                (click)=\"toggleFieldTextType()\"\n              ></i>\n              </span>\n           </div>\n          </div>\n</div>\n</div>    \n<div class=\"col-md-4\">\n  <div class=\"form-group\">\n    <label for=\"telefono\">{{ \"txtTelefono\" | translate }}</label>\n    <input\n      style=\"background-color: white;\"\n      placeholder=\"{{ 'txt9digitos' | translate }}\"\n      class=\"form-control form-control-sm\"\n      #telefono=\"ngModel\"\n      minlength=\"9\"\n      name=\"telefono\"\n      type=\"text\"\n      [(ngModel)]=\"registro.telefono\"\n    />\n  </div>\n</div>\n\n\n</div>\n<div class=\"row\">\n<div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"direccion\">{{ \"txtDireccion\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtDireccion' | translate }}\"\n              class=\"form-control form-control-sm\"\n              #direccion=\"ngModel\"\n              name=\"direccion\"\n              type=\"text\"\n              [(ngModel)]=\"registro.direccion\"\n            />\n          </div>\n\n</div>\n<div class=\"col-md-6\">\n\n\n        <div class=\"form-group\">\n          <label for=\"id_rol\">{{ \"txtRol\" | translate }}</label>\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm\"\n            name=\"id_rol\"\n           \n            [class.is-invalid]=\"id_rol.invalid && id_rol.touched\"\n            #id_rol=\"ngModel\"\n            [(ngModel)]=\"registro.id_rol\"\n          >\n          <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\n            {{rol.rol_name}}\n          </option>\n          </select>\n        </div>\n</div>\n</div>\n        <div class=\"form-group text-center\">\n           <button (click)=\"guardarregistro()\" class=\"btn btn-primary colortopacio\">\n            {{ \"txtModificar\" | translate }}\n          </button> \n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    </div>\n \n\n \n\n  <app-footer></app-footer>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Roles } from '../../models/roles';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../../models/constantes.model';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport Swal from 'sweetalert2';\nimport { Observable } from 'rxjs';\nimport { AdminServicioService } from '../../services/admin-servicio.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Ayuda } from '../../models/ayuda';\n\n@Component({\n  selector: 'app-formayuda',\n  templateUrl: './ayuda.component.html',\n  styles: [\n  ],\n})\n\nexport class AyudaFormComponent implements OnInit {\n\n  ayudas: Ayuda[] = [];\n  \n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  closeResult = '';\n\n  datosformularioayuda = {\n    id_persona_log: localStorage.getItem('id_persona'),\n    ayudatitulo: null,\n    ayudatexto: null\n  }\n\n  datosformulariomodi: Ayuda = new Ayuda();\n\n  datosborrado: string;\n  datosborradoAyuda: string;\n  constructor(private httpClient: HttpClient,private modalService: NgbModal,private adminService: AdminServicioService) {\n     \n    ayudatitulo: new FormControl('', Validators.maxLength(10)) \n\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_ayuda.php').subscribe(result => {\n        this.ayudas = result;\n      }, error => console.error(error));\n\n   }\n\n  ngOnInit(){\n\n  }\n\n  recarga() {\n    location.reload();\n  }\n\n  //abrir modal\n  openayuda(content) {\n        this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n          this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReasonA(reason)}`;\n        });\n  }\n  private getDismissReasonA(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n}\n\n  //abrir modal\n  openayudaModi(contentmodi, id_ayuda: string, id_persona_log: string) {\n      this.modalService.open(contentmodi, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n        this.closeResult = `Closed with: ${result}`;\n      }, (reason) => {\n        this.closeResult = `Dismissed ${this.getDismissReasonB(reason)}`;\n      });\n      this.edicionAyuda(id_ayuda);\n  }\n\n  private getDismissReasonB(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n          return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n          return 'by clicking on a backdrop';\n        } else {\n          return `with: ${reason}`;\n        }\n  }\n\n\n\nedicionAyuda(id_ayuda){\n\n  this.adminService.getAyuda(id_ayuda)\n    .subscribe((respuesta: Ayuda) => {\n      this.datosformulariomodi = respuesta;\n      this.datosformulariomodi.id_ayuda = id_ayuda;\n      this.datosformulariomodi.id_persona_log = localStorage.getItem('id_persona');\n    });\n\n}\n\n\n  \n  guardarNuevaAyuda() {\n    if (this.datosformularioayuda.ayudatitulo == null || this.datosformularioayuda.ayudatexto == null) {\n      Swal.fire({\n        text: 'Debe Escribir un titulo y un texto!',\n        icon: 'error',\n        showConfirmButton: true\n      });\n\n    } else {\n      let peticion: Observable<any>;\n      peticion = this.adminService.guardarNewAyuda(this.datosformularioayuda);\n      peticion.subscribe(respuesta => {\n        Swal.fire({\n          title: this.datosformularioayuda.ayudatitulo,\n          text: 'Nueva entrada de FAQs creada',\n          icon: 'success',\n          showConfirmButton: false\n        }), this.recarga();\n      });\n    }\n   }\n\n\n   guardarModificarAyuda() {\n    if (this.datosformulariomodi.ayudatitulo == null || this.datosformulariomodi.ayudatexto == null) {\n      Swal.fire({\n        text: 'Debe Escribir un titulo y un texto!',\n        icon: 'error',\n        showConfirmButton: true\n      });\n    } else {\n      let peticion: Observable<any>;\n      peticion = this.adminService.guardarAyudaModificado(this.datosformulariomodi);\n      peticion.subscribe(respuesta => {\n        Swal.fire({\n          title: this.datosformulariomodi.ayudatitulo,\n          text: 'Entrada modificada',\n          icon: 'success',\n          showConfirmButton: false\n        }), this.recarga();\n      });\n    }\n   }\n\n   \neliminarAyuda(registro: Ayuda, i: string) {\n  Swal.fire({\n    title: `WARNING!! ¿Desea elimina esta FAQ?`,\n    text: 'Confirme si desea borrar el registro',\n    icon: 'question',\n    showConfirmButton: true,\n    showCancelButton: true\n  }).then(respuesta => {\n    if (respuesta.value) {\n      const id_persona_log = localStorage.getItem('id_persona');\n      this.datosborradoAyuda = JSON.stringify({ \"id_ayuda\": registro.id_ayuda, \"id_persona_log\": id_persona_log });\n      this.adminService.deleteAyuda(this.datosborradoAyuda).subscribe();\n      Swal.fire({\n        title: registro.id_ayuda,\n        text: 'Registro eliminado',\n        icon: 'success',\n        showConfirmButton: false\n      }), this.recarga();\n    }\n  });\n}\n\n\n\n}\n","<div class=\"rol\">\n    <div class=\"col-12 alert bg-dark text-white\">\n        <div class=\"row\">\n            <div class=\"col-9\"><h4>Ayuda - Añada o edite elementos FAQ a la página de Ayuda</h4></div>\n            <div class=\"col-3 text-right\"><a (click)=\"openayuda(content)\" class=\"altaseguimientow\" alt=\"Añadir Ayuda\" title=\"Añadir Ayuda\"><i class=\"fa fa-plus fa-1\"></i></a></div>\n        </div>\n    </div>\n</div>\n<div class=\"rol\">\n    <div class=\"col-12 alert p-0 m-0 ovefr\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                    <th>Título</th>\n                    <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let ayuda of ayudas\">\n                        <td>{{ ayuda.ayudatitulo }}</td>\n                        <td class=\"text-right\"> \n                            \n                        <a \n                        (click)=\"openayudaModi(contentmodi,ayuda.id_ayuda)\" \n                        class=\"altaseguimiento mr-2\" \n                        alt=\"Modificar Ayuda\" \n                        title=\"Modificar Ayuda\"><i class=\"fa fa-edit\"></i></a>\n\n                        <a\n                            alt=\"Eliminar Ayuda\"\n                            title=\"Eliminar Ayuda\"\n                            (click)=\"eliminarAyuda(ayuda, i)\"\n                            class=\"altaseguimiento\"\n                            ><i class=\"fa fa-trash\"></i\n                        ></a>\n \n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n    </div>\n</div>\n\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Nueva entrada de FAQs\n      </h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <input\n          name=\"id_persona_log\"\n          type=\"hidden\"\n          #id_persona_log=\"ngModel\"\n          [(ngModel)]=\"datosformularioayuda.id_persona_log\"\n        />\n        <label for=\"ayudatitulo\">Escriba un título</label>\n        <input\n        name=\"ayudatitulo\"\n        type=\"text\"\n        maxlength=\"100\"\n        #ayudatitulo=\"ngModel\"\n        class=\"form-control  mb-2\"\n        [(ngModel)]=\"datosformularioayuda.ayudatitulo\"\n        />\n\n        <p>Texto (máx 650 carácteres)</p>\n        <div class=\"input-group\">\n            <textarea rows=\"10\" \n            required \n            class=\"form-control  mb-2\" \n            maxlength=\"650\"\n            name=\"ayudatexto\" \n            #ayudatexto=\"ngModel\" \n            [(ngModel)]=\"datosformularioayuda.ayudatexto\"></textarea>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button (click)=\"guardarNuevaAyuda()\" class=\"btn btn-info\">\n        Guardar registro\n      </button>\n    </div>\n  </ng-template>\n\n\n  <!--MODIFICAR-->\n  <ng-template #contentmodi let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Modificar entrada de FAQs\n      </h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <input\n          name=\"id_persona_log\"\n          type=\"hidden\"\n          #id_persona_log=\"ngModel\"\n          [(ngModel)]=\"datosformulariomodi.id_persona_log\"\n        />\n\n        <input\n        name=\"id_ayuda\"\n        type=\"hidden\"\n        #id_ayuda=\"ngModel\"\n        [(ngModel)]=\"datosformulariomodi.id_ayuda\"\n      />\n\n        <label for=\"ayudatitulo\">Escriba un título</label>\n        <input\n        name=\"ayudatitulo\"\n        type=\"text\"\n        maxlength=\"100\"\n        #ayudatitulo=\"ngModel\"\n        class=\"form-control  mb-2\"\n        [(ngModel)]=\"datosformulariomodi.ayudatitulo\"\n        />\n\n        <p>Texto (máx 650 carácteres)</p>\n        <div class=\"input-group\">\n            <textarea rows=\"10\" \n            required \n            class=\"form-control  mb-2\" \n            maxlength=\"650\"\n            name=\"ayudatexto\" \n            #ayudatexto=\"ngModel\" \n            [(ngModel)]=\"datosformulariomodi.ayudatexto\"></textarea>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button (click)=\"guardarModificarAyuda()\" class=\"btn btn-info\">\n        Guardar registro\n      </button>\n    </div>\n  </ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuracion-general',\n  templateUrl: './configuracion-general.component.html',\n  styles: [\n  ],\n})\nexport class ConfiguracionGeneralComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>configuracion-general works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { Incidencia } from '../../models/incidencia';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { Constantes } from '../../models/constantes.model';\nimport { Observable } from 'rxjs';\nimport { IncidenciasService } from '../../services/incidencias.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm, FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-incidenciadetalle',\n  templateUrl: './incidenciadetalle.component.html'\n})\n\nexport class IncidenciadetalleComponent implements OnInit {\n\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:Incidencia = new Incidencia();\n  isSubmitted = false;\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n\n\n  resolverSubmit = new FormGroup({\n    id_incidencias: new FormControl(''),\n    token_incidencia: new FormControl(''),\n  });\n\n\n\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n    datoregistro = {\n      id_seguimiento: null,\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\n      id_persona: null\n    }\n  constructor(private httpClient: HttpClient,private incidenciasService: IncidenciasService,\n              private activatedRoute: ActivatedRoute,private router: Router,private fb: FormBuilder\n              ){\n\n\n\n              }\n\n  ngOnInit(){\n    const token_incidencia = this.activatedRoute.snapshot.paramMap.get('token_incidencia');\n    this.incidenciasService.getDetalleIncidencia ( token_incidencia )\n      .subscribe( (respuesta:Incidencia) => {\n         this.registro = respuesta;\n         this.registro.token_incidencia =   token_incidencia;\n         this.resolverSubmit = this.fb.group({\n          id_incidencias: [this.registro.id_incidencias,Validators.required],\n          token_incidencia: [this.registro.token_incidencia,Validators.required]\n        });\n\n      });\n\n  }\n\n\n\n\n  recarga(){ \n    location.reload();\n  }\n\n\n  onSubmit() { \n    this.isSubmitted = true;\n    const valor = JSON.stringify(this.resolverSubmit.value);\n    \n    this.incidenciasService.guardarIncidencia( valor ).subscribe( respuesta => {\n      Swal.fire({\n        title: 'Incidencia resuelta',\n        text: 'la incidencia ha quedado como resuelta',\n        icon: 'success',  \n        showConfirmButton : true\n      }), this.recarga();\n      \n    });   \n}\n\nget id_incidencias() { return this.resolverSubmit.get('id_incidencias'); }\nget token_incidencia() { return this.resolverSubmit.get('token_incidencia'); }\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n    <app-header></app-header>\n    <app-menu></app-menu>\n  \n    <div class=\"row m-2\">\n      <div class=\"col-md-12 mt-4 tituloseccion\">\n        <h3>Histórico de Logs</h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n              <a [routerLink]=\"['/', 'home']\">Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\n              {{ registro.enunciado }} - #{{ registro.token_incidencia }}\n            </li>\n          </ol>\n        </nav>\n      </div>\n    </div>\n  \n  \n      <div class=\"row m-2 mt-4\">\n        <div class=\"col-md-12\">\n          <div class=\"alert linealbase\">\n           Creada:\n            <em class=\"text-muted\">{{\n              registro.fecha | date: \"dd/MM/y HH:mm\"\n            }}</em>\n            \n           \n          </div>\n        </div>\n      </div>\n  \n      <div class=\"row m-2 mt-4\">\n        <div class=\"col-md-12 alturaminima mb-5\">\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                \n                 <h2 class=\"hachedosgrande\"> {{ registro.enunciado }}              \n               <span *ngIf=\"registro.resuelta==='SI'\" class=\"badge badge-success\">\n                    \n                      Resuelta\n                    \n                </span>\n            </h2>\n                <h5 class=\"mb-2\">Emitida por: <b>{{registro.nombres}}</b></h5>\n                <hr />\n                <p class=\"mt-3 mb-3\">{{registro.textoincidencia}}</p>\n                 <hr />\n                <div *ngIf=\"registro.imagenincidencia!=''\">\n                    <h5 class=\"mt-4 mb-2\">Imagen adjunta</h5>\n                                    <img \n                                    class=\"animate fadeIn mb-3\" \n                                    src=\"{{registro.imagenincidencia}}\" \n                                    jpPreload=\"{{registro.imagenincidencia}}\"\n                                    alt=\"\" />\n                    <hr /> \n                </div>               \n              </div>\n            </div>\n          </div>\n\n  \n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-group text-center\">\n<form [formGroup]=\"resolverSubmit\" (ngSubmit)=\"onSubmit()\" >  \n                <input\n                type=\"hidden\"\n                class=\"form-control\"\n                formControlName=\"id_incidencias\"\n                />\n                <input\n                type=\"hidden\"\n                class=\"form-control\"\n                formControlName=\"token_incidencia\"\n                />\n            <span *ngIf=\"registro.resuelta==='SI'\">\n                <button disabled class=\"btn btn-success mr-2\">\n                  Resuelta\n                </button> \n            </span>\n            <span *ngIf=\"registro.resuelta!='SI'\">\n                <button [disabled]=\"!resolverSubmit.valid\" type=\"submit\" class=\"btn btn-info mr-2\">\n                  Resolver\n                </button> \n            </span>\n                <button [routerLink]=\"['/incidencias']\" class=\"btn btn-warning\">\n                  {{ \"txtVolver\" | translate }}\n                </button>\n</form>             \n            </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n   \n  \n   \n  \n    <app-footer></app-footer>\n  </div>\n  ","import {Component, ViewChild, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../../models/constantes.model';\nimport { IncidenciasService } from '../../services/incidencias.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-incidencias',\n  templateUrl: './incidencias.component.html'\n})\nexport class IncidenciasComponent implements OnInit {\n\n\n\n   \n  personas:Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_log: null,\n    fecha: null,\n    tarea: null,\n    issueg: null,\n    descripcion_accion: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_log: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  \n  constructor(private spinner: NgxSpinnerService,private httpClient: HttpClient, private incidenciasService: IncidenciasService) {\n        this.fetch(data => {\n          // cache\n            this.temp = [...data];\n            this.rows = data;\n        });\n\n\n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit(){\n\n    /** spinner starts on init */\n    this.spinner.show();\n \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.spinner.hide();\n    }, 2000);\n\n\n\n    this.fetch(data => {\n        this.temp = [...data];\n        this.rows = data;\n      });\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n      location.reload();\n  }\n\n  //cargamos el listado\n  fetch(cb) {\n    if(cb){\n      const req = new XMLHttpRequest();\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/read_incidencias.php`);\n      req.onload = () => {\n        cb(JSON.parse(req.response));\n        console.log(JSON.parse(req.response));\n      };\n      req.send();\n    }\n  }\n\n\n\n\n   //eliminar registro      \n   borrarRegistro ( registro: Issue, i:string){\n\n    Swal.fire({\n        title: `¿Desea borrar el registro histórico ${registro.tarea}`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"tarea\": registro.tarea, \"id_tarea\": registro.id_tarea });\n            this.incidenciasService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.tarea,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function(d) {\n      return  d.fecha.toLowerCase().indexOf(val) !== -1 || d.resuelta.toLowerCase().indexOf(val) !== -1|| d.fecharesuelta.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","<div class=\"page-content\" id=\"content\">\n    <app-header></app-header>\n    <app-menu></app-menu>\n  \n    <div class=\"row m-2\">\n      <div class=\"col-md-12 mt-4\">\n        <h3>{{ \"txtRegistros\" | translate }}</h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n              <a [routerLink]=\"['/', 'home']\">Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\n              Incidencias\n            </li>\n          </ol>\n        </nav>\n      </div>\n    </div>\n  \n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12 alturaminima mb-5\">\n  \n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form\">\n        <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n          <input\n            matInput\n            #filter\n            placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\n            (keyup)=\"updateFilter($event)\"\n          />\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"col-6 text-right\">\n    </div>\n  </div>\n  <ngx-spinner></ngx-spinner>\n        <ngx-datatable\n          #mydatatable\n          class=\"material striped\"\n          headerHeight=\"50\"\n          [limit]=\"15\"\n          [columnMode]=\"'force'\"\n          footerHeight=\"50\"\n          rowHeight=\"auto\"\n          [rows]=\"rows\"\n        >\n          <ngx-datatable-column name=\"id_incidencias\" [maxWidth]=\"90\">\n            <ng-template\n              class=\"mat-column-id\"\n              ngx-datatable-cell-template\n              let-rowIndex=\"rowIndex\"\n              let-value=\"value\"\n              let-row=\"row\"\n            >\n              <div class=\"text-center\">{{ row.id_incidencias }}</div>\n            </ng-template>\n          </ngx-datatable-column>\n          <ngx-datatable-column name=\"Fecha\" [maxWidth]=\"200\">\n\n            <ng-template ngx-datatable-header-template>\n                <span>Fecha</span>\n              </ng-template>\n\n            <ng-template\n              ngx-datatable-cell-template\n              let-rowIndex=\"rowIndex\"\n              let-value=\"value\"\n              let-row=\"row\"\n            >\n                {{ value | slice: 0:90 }}\n  \n            </ng-template>\n          </ngx-datatable-column>\n          <ngx-datatable-column name=\"Enunciado\" [maxWidth]=\"1010\">\n            <ng-template ngx-datatable-header-template>\n                <span>Incidencia</span>\n              </ng-template>\n            <ng-template\n              ngx-datatable-cell-template\n              let-rowIndex=\"rowIndex\"\n              let-value=\"value\"\n              let-row=\"row\"\n            >\n  \n                {{ row.enunciado | slice: 0:90 }}\n             \n            \n            </ng-template>\n          </ngx-datatable-column>\n  \n          <ngx-datatable-column name=\"Nombres\" [maxWidth]=\"210\">\n            <ng-template ngx-datatable-header-template>\n                <span>Emitida por</span>\n              </ng-template>\n            <ng-template\n              ngx-datatable-cell-template\n              let-rowIndex=\"rowIndex\"\n              let-value=\"value\"\n              let-row=\"row\"\n            >\n             \n                {{ value }}\n              \n            </ng-template>\n          </ngx-datatable-column>\n  \n          <ngx-datatable-column name=\"Resuelta\" [maxWidth]=\"80\">\n            <ng-template ngx-datatable-header-template>\n                <span>Resuelta</span>\n              </ng-template>\n            <ng-template\n              ngx-datatable-cell-template\n              let-rowIndex=\"rowIndex\"\n              let-value=\"value\"\n              let-row=\"row\"\n            >\n            <div\n            [ngClass]=\"{\n              positive: row.resuelta == 'SI',\n              negative: row.resuelta == 'NO',\n              posnegtive: row.resuelta == 'STANDBY'\n            }\"\n          >\n                {{ row.resuelta }}\n              </div>\n            </ng-template>\n          </ngx-datatable-column>\n  \n\n          <ngx-datatable-column name=\"Fecharesuelta\" [maxWidth]=\"210\">\n            <ng-template ngx-datatable-header-template>\n                <span>Fecha resolución</span>\n              </ng-template>\n            <ng-template\n              ngx-datatable-cell-template\n              let-rowIndex=\"rowIndex\"\n              let-value=\"value\"\n              let-row=\"row\"\n            >\n             \n             <div class=\"text-center\">  {{ row.fecharesuelta }}</div> \n              \n            </ng-template>\n          </ngx-datatable-column>\n\n\n          <ngx-datatable-column name=\"ver\" [maxWidth]=\"80\">\n            <ng-template\n              class=\"mat-column-id\"\n              ngx-datatable-cell-template\n              let-row=\"row\"\n            >\n              <div class=\"text-center\">\n                <div class=\"row\">\n                  <div class=\"col-12 p0 m0\">\n                    <a\n                      [routerLink]=\"['/incidenciadetalle', row.token_incidencia]\"\n                      class=\"btn btn-warning botonsizes mr-1\"\n                      ><i class=\"fa fa-eye\"></i\n                    ></a>\n                \n                  </div>\n                </div>\n              </div>\n            </ng-template>\n          </ngx-datatable-column>\n        </ngx-datatable>\n      </div>\n  \n  \n    </div>\n  \n    <app-footer></app-footer>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-listados',\n  templateUrl: './listados.component.html',\n  styles: [\n  ],\n})\nexport class ListadosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page-content\" id=\"content\">\n    <app-header></app-header>\n    <app-menu></app-menu>\n  \n    <div class=\"row m-2\">\n      <div class=\"col-md-12 mt-4\">\n        <h3>{{ \"txtRegistros\" | translate }}</h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n              <a [routerLink]=\"['/', 'home']\">Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\n              Listado de componentes\n            </li>\n          </ol>\n        </nav>\n      </div>\n    </div>\n  \n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12 alturaminima mb-5\">\n  \n            <div class=\"row\">\n                <div class=\"col-6\">\n                    <app-formroles></app-formroles>\n                </div>\n           \n                <div class=\"col-6\">\n                    <app-formayuda></app-formayuda>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\"><app-formturnos></app-formturnos>\n                    \n                </div>\n            </div> \n       \n      </div>\n    </div>\n    <app-footer></app-footer>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Roles } from '../../models/roles';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../../models/constantes.model';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport Swal from 'sweetalert2';\nimport { Observable } from 'rxjs';\nimport { AdminServicioService } from '../../services/admin-servicio.service';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-formroles',\n  templateUrl: './roles.component.html',\n  styles: [\n  ],\n})\n\nexport class RolesFormComponent implements OnInit {\n\n  roles: Roles[] = [];\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  closeResult = '';\n\n  datosformulario = {\n    id_persona_log: localStorage.getItem('id_persona'),\n    rol_level: null,\n    rol_name: null,\n    roldescripcion: null\n  }\n  datosborrado: string;\n  constructor(private httpClient: HttpClient,private modalService: NgbModal,private adminService: AdminServicioService) {\n     \n    roldescripcion: new FormControl('', Validators.maxLength(10)) \n\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n        this.roles = result;\n      }, error => console.error(error));\n\n   }\n\n  ngOnInit(){\n  }\n\n  recarga() {\n    location.reload();\n  }\n\n  //abrir modal\n  openroles(content) {\n        this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n          this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n  }\n  private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n          return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n          return 'by clicking on a backdrop';\n        } else {\n          return `with: ${reason}`;\n        }\n  }\n\n\n\n  guardarNuevoRol() {\n    if (this.datosformulario.rol_name == null || this.datosformulario.rol_level == null || this.datosformulario.roldescripcion == null) {\n      Swal.fire({\n        text: 'Debe seleccionar un rol, describirlo brevemente y nombrarlo!',\n        icon: 'error',\n        showConfirmButton: true\n      });\n\n    } else {\n      let peticion: Observable<any>;\n      peticion = this.adminService.guardarRol(this.datosformulario);\n      peticion.subscribe(respuesta => {\n        Swal.fire({\n          title: this.datosformulario.rol_name,\n          text: 'Nuevo rol creado',\n          icon: 'success',\n          showConfirmButton: false\n        }), this.recarga();\n      });\n    }\n   }\n\n\n \neliminarrol(registro: Roles, i: string) {\n  Swal.fire({\n    title: `WARNING!! ¿Desea elimina este rol?`,\n    text: 'Confirme si desea borrar el rol. Tenga en cuenta que todas las tareas o registros que haya creado bajo este rol quedarán sin rol asignado',\n    icon: 'question',\n    showConfirmButton: true,\n    showCancelButton: true\n  }).then(respuesta => {\n    if (respuesta.value) {\n      this.datosborrado = JSON.stringify({ \"id_rol\": registro.id_rol });\n      this.adminService.deleteRol(this.datosborrado).subscribe();\n      Swal.fire({\n        title: registro.id_rol,\n        text: 'Registro eliminado',\n        icon: 'success',\n        showConfirmButton: false\n      }), this.recarga();\n    }\n  });\n}\n\n\n\n}\n","\n<div class=\"rol\">\n    <div class=\"col-12 alert bg-dark text-white\">\n        <div class=\"row\">\n            <div class=\"col-9\"><h4>Roles - Cree o edite roles con nivel de acceso</h4></div>\n            <div class=\"col-3 text-right\"><a (click)=\"openroles(content)\" class=\"altaseguimientow\" alt=\"Añadir rol\" title=\"Añadir rol\"><i class=\"fa fa-plus fa-1\"></i></a></div>\n        </div>\n    </div>\n</div>\n<div class=\"rol\">\n    <div class=\"col-12 alert p-0 m-0\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                    <th>Nivel</th>\n                    <th>Nombre Rol</th>\n                    <th>Descripción</th>\n                    <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let rol of roles\">\n                        <td>{{ rol.rol_level }}</td>\n                        <td>{{rol.rol_name}}</td>\n                        <td>{{ rol.roldescripcion }}</td>\n                        <td>              \n                        <span *ngIf=\"rol.id_rol != 8 &&  rol.id_rol != 7 &&  rol.id_rol != 6 && rol.id_rol != 5 &&  rol.id_rol != 4 && rol.id_rol != 3 && rol.id_rol != 2 && rol.id_rol != 1 \">\n                        <a\n                            alt=\"Eliminar rol\"\n                            title=\"Eliminar rol\"\n                            (click)=\"eliminarrol(rol, i)\"\n                            class=\"altaseguimiento\"\n                            ><i class=\"fa fa-trash\"></i\n                        ></a>\n                        </span>  \n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n    </div>\n</div>\n\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Nuevo Rol\n      </h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <input\n          name=\"id_persona_log\"\n          type=\"hidden\"\n          #id_persona_log=\"ngModel\"\n          [(ngModel)]=\"datosformulario.id_persona_log\"\n        />\n        <label for=\"rol_name\">Asigne un nombre al Rol</label>\n        <input\n        name=\"rol_name\"\n        type=\"text\"\n        #rol_name=\"ngModel\"\n        class=\"form-control  mb-2\"\n        [(ngModel)]=\"datosformulario.rol_name\"\n        />\n        <p>Seleccione el nivel de acceso de este nuevo rol</p>\n        <div class=\"input-group\">\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm mb-2\"\n            name=\"rol_level\"\n            placeholder=\"Seleccione nivel\"\n            #rol_level=\"ngModel\"\n            [(ngModel)]=\"datosformulario.rol_level\"\n          >\n            <option [ngValue]=\"null\">Seleccione nivel</option>\n            <option\n              *ngFor=\"let rolarray of roles\"\n              value=\"{{ rolarray.rol_level }}\">\n            {{ rolarray.rol_level }} - {{ rolarray.roldescripcion }}\n            </option>\n          </select>\n        </div>\n        <p\n        >Breve descripción</p>\n        <div class=\"input-group\">\n            <textarea rows=\"2\" \n            required \n            class=\"form-control  mb-2\" \n            maxlength=\"45\"\n            name=\"roldescripcion\" \n            #roldescripcion=\"ngModel\" \n            [(ngModel)]=\"datosformulario.roldescripcion\"></textarea>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button (click)=\"guardarNuevoRol()\" class=\"btn btn-info\">\n        Añadir Rol\n      </button>\n    </div>\n  </ng-template>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../../models/constantes.model';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport Swal from 'sweetalert2';\nimport { Observable } from 'rxjs';\nimport { AdminServicioService } from '../../services/admin-servicio.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Turnos } from '../../models/turnos';\nimport { Roles } from '../../models/roles';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-formturnos',\n  templateUrl: './turnos.component.html',\n  styles: [\n  ],\n})\n\nexport class TurnosFormComponent implements OnInit {\n  model: NgbDateStruct;\n  turnos: Turnos[] = [];\n  roles: Roles[] = [];\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  closeResult = '';\n\n  datosformularioturno = {\n    id_persona_log: localStorage.getItem('id_persona'),\n    horainicio: null,\n    horafin: null,\n    turno:  null,\n    tipo_turno:  null,\n    turno_horario:  null,\n    id_rol: null,\n    rol_name: null\n  }\n  datosborradoturno: string;\n  constructor(private httpClient: HttpClient,private modalService: NgbModal,private adminService: AdminServicioService) {\n\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/turnos_read.php').subscribe(result => {\n        this.turnos = result;\n      }, error => console.error(error));\n\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n        this.roles = result;\n      }, error => console.error(error));\n\n   }\n\n  ngOnInit(){\n  }\n\n  recarga() {\n    location.reload();\n  }\n\n  //abrir modal\n  openturnos(content) {\n        this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n          this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n  }\n  private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n          return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n          return 'by clicking on a backdrop';\n        } else {\n          return `with: ${reason}`;\n        }\n  }\n\n\n  guardarNuevoTurno() {\n\n    if (\n        this.datosformularioturno.tipo_turno == null || \n        this.datosformularioturno.turno == null || \n        this.datosformularioturno.horafin == null || \n        this.datosformularioturno.horainicio == null || \n        this.datosformularioturno.id_rol == null \n      ) {\n      Swal.fire({\n        text: 'Debe completar los campos!',\n        icon: 'error',\n        showConfirmButton: true\n      });\n\n    } else {\n            //si el campo que recibo es hora...\n            //...valido su formato\n              var patronHora = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n              var horaResulinicio = patronHora.test(this.datosformularioturno.horainicio);\n              var horaResultfin = patronHora.test(this.datosformularioturno.horafin);\n\n              var hoy = formatDate(new Date(), 'yyyy-MM-dd ', 'es');\n              var int = hoy + \" \" + this.datosformularioturno.horainicio;\n              var inicio = Date.parse(int);\n              var fnt = hoy + \" \" + this.datosformularioturno.horafin;\n              var fin = Date.parse(fnt);\n\n              if(horaResulinicio==false){\n\n                Swal.fire({\n                  title: 'Revise los datos',\n                  text: 'El campo \"hora inicio\" debe de cumplir con los requerimientos!!',\n                  icon: 'error',\n                }); \n                this.ngOnInit();  \n\n              } else if(horaResultfin==false){\n                  Swal.fire({\n                    title: 'Revise los datos',\n                    text: 'El campo \"hora fin\" debe de cumplir con los requerimientos!!',\n                    icon: 'error',\n                  }); \n                  this.ngOnInit();  \n              }\n              else if(inicio > fin){\n                Swal.fire({\n                  title: 'Revise los datos',\n                  text: 'La hora de inicio n opuede ser posterior a la hora final',\n                  icon: 'error',\n                }); \n                this.ngOnInit();  \n            }\n\n                else {\n                  let peticion: Observable<any>;\n                  peticion = this.adminService.guardarTurno(this.datosformularioturno);\n                  peticion.subscribe(respuesta => {\n                    Swal.fire({\n                      title: this.datosformularioturno.turno,\n                      text: 'Nuevo turno creado',\n                      icon: 'success',\n                      showConfirmButton: false\n                    }), this.recarga();\n                  });\n              }\n             \n     }\n    }\n\n \neliminarturno(registro: Turnos, i: string) {\n  Swal.fire({\n    title: `WARNING!! ¿Desea elimina este rol?`,\n    text: 'Confirme si desea borrar el turno. Tenga en cuenta que todas las tareas o registros que haya creado bajo este turno quedarán sin turno asignado',\n    icon: 'question',\n    showConfirmButton: true,\n    showCancelButton: true\n  }).then(respuesta => {\n    if (respuesta.value) {\n      this.datosborradoturno = JSON.stringify({ \"id_turno\": registro.id_turno });\n      this.adminService.deleteTurno(this.datosborradoturno).subscribe();\n      Swal.fire({\n        title: registro.id_turno,\n        text: 'Registro eliminado',\n        icon: 'success',\n        showConfirmButton: false\n      }), this.recarga();\n    }\n  });\n}\n\n\n\n}\n","\n<div class=\"rol\">\n    <div class=\"col-12 alert bg-dark text-white\">\n        <div class=\"row\">\n            <div class=\"col-9\"><h4>Turnos - Añada o edite componentes de turnos para determinados roles</h4></div>\n            <div class=\"col-3 text-right\"><a (click)=\"openturnos(content)\" class=\"altaseguimientow\" alt=\"Añadir turno\" title=\"Añadir turno\"><i class=\"fa fa-plus fa-1\"></i></a></div>\n        </div>\n    </div>\n</div>\n<div class=\"rol\">\n    <div class=\"col-12 alert p-0 m-0\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                    <th>Rol</th>\n                    <th>Nombre Turno</th>\n                    <th>Tipo</th>\n                    <th>Hora inicio</th>\n                    <th>Hora fin</th>\n                    <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let turno of turnos\">\n                        <td>{{ turno.rol_name }}</td>\n                        <td>{{turno.turno}}</td>\n                        <td>{{turno.tipo_turno}}</td>\n                        <td>{{ turno.horainicio }}</td>\n                        <td>{{ turno.horafin }}</td>\n                        <td>              \n                        <span *ngIf=\"turno.id_turno > 34\">\n                        <a\n                            alt=\"Eliminar Turno\"\n                            title=\"Eliminar Turno\"\n                            (click)=\"eliminarturno(turno, i)\"\n                            class=\"altaseguimiento\"\n                            ><i class=\"fa fa-trash\"></i\n                        ></a>\n                        </span>  \n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n    </div>\n</div>\n<div class=\"comod\">\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Nuevo Rol\n      </h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body \">\n      <div class=\"form-group\">\n        <input\n          name=\"id_persona_log\"\n          type=\"hidden\"\n          #id_persona_log=\"ngModel\"\n          [(ngModel)]=\"datosformularioturno.id_persona_log\"\n        />\n        <p>Asigne un nombre al Turno</p>\n        <input\n        name=\"turno\"\n        type=\"text\"\n        #turno=\"ngModel\"\n        class=\"form-control  mb-2\"\n        [(ngModel)]=\"datosformularioturno.turno\"\n        />\n        <p>Asigne un rol al turno</p>\n        <div class=\"input-group\">\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm mb-2\"\n            name=\"id_rol\"\n            placeholder=\"Seleccione rol\"\n            #id_rol=\"ngModel\"\n            [(ngModel)]=\"datosformularioturno.id_rol\"\n          >\n            <option [ngValue]=\"null\">Seleccione rol</option>\n            <option\n              *ngFor=\"let rolarray of roles\"\n              value=\"{{ rolarray.id_rol }}\">\n               {{ rolarray.rol_name }}\n            </option>\n          </select>\n        </div>\n        <p>Asigne un tipo de turno</p>\n        <div class=\"input-group\">\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm mb-2\"\n            name=\"tipo_turno\"\n            placeholder=\"Seleccione tipo de turno\"\n            #tipo_turno=\"ngModel\"\n            [(ngModel)]=\"datosformularioturno.tipo_turno\"\n          >\n            <option [ngValue]=\"null\">Seleccione tipo turno</option>\n            <option value=\"entre semana\">entre semana</option>\n            <option value=\"fin semana\">fin semana</option>\n          </select>\n        </div>\n        <p>Hora inicio</p>\n        <input\n            name=\"horainicio\"\n            type=\"text\"\n            id=\"reloj\"\n            placeholder=\"00:00\"\n            #horainicio=\"ngModel\"\n            class=\"form-control  mb-2\"\n            [(ngModel)]=\"datosformularioturno.horainicio\"\n            pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n            minlength=\"5\"\n            maxlength=\"5\"\n            [ngxTimepicker]=\"fullTime\"\n            [format]=\"24\"\n            readonly\n        />    <ngx-material-timepicker\n        #fullTime\n        [minutesGap]=\"30\"\n      ></ngx-material-timepicker>\n        <p>Hora fin</p>\n        <input\n            name=\"horafin\"\n            type=\"text\"\n            id=\"reloj\"\n            placeholder=\"00:00\"\n            #horafin=\"ngModel\"\n            class=\"form-control  mb-2\"\n            [(ngModel)]=\"datosformularioturno.horafin\"\n            pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n            minlength=\"5\"\n            maxlength=\"5\"\n            [ngxTimepicker]=\"fullTimeFin\"\n            [format]=\"24\"\n            readonly\n        />\n        <ngx-material-timepicker\n        #fullTimeFin\n        [minutesGap]=\"15\"\n      ></ngx-material-timepicker>\n       \n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button (click)=\"guardarNuevoTurno()\" class=\"btn btn-info\">\n        Añadir Turno\n      </button>\n    </div>\n  </ng-template>\n</div>","import {Component, ViewChild} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../models/constantes.model';\nimport { HistoricoService } from '../services/historico.service';\n\n@Component({\n  selector: 'app-historico',\n  templateUrl: './historico.component.html'\n  \n})\n\nexport class HistoricoComponent {\n   \n  personas:Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_log: null,\n    fecha: null,\n    tarea: null,\n    issueg: null,\n    descripcion_accion: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_log: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  \n  constructor(private httpClient: HttpClient, private historicoService: HistoricoService) {\n        this.fetch(data => {\n          // cache\n            this.temp = [...data];\n            this.rows = data;\n        });\n\n\n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit(){\n    this.fetch(data => {\n        this.temp = [...data];\n        this.rows = data;\n      });\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n      location.reload();\n  }\n\n  //cargamos el listado\n  fetch(cb) {\n    if(cb){\n      const req = new XMLHttpRequest();\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/read_historico.php`);\n      req.onload = () => {\n        cb(JSON.parse(req.response));\n        console.log(JSON.parse(req.response));\n      };\n      req.send();\n    }\n  }\n\n\n\n\n   //eliminar registro      \n   borrarRegistro ( registro: Issue, i:string){\n\n    Swal.fire({\n        title: `¿Desea borrar el registro histórico ${registro.tarea}`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"tarea\": registro.tarea, \"id_tarea\": registro.id_tarea });\n            this.historicoService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.tarea,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function(d) {\n      return  d.tarea.toLowerCase().indexOf(val) !== -1 || d.fecha.toLowerCase().indexOf(val) !== -1|| d.nombres.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Historial {{ \"txtRegistros\" | translate }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2 mt-4\">\n    <div class=\"col-md-12 alturaminima mb-5\">\n\n<div class=\"row\">\n  <div class=\"col-6\">\n    <div class=\"form\">\n      <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n        <input\n          matInput\n          #filter\n          placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\n          (keyup)=\"updateFilter($event)\"\n        />\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"col-6 text-right\">\n  </div>\n</div>\n\n      <ngx-datatable\n        #mydatatable\n        class=\"material striped\"\n        headerHeight=\"50\"\n        [limit]=\"15\"\n        [columnMode]=\"'force'\"\n        footerHeight=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"id_log\" [maxWidth]=\"90\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <div class=\"text-center\">{{ row.id_log }}</div>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Fecha\" [maxWidth]=\"200\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n              {{ value | slice: 0:90 }}\n\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Tarea\" [maxWidth]=\"1010\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n\n              {{ value | slice: 0:90 }}\n           \n          \n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Nombres\" [maxWidth]=\"210\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n           \n              {{ value }}\n            \n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Descripcion\" [maxWidth]=\"390\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-row=\"row\"\n            let-value=\"value\"\n          >\n\n                {{ value }}\n\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"ver\" [maxWidth]=\"80\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-row=\"row\"\n          >\n            <div class=\"text-center\">\n              <div class=\"row\">\n                <div class=\"col-12 p0 m0\">\n                  <a\n                    [routerLink]=\"['/detallehistorico', row.id_log]\"\n                    class=\"btn btn-warning botonsizes mr-1\"\n                    ><i class=\"fa fa-eye\"></i\n                  ></a>\n              \n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n\n\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","import {Component, ViewChild} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../models/constantes.model';\nimport { HistoricoService } from '../services/historico.service';\n\n@Component({\n  selector: 'app-historicomini',\n  templateUrl: './historicomini.component.html'\n  \n})\n\nexport class HistoricoMiniComponent {\n   \n  personas:Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_log: null,\n    fecha: null,\n    tarea: null,\n    issueg: null,\n    descripcion_accion: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_log: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  \n  constructor(private httpClient: HttpClient, private historicoService: HistoricoService) {\n        this.fetch(data => {\n          // cache\n            this.temp = [...data];\n            this.rows = data;\n        });\n\n\n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit(){\n    this.fetch(data => {\n        this.temp = [...data];\n        this.rows = data;\n      });\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n      location.reload();\n  }\n\n  //cargamos el listado\n  fetch(cb) {\n    if(cb){\n      const req = new XMLHttpRequest();\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/read_historico.php`);\n      req.onload = () => {\n        cb(JSON.parse(req.response));\n \n      };\n      req.send();\n    }\n  }\n\n\n\n\n   //eliminar registro      \n   borrarRegistro ( registro: Issue, i:string){\n\n    Swal.fire({\n        title: `¿Desea borrar el registro histórico ${registro.tarea}`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"tarea\": registro.tarea, \"id_tarea\": registro.id_tarea });\n            this.historicoService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.tarea,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function(d) {\n      return  d.tarea.toLowerCase().indexOf(val) !== -1 || d.fecha.toLowerCase().indexOf(val) !== -1|| d.nombres.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","\n <li class=\"list-group-item\" *ngFor=\"let row of rows\" >\n{{ row.id_log }}\n{{ row.fecha }}\n{{ row.tarea }}\n{{ row.nombres }}\n{{ row.descripcion }}\n</li>\n        \n\n\n\n","import { Component, ViewChild } from '@angular/core';\nimport { ApiPersonas } from '../services/apipersonas.service';\nimport { Personas } from '../models/personas';\n\n\n@Component({\n  selector: 'app-app',\n  templateUrl: './home.component.html'\n\n})\n\nexport class HomeComponent {\n\n  registroroleperson: Personas = new Personas();\n\n  constructor(private registroRoleService: ApiPersonas ) {\n\n  }\n\n  ngOnInit() {\n\n    //verificar  id_usuario y id_rol\n    const id_persona = localStorage.getItem('id_persona');\n    this.registroRoleService.getPerson(id_persona)\n      .subscribe((respuesta: Personas) => {\n        this.registroroleperson = respuesta;\n        this.registroroleperson.id_persona = id_persona;\n      });\n\n\n  }\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ \"txtRegistros\" | translate }} \n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2 mt-4\">\n    <div class=\"col-md-12 alturaminima mb-5\">\n        <div *ngIf=\"registroroleperson.id_rol==='8'\">\n          <app-apphome></app-apphome>\n        </div>\n        <div *ngIf=\"registroroleperson.id_rol!='8'\">\n          <app-elegirturno></app-elegirturno>\n        </div>\n    </div>\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { WebsocketService } from '../../services/websocket.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-identificacion',\n  templateUrl: './identificacion.component.html'\n})\nexport class IdentificacionComponent implements OnInit {\n\n\n  nombre='';\n\n  constructor(public wsService: WebsocketService, private router: Router ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  ingresar(){\n    this.wsService.loginWS( this.nombre )\n    .then( () =>{\n        this.router.navigateByUrl('/mensajes');\n    });\n  }\n}\n","<h1>Login></h1>\n<hr />\n<div class=\"row justify-content-center\">\n\n<div class=\"col-9\">\n     <form class=\"p-4\" (ngSubmit)=\"ingresar()\">\n<input type=\"text\" [(ngModel)]=\"nombre\"\nname=\"nombre\" class=\"form-control\"\nplaceholder=\"nombre usuario\"\nautofocus>\n<button [disabled]=\"nombre.trim().length === 0\"\nclass=\"btn btn-primary btn-block mt-3\">Ingresar</button>\n     </form>\n</div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, NgForm, NgModel } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { DataserviceService } from '../../services/dataservice.service';\nimport Swal from 'sweetalert2';\nimport { WebsocketService } from '../../services/websocket.service';\n\n \n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  angForm: FormGroup;\n  datosphp: string;\n  mail='';\n  constructor(public wsService: WebsocketService, private fb: FormBuilder,private dataService: DataserviceService,private router:Router) {\n    this.angForm = this.fb.group({\n \n      email: ['', [Validators.required,Validators.minLength(1), Validators.email]],\n      password: ['', Validators.required]\n \n    });\n\n    \n    this.wsService.loginWS( this.mail )\n    .then( () =>{\n       // this.router.navigateByUrl('/mensajes');\n    });\n\n\n   }\n \n  ngOnInit() {\n      if(localStorage.removeItem('id_persona') != null){\n\n        const keysToRemove = [\"token\", \"id_persona\", \"usuario\", \"id_rol\"];\n        for (const key of keysToRemove) {\n            localStorage.removeItem(key);\n        }\n        \n        this.router.navigateByUrl('');\n\n      }\n  }\n\n\n\n\n\n\n\n\n  postdata(angForm:FormGroup)\n  {\n\n    var patronEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/;\n    var emailResult = patronEmail.test(angForm.value.email);\n        if(emailResult==false){\n              Swal.fire({\n                text: 'El campo E-mail debe cumplir con el formato adecuado',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n        } else {\n\n\n            // this.datosphp = JSON.stringify({ \"email\": angForm.value.email, \"password\": angForm.value.password });\n            this.dataService.userlogin(angForm.value.email,angForm.value.password)\n              .pipe(first())\n              .subscribe(\n                  data => {\n                        const redirect = this.dataService.redirectUrl ? this.dataService.redirectUrl : '/home';\n                        this.router.navigate([redirect]);\n                  },\n                  error => {\n                    Swal.fire({\n                      text: 'El campo E-mail o el password son erróneos. revise los datos.',\n                      icon: 'error',  \n                      showConfirmButton : true\n                    });\n                  });\n        }\n\n  }\n  get email() { return this.angForm.get('email'); }\n  get password() { return this.angForm.get('password'); }\n}","<div class=\"limiter animated fadeInLeft\">\n    <div class=\"container-login100\">\n        <div class=\"wrap-login100 p-t-50 p-b-90\">\n           \n\n\n            <form \n            [formGroup]=\"angForm\" \n            (ngSubmit)=\"postdata(angForm)\" \n            autocomplete=\"off\" \n            class=\"login100-form validate-form flex-sb flex-w\"\n            >\n\n\n\n            <span class=\"login100-form-title p-b-51\">\n                Login\n            </span>\n            <div class=\"wrap-input100 m-b-16\">\n               \n                <input \n                type=\"email\" \n                name=\"email\" \n                formControlName=\"email\" \n                autocomplete=\"off\" \n                class=\"input100\" \n                required\n               \n                placeholder=\"E-mail\">\n                <span class=\"focus-input100\"></span>\n            </div>\n            <div class=\"wrap-input100 m-b-16\">\n                <input \n                type=\"password\" \n                name=\"Password\" \n                formControlName=\"password\"  \n                autocomplete=\"off\" \n                class=\"input100\" \n                placeholder=\"Password\"\n                required\n                minlength=\"6\">\n                <span class=\"focus-input100\"></span>\n            </div>\n                \n                <!-- <div class=\"flex-sb-m w-full p-t-3 p-b-24\">\n                    <div class=\"contact100-form-checkbox\">\n                        <input [(ngModel)]=\"recordarme\"\n                        class=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\">\n                        <label class=\"label-checkbox100\" for=\"ckb1\">\n                            Recordar mi usuario\n                        </label>\n                    </div>\n\n                    <div>\n                        \n                    </div>\n                </div> -->\n\n                <div class=\"container-login100-form-btn m-t-17\">\n                    <button \n                    type=\"submit\" \n                    class=\"login100-form-btn\" \n                 \n                    >Ingresar</button>\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { WebsocketService } from '../../services/websocket.service';\n\n@Component({\n  selector: 'app-mensajes',\n  templateUrl: './mensajes.component.html'\n  \n})\nexport class MensajesComponent implements OnInit {\n\n  constructor(public wsService: WebsocketService) { }\n\n  ngOnInit() {\n  }\n\n\n}\n","\n<div class=\"row\">\n    <div class=\"col-12\">\n        <app-chat></app-chat>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\nimport { DetalleHistoricoService } from '../services/detallehistorico.service';\nimport { ApiPersonas } from '../services/apipersonas.service';\nimport { Roles } from '../models/roles';\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html'\n  \n})\n\n\n\nexport class PerfilPersona implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:Personas = new Personas();\n\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n\n    personas: Personas [] = [];\n    roles: Roles[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n\n    fieldTextType: boolean;\n    datoregistro = {\n      id_persona: this.activatedRoute.snapshot.paramMap.get('id_persona'),\n      id_persona_log: localStorage.getItem('id_persona'),\n      nombres: null,\n      telefono: null,\n      email:  null,\n      direccion: null,\n      registrado: null,\n      id_rol: null,\n      password:  null,\n      imagen:  null\n    }\n\n    \n\n  constructor(private httpClient: HttpClient,private registroService: ApiPersonas,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n       //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n\n              }\n\n\n\n  ngOnInit(){\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona');\n \n    this.registroService.getPerson ( id_persona )\n      .subscribe( (respuesta:Personas) => {\n         this.registro = respuesta;\n         this.registro.id_persona =   id_persona;\n\n      });\n\n  }\n\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  recarga(){ \n    location.reload();\n  }\n\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  \n\n\n\n  //alta de registro\n  altaRegistro() {\n\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.nombres==null || this.datoregistro.email==null || this.datoregistro.id_rol==null || this.datoregistro.password==null){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos obligatorios no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.registroService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.nombres,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : false\n          }),this.recarga();      \n        });\n    }\n  }\n\n  \n\n\n  guardarregistro( ){\n    console.log(this.registro);\n    //eliminamos del local storage el id_rol siempre y cuando lo hayamos cambiado\n    //y lo volvemos a cambiar por el nuevo\n    // if(this.registro.id_rol!=''){\n    //   localStorage.removeItem('id_rol');\n    //   localStorage.setItem('id_rol',this.registro.id_rol);\n    // }\n\n    if(\n      this.registro.nombres=='' || \n      this.registro.telefono=='' || \n      this.registro.email=='' || \n\n      this.registro.direccion=='' ||\n      this.registro.id_rol=='' \n      ){\n     Swal.fire({\n       text: 'Los campos obligatorios no pueden quedar vacíos',\n       icon: 'error',  \n       showConfirmButton : true\n     }); \n    }  else {\n            //validacion email      \n            var patronEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/;\n            var emailResult = patronEmail.test(this.registro.email);\n            if(emailResult==false){\n              Swal.fire({\n                text: 'El campo E-mail debe cumplir con el formato adecuado',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else \n            // validacion password\n            // al menos 1 número, una minúscula y una mayuscula\n            // al menos 6 carácteres\n            var patronPassword = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/;\n            var passwordResult = patronPassword.test(this.registro.password);\n            if(passwordResult==false){\n              Swal.fire({\n                text: 'El campo Password debe tener al menos 1 número, una minúscula y una mayúscula y como mínimo 6 carácteres',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else {\n              let peticion: Observable<any>;\n              peticion = this.registroService.actualizarRegistro(this.registro);\n              peticion.subscribe( respuesta => {\n                Swal.fire({\n                  title: this.registro.nombres,\n                  text: 'Registro modificado',\n                  icon: 'success',  \n                  showConfirmButton : false\n                }),this.recarga();  \n              });\n            }\n\n   }\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.nombres }} - #{{ registro.id_persona }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.registrado | date: \"dd/MM/y HH:mm\"\n          }}</em>\n         \n          \n          \n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-2 alturaminima mb-5\">\n       \n\n\n\n\n<app-modimagen></app-modimagen>\n\n\n\n\n\n\n\n      </div>\n\n        <div class=\"col-md-10 alturaminima mb-5\">\n\n\n\n        <div class=\"form-group\">\n          <label for=\"nombres\">{{ \"txtNombres\" | translate }}</label>\n          <input\n            required\n            style=\"background-color: white;\"\n            placeholder=\"{{ 'txtNombres' | translate }}\"\n            class=\"form-control form-control-sm\"\n            [class.is-invalid]=\"nombres.invalid && nombres.touched\"\n            #nombres=\"ngModel\"\n            required\n            minlength=\"4\"\n            name=\"nombres\"\n            type=\"text\"\n            [(ngModel)]=\"registro.nombres\"\n          />\n        </div>\n  \n\n\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"txtEmail\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtEmail' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"email.invalid && email.touched\"\n              #email=\"ngModel\"\n              required\n              [email]=\"true\"\n              name=\"email\"\n              type=\"email\"\n              [(ngModel)]=\"registro.email\"\n            />\n          </div>\n  </div>\n  <div class=\"col-md-4\">       \n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"txtPassword\" | translate }}</label>\n            <div class=\"input-group\">\n            <input\n              required\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtPassword' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"password.invalid && password.touched\"\n              #password=\"ngModel\"\n              required\n              name=\"password\"\n              type=\"password\"\n              [(ngModel)]=\"registro.password\"\n              [type]=\"fieldTextType ? 'text' : 'password'\"\n            />\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\">\n                <i\n                class=\"fa\"\n                [ngClass]=\"{\n                  'fa-eye-slash': !fieldTextType,\n                  'fa-eye': fieldTextType\n                }\"\n                (click)=\"toggleFieldTextType()\"\n              ></i>\n              </span>\n           </div>\n          </div>\n</div>\n</div>    \n<div class=\"col-md-4\">\n  <div class=\"form-group\">\n    <label for=\"telefono\">{{ \"txtTelefono\" | translate }}</label>\n    <input\n      style=\"background-color: white;\"\n      placeholder=\"{{ 'txt9digitos' | translate }}\"\n      class=\"form-control form-control-sm\"\n      #telefono=\"ngModel\"\n      minlength=\"9\"\n      name=\"telefono\"\n      type=\"text\"\n      [(ngModel)]=\"registro.telefono\"\n    />\n  </div>\n</div>\n\n\n</div>\n<div class=\"row\">\n<div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"direccion\">{{ \"txtDireccion\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtDireccion' | translate }}\"\n              class=\"form-control form-control-sm\"\n              #direccion=\"ngModel\"\n              name=\"direccion\"\n              type=\"text\"\n              [(ngModel)]=\"registro.direccion\"\n            />\n          </div>\n\n</div>\n<div class=\"col-md-6\">\n\n\n        <div class=\"form-group\">\n          <label for=\"id_rol\">{{ \"txtRol\" | translate }}</label>\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm\"\n            name=\"id_rol\"\n           disabled\n           readonly\n            [class.is-invalid]=\"id_rol.invalid && id_rol.touched\"\n            #id_rol=\"ngModel\"\n            [(ngModel)]=\"registro.id_rol\"\n          >\n          <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\n            {{rol.rol_name}}\n          </option>\n          </select>\n        </div>\n</div>\n</div>\n        <div class=\"form-group text-center\">\n           <button (click)=\"guardarregistro()\" class=\"btn btn-primary colortopacio\">\n            {{ \"txtModificar\" | translate }}\n          </button> \n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    </div>\n \n\n \n\n  <app-footer></app-footer>\n</div>\n","import {Component, ViewChild} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { ColumnMode } from '@swimlane/ngx-datatable';\r\nimport Swal from 'sweetalert2';\r\nimport { Constantes } from '../models/constantes.model';\r\nimport { ApiPersonas } from '../services/apipersonas.service';\r\nimport { Roles } from '../models/roles';\r\nimport { Personas } from '../models/personas';\r\n\r\n@Component({\r\n  selector: 'app-personas',\r\n  templateUrl: './personas.pages.html'\r\n  \r\n})\r\n\r\nexport class PersonasPage {\r\n  roles: Roles[] = [];\r\n  personas:Personas[] = [];\r\n  issue: Personas = new Personas();\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n\r\n  final: Observable<Object>;\r\n  dregistro = null;\r\n  datoregistro = {\r\n    id_persona: null,\r\n    nombres: null,\r\n    telefono: null,\r\n    email:  null,\r\n    direccion: null,\r\n    id_rol: null,\r\n    password:  null,\r\n    imagen:  null,\r\n    id_persona_log: localStorage.getItem('id_persona')\r\n  }\r\n  emailvalida = {\r\n    mailexiste: null\r\n  }\r\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\r\n  ColumnMode = ColumnMode;\r\n  campo: any;\r\n  id_persona: any;\r\n  valor: any;\r\n  ever: any;\r\n  datos: string;\r\n  datosborrado: string;\r\n\r\n\r\n  \r\n  constructor(private httpClient: HttpClient, private apiService: ApiPersonas) {\r\n        this.fetch(data => {\r\n          // cache\r\n            this.temp = [...data];\r\n            this.rows = data;\r\n        });\r\n\r\n        //cargo los roles para los combos select\r\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\r\n            this.roles = result;\r\n          }, error => console.error(error));\r\n\r\n  }\r\n\r\n  //el ngoninit nos servira para recargar en caso de error de validacion\r\n  ngOnInit(){\r\n    this.fetch(data => {\r\n        this.temp = [...data];\r\n        this.rows = data;\r\n      });\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga(){ \r\n      location.reload();\r\n  }\r\n\r\n  //cargamos el listado\r\n  fetch(cb) {\r\n    if(cb){\r\n      const req = new XMLHttpRequest();\r\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/personas_read.php`);\r\n      req.onload = () => {\r\n        cb(JSON.parse(req.response));\r\n      };\r\n      req.send();\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  //alta de registro\r\n  altaRegistro() {\r\n\r\n    //compruebo que el email no exista (ya se valida también en el servidor en PHP)\r\n    this.apiService.validaEmail(this.datoregistro.email).subscribe(\r\n      (datosMail:any) => {\r\n        this.emailvalida = datosMail;  \r\n        if(this.emailvalida.mailexiste==true) {\r\n              Swal.fire({\r\n                title: this.datoregistro.email,\r\n                text: 'El e-mail indicado ya existe, escoja otro',\r\n                icon: 'error',  \r\n                showConfirmButton : true\r\n              });  \r\n        }\r\n        //si los campos obligatorios nos llegan vacios\r\n        else if(this.datoregistro.nombres==null || this.datoregistro.email==null || this.datoregistro.id_rol==null || this.datoregistro.password==null){\r\n          Swal.fire({\r\n            title: 'Revise los datos',\r\n            text: 'Los campos obligatorios no pueden estar vacíos!!',\r\n            icon: 'error',\r\n          });   \r\n        } else {\r\n\r\n      //enviamos el array a la funcions del server\r\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\r\n        datos => {\r\n          Swal.fire({\r\n            title: this.datoregistro.nombres,\r\n            text: 'Registro añadido',\r\n            icon: 'success',  \r\n            showConfirmButton : false\r\n          }),this.recarga(); \r\n        });\r\n       }\r\n   });\r\n  }\r\n\r\n  //actualización campos inline\r\n  updateValue(event, cell, rowIndex) {\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    this.rows[rowIndex][cell] = event.target.value;\r\n    this.rows = [...this.rows];\r\n    this.campo = cell;\r\n    this.id_persona = event.target.title;\r\n    this.valor = event.target.value;\r\n    this.ever = this.campo,this.id_persona,this.valor;\r\n    this.datos = JSON.stringify({ \"campo\": this.campo, \"id_persona\": this.id_persona, \"valor\": this.valor });\r\n\r\n    //validacion del formato email\r\n     var patronEmail = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/;\r\n     var emailResult = patronEmail.test(this.valor);\r\n\r\n    // //si el campo que recibo es email...\r\n    if(this.campo == \"email\"){\r\n      //...valido su formato\r\n      if(emailResult==false){\r\n        Swal.fire({\r\n          title: 'Revise los datos',\r\n          text: 'El campo \"email\" debe de cumplir con los requerimientos!!',\r\n          icon: 'error',\r\n        }); \r\n        this.ngOnInit();  \r\n      } \r\n      // else {\r\n      //   Swal.fire({\r\n      //     text: 'Registro actualizado',\r\n      //     icon: 'success',  \r\n      //     showConfirmButton : false\r\n      //   })\r\n      // }\r\n    }\r\n    //el campo que recibo es tarea pero es menor de 3 caracteres\r\n    else \r\n    if(this.campo == \"nombres\" && this.valor.length < 3){\r\n       \r\n          Swal.fire({\r\n            title: 'Revise los datos',\r\n            text: 'El campo \"nombres\" debe contener como mínimo tres carácteres!!',\r\n            icon: 'error',\r\n          });   \r\n          this.ngOnInit();  \r\n             \r\n    } \r\n    else \r\n    if(this.campo == \"telefono\" && this.valor.length < 9){       \r\n          Swal.fire({\r\n            title: 'Revise los datos',\r\n            text: 'El campo \"telefono\" debe contener nueve carácteres!!',\r\n            icon: 'error',\r\n          });   \r\n          this.ngOnInit();  \r\n             \r\n    } else {\r\n      //todo Ok llamo al servicio\r\n      this.apiService.modiRegistro(this.datos).subscribe(\r\n        datos => {\r\n          Swal.fire({\r\n            text: 'Registro actualizado',\r\n            icon: 'success',  \r\n            showConfirmButton : true\r\n          })\r\n      \r\n        });\r\n    }\r\n\r\n  }\r\n\r\n\r\n   //eliminar registro      \r\n   borrarRegistro ( registro: Personas, i:string){\r\n    \r\n    Swal.fire({\r\n        title: `¿Desea borrar el registro ${registro.nombres}`,\r\n        text: 'Confirme si desea borrar el registro',\r\n        icon: 'question',\r\n        showConfirmButton: true,\r\n        showCancelButton: true\r\n\r\n    }).then( respuesta => {\r\n         \r\n        if ( respuesta.value ) {\r\n            const id_persona_log = localStorage.getItem('id_persona');\r\n            this.datosborrado = JSON.stringify({ \"id_persona_log\": id_persona_log,\"nombres\": registro.nombres, \"id_persona\": registro.id_persona });\r\n            this.apiService.delete( this.datosborrado ).subscribe();\r\n\r\n            Swal.fire({\r\n              title: registro.nombres,\r\n              text: 'Registro eliminado',\r\n              icon: 'success',  \r\n              showConfirmButton : false\r\n            })\r\n            ,this.recarga();  \r\n\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n\r\n  //actualizacion filtro busqueda\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n    const temp = this.temp.filter(function(d) {\r\n      return  d.nombres.toLowerCase().indexOf(val) !== -1 || d.telefono.toLowerCase().indexOf(val) !== -1 || d.email.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n    // actualizamos las rows\r\n    this.rows = temp;\r\n    // Cuando cambie el filtro, regresa a la primera página.\r\n    this.table.offset = 0;\r\n  }\r\n\r\n}\r\n\r\ninterface Rols {\r\n    rol_name: string;\r\n}","<div class=\"page-content\" id=\"content\">\r\n    <app-header></app-header>\r\n    <app-menu></app-menu>\r\n  \r\n    <div class=\"row m-2\">\r\n      <div class=\"col-md-12 mt-4\">\r\n        <h3>{{ \"txtPersonas\" | translate }}</h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n              <a [routerLink]=\"['/', 'home']\">Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n              {{ \"txtPersonas\" | translate }}\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"row m-2 mt-4\">\r\n      <div class=\"col-md-8 alturaminima mb-5\">\r\n        <div class=\"form\">\r\n          <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\r\n            <input\r\n              matInput\r\n              #filter\r\n              placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\r\n              (keyup)=\"updateFilter($event)\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n        <ngx-datatable\r\n          #mydatatable\r\n          class=\"material striped\"\r\n          headerHeight=\"50\"\r\n          [limit]=\"15\"\r\n          [columnMode]=\"'force'\"\r\n          footerHeight=\"50\"\r\n          rowHeight=\"auto\"\r\n          [rows]=\"rows\"\r\n        >\r\n          <ngx-datatable-column name=\"id_persona\" [maxWidth]=\"90\">\r\n            <ng-template\r\n              class=\"mat-column-id\"\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <div class=\"text-center\">{{ row.id_persona }}</div>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n          <ngx-datatable-column name=\"Nombres\" [maxWidth]=\"1810\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span\r\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                (dblclick)=\"editing[rowIndex + '-nombres'] = true\"\r\n                *ngIf=\"!editing[rowIndex + '-nombres']\"\r\n              >\r\n                {{ value | slice: 0:90 }}\r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'nombres', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-nombres']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id_persona\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n          <ngx-datatable-column name=\"Telefono\" [maxWidth]=\"120\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span\r\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                (dblclick)=\"editing[rowIndex + '-telefono'] = true\"\r\n                *ngIf=\"!editing[rowIndex + '-telefono']\"\r\n              >\r\n           <a href='tel:{{ value }}'>{{ value | slice: 0:90 }}</a> \r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'telefono', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-telefono']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id_persona\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n\r\n\r\n\r\n          <ngx-datatable-column name=\"Email\" [maxWidth]=\"180\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span\r\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                (dblclick)=\"editing[rowIndex + '-email'] = true\"\r\n                *ngIf=\"!editing[rowIndex + '-email']\"\r\n              >\r\n              <a href='mailto:{{ value }}'> {{ value | slice: 0:90 }}</a>\r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'email', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-email']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id_persona\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n\r\n<!-- \r\n\r\n          <ngx-datatable-column name=\"Registrado\" [maxWidth]=\"1810\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span>\r\n                {{ value | slice: 0:10 }}\r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'registrado', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-registrado']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column> -->\r\n\r\n\r\n          <ngx-datatable-column name=\"Rol\" [maxWidth]=\"80\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-row=\"row\"\r\n              let-value=\"value\"\r\n            >\r\n\r\n           \r\n\r\n                <span\r\n                  title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                  (dblclick)=\"editing[rowIndex + '-id_rol'] = true\"\r\n                  *ngIf=\"!editing[rowIndex + '-id_rol']\"\r\n                >\r\n                  {{ value }}\r\n                </span>\r\n                <input type=\"hidden\" #varId [value]=\"row.id_persona\" />\r\n  \r\n                <select\r\n                  class=\"form-control\"\r\n                  name=\"id_rol\"\r\n                  *ngIf=\"editing[rowIndex + '-id_rol']\"\r\n                  (blur)=\"editing[rowIndex + '-id_rol'] = false\"\r\n                  (change)=\"updateValue($event, 'id_rol', rowIndex)\"\r\n                  [value]=\"value\"\r\n                  [title]=\"row.id_persona\"\r\n                >\r\n                <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\r\n                    {{rol.rol_name}}\r\n                  </option>\r\n        \r\n                </select>\r\n             \r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n          <ngx-datatable-column name=\"ver\" [maxWidth]=\"80\">\r\n            <ng-template\r\n              class=\"mat-column-id\"\r\n              ngx-datatable-cell-template\r\n              let-row=\"row\"\r\n            >\r\n              <div class=\"text-center\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 p0 m0\">\r\n                    <a\r\n                      [routerLink]=\"['/detallepersona', row.id_persona]\"\r\n                      class=\"btn btn-warning botonsizes mr-1\"\r\n                      ><i class=\"fa fa-pencil\"></i\r\n                    ></a>\r\n                    <button\r\n                      (click)=\"borrarRegistro(row, i)\"\r\n                      class=\"btn btn-warning botonsizes\"\r\n                    >\r\n                      <i class=\"fa fa-trash\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n      <div class=\"col-md-4 pt-5\">\r\n        <div class=\"form-group\">\r\n        \r\n  \r\n      </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"nombres\">{{ \"txtNombres\" | translate }}</label>\r\n          <input\r\n            required\r\n            style=\"background-color: white;\"\r\n            placeholder=\"{{ 'txtNombres' | translate }}\"\r\n            class=\"form-control form-control-sm\"\r\n            [class.is-invalid]=\"nombres.invalid && nombres.touched\"\r\n            #nombres=\"ngModel\"\r\n            required\r\n            minlength=\"4\"\r\n            name=\"nombres\"\r\n            type=\"text\"\r\n            [(ngModel)]=\"datoregistro.nombres\"\r\n          />\r\n        </div>\r\n  \r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"telefono\">{{ \"txtTelefono\" | translate }}</label>\r\n            <input\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txt9digitos' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              #telefono=\"ngModel\"\r\n              minlength=\"9\"\r\n              name=\"telefono\"\r\n              type=\"text\"\r\n              [(ngModel)]=\"datoregistro.telefono\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">{{ \"txtEmail\" | translate }}</label>\r\n            <input\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txtEmail' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              [class.is-invalid]=\"email.invalid && email.touched\"\r\n              #email=\"ngModel\"\r\n              required\r\n              [email]=\"true\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              [(ngModel)]=\"datoregistro.email\"\r\n            />\r\n          </div>\r\n          \r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"direccion\">{{ \"txtDireccion\" | translate }}</label>\r\n            <input\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txtDireccion' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              #direccion=\"ngModel\"\r\n              name=\"direccion\"\r\n              type=\"text\"\r\n              [(ngModel)]=\"datoregistro.direccion\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">{{ \"txtPassword\" | translate }}</label>\r\n            <input\r\n              required\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txtPassword' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              [class.is-invalid]=\"password.invalid && password.touched\"\r\n              #password=\"ngModel\"\r\n              required\r\n              name=\"password\"\r\n              type=\"password\"\r\n              [(ngModel)]=\"datoregistro.password\"\r\n            />\r\n          </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"id_rol\">{{ \"txtRol\" | translate }}</label>\r\n          <select\r\n            required\r\n            style=\"background-color: white;\"\r\n            class=\"form-control form-control-sm\"\r\n            name=\"id_rol\"\r\n           \r\n            [class.is-invalid]=\"id_rol.invalid && id_rol.touched\"\r\n            #id_rol=\"ngModel\"\r\n            [(ngModel)]=\"datoregistro.id_rol\"\r\n          >\r\n          <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\r\n            {{rol.rol_name}}\r\n          </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center\">\r\n          <button (click)=\"altaRegistro()\" class=\"btn btn-primary colortopacio\">\r\n            {{ \"txtAgregar\" | translate }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n    <app-footer></app-footer>\r\n  </div>\r\n  ","import { Component, ViewChild } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/apiregistros.service';\nimport { Issue } from '../../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../../models/constantes.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DetalleService } from '../../services/detalle.service';\nimport { Turnos } from '../../models/turnos';\nimport { Personas } from '../../models/personas';\nimport { ApiPersonas } from '../../services/apipersonas.service';\nimport { FormGroup, FormControl, NgForm } from '@angular/forms';\nimport { TurnosService } from '../../services/turnos.service';\n\n\n@Component({\n  selector: 'app-elegirturno',\n  templateUrl: './elegir.component.html'\n})\n\n\nexport class ElegirTurno  {\n  isSubmitted = false;\n  // listaturnos: Turnos[] = [];\n public listaturnos: Turnos;\n  turnoValor = localStorage.getItem('valorTurno');\n  personas: Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  //registroroleperson:Personas = new Personas();\n  registroroleperson: Turnos = new Turnos();\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_tarea: null,\n    rol_name: null,\n    tarea: null,\n    issueg: null,\n    ibm_hora: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  reactiveFormTurnos = new FormGroup({\n    id_turno: new FormControl(''),\n    id_persona: new FormControl(localStorage.getItem('id_persona')),\n\n  });\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_tarea: any;\n  rol_name: any;\n  id_persona: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  datosclon: string;\n  periodetalle: Turnos = new Turnos();\n  my_messages = {\n    'emptyMessage': '',\n    'totalMessage': ''\n  };\n  req: any;\n\n  turnoestablecido:Turnos = new Turnos();\n\n\n\n  constructor(private turnosService: TurnosService,private registroRoleService: ApiPersonas, private translate: TranslateService, private httpClient: HttpClient, private registroService: DetalleService, private apiService: ApiService) {\n\n    translate.get('Total', { value: 'eeeeeeeeee' })\n      .subscribe((res: string) => this.my_messages.totalMessage = res);\n    translate.get('No hay resultados para mostrar', { value: '' })\n      .subscribe((res: string) => this.my_messages.emptyMessage = res);\n\n   \n\n\n\n\n\n\n\n\n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit() {\n\n    this.fetch(data => {\n      this.temp = [...data];\n      this.rows = data;\n\n    });\n\n    // //verificar  id_usuario y id_rol\n    // const id_persona = localStorage.getItem('id_persona');\n    // this.registroRoleService.getPerson(id_persona)\n    //   .subscribe((respuesta: Personas) => {\n    //     this.registroroleperson = respuesta;\n    //     this.registroroleperson.id_persona = id_persona;\n       \n    //   });\n\n\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga() {\n    location.reload();\n  }\n\n\n\n\n\n  //cargamos el listado\n  fetch(cb) {\n\n\n      const req = new XMLHttpRequest();\n      const id_persona = localStorage.getItem('id_persona');\n\n\n\n      //OBTENER EL ULTIMO TURNO DE ESTE USUARIO\n      this.registroRoleService.getTurnosbyID(id_persona)\n      .subscribe((respuesta: Turnos) => {\n        this.registroroleperson = respuesta;\n        this.registroroleperson.id_persona = id_persona;\n       \n            //leemos los turnos del rol del usuario actual para mostrarlos en el select combo\n            var id_rol:string;\n            if(this.registroroleperson.id_rol==null){\n              var id_rol = localStorage.getItem('id_rol');\n        \n            } else {\n              var id_rol = Constantes.CRND+this.registroroleperson.id_rol+Constantes.DRND;\n\n            }\n\n\n\n            this.registroRoleService.getTurnosReadByRol(id_rol)\n            .subscribe( (respuesta:Turnos) => {\n              this.listaturnos = respuesta;\n              \n            });\n\n\n\n\n\n            req.open('GET', `${this.PHP_API_SERVER}/ajax/registro_read_by_persona.php?id_persona=${id_persona}`);\n            req.onload = () => {\n              cb(JSON.parse(req.response));\n              console.log(JSON.parse(req.response));\n            };\n            req.send();\n          \n      });\n\n\n\n\n\n    }\n\n\n\n\n onSubmit(form: NgForm) { \n    \n      this.isSubmitted = true;\n      const valor = JSON.stringify(this.reactiveFormTurnos.value);\nconsole.log(valor);\n      this.turnosService.guardarTurno( valor ).subscribe( respuesta => {\n        localStorage.removeItem('valorTurno');\n        Swal.fire({\n          title: 'Turno Establecido',\n          text: 'El turno ha sido establecido',\n          icon: 'success',  \n          showConfirmButton : false\n        }), this.recarga();\n        \n      });   \n      \n  }\n\n\n\n\n\n\n  //alta de registro\n  altaRegistro() {\n    //si los campos obligatorios nos llegan vacios\n    if (this.datoregistro.tarea == null || this.datoregistro.ibm_hora == null || this.datoregistro.estatus == null) {\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos no pueden estar vacíos!!',\n        icon: 'error',\n      });\n    } else {\n      //enviamos el array a la funcions del server\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.tarea,\n            text: 'Registro añadido',\n            icon: 'success',\n            showConfirmButton: false\n          }), this.recarga();\n        });\n    }\n  }\n\n  //actualización campos inline\n  updateValue(event, cell, rowIndex) {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n    this.campo = cell;\n    this.id_tarea = event.target.title;\n    const id_persona = localStorage.getItem('id_persona');\n    this.valor = event.target.value;\n    this.ever = id_persona, this.campo, this.id_tarea, this.valor;\n    this.datos = JSON.stringify({ \"id_persona\": id_persona, \"campo\": this.campo, \"id_tarea\": this.id_tarea, \"valor\": this.valor });\n\n    //validacion del formato de la hora\n    var patronHora = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n    var horaResult = patronHora.test(this.valor);\n\n    //si el campo que recibo es hora...\n    if (this.campo == \"ibm_hora\") {\n      //...valido su formato\n      if (horaResult == false) {\n        Swal.fire({\n          title: 'Revise los datos',\n          text: 'El campo \"hora\" debe de cumplir con los requerimientos!!',\n          icon: 'error',\n        });\n        this.ngOnInit();\n      }\n      // else {\n      //   Swal.fire({\n      //     text: 'Registro actualizado',\n      //     icon: 'success',  \n      //     showConfirmButton : false\n      //   })\n      // }\n    }\n    //el campo que recibo es tarea pero es menor de 3 caracteres\n    else if (this.campo == \"tarea\" && this.valor.length < 3) {\n\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'El campo \"tarea\" debe contener como mínimo tres carácteres!!',\n        icon: 'error',\n      });\n      this.ngOnInit();\n\n    } else {\n      //todo Ok llamo al servicio\n      this.apiService.modiRegistro(this.datos).subscribe(\n        datos => {\n          Swal.fire({\n            text: 'Registro actualizado',\n            icon: 'success',\n            showConfirmButton: false\n          }), this.recarga();\n\n        });\n    }\n\n  }\n\n\n\n  duplicar(registro: Issue, i: string) {\n\n    Swal.fire({\n      title: `¿Desea crear una tarea a partir de esta?`,\n      text: 'Confirme si desea proceder',\n      icon: 'question',\n      showConfirmButton: true,\n      showCancelButton: true\n\n    }).then(orden => {\n      if (orden.value) {\n\n        const id_persona = localStorage.getItem('id_persona');\n        this.datosclon = JSON.stringify({ \"id_persona\": id_persona, \"id_tarea\": registro.id_tarea });\n\n        let peticion: Observable<any>;\n\n        peticion = this.registroService.actualizarRegistroNuevaId(this.datosclon);\n        peticion.subscribe(respuesta => {\n          Swal.fire({\n            title: this.id_tarea,\n            text: 'Registro duplicado',\n            icon: 'success',\n            showConfirmButton: true\n          })\n            , this.recarga();\n\n        });\n      }\n    });\n  }\n\n\n\n\n\n  //eliminar registro      \n  borrarRegistro(registro: Issue, i: string) {\n\n    Swal.fire({\n      title: `¿Desea borrar el registro ${registro.tarea}`,\n      text: 'Confirme si desea borrar el registro',\n      icon: 'question',\n      showConfirmButton: true,\n      showCancelButton: true\n\n    }).then(respuesta => {\n      if (respuesta.value) {\n        const id_persona = localStorage.getItem('id_persona');\n        this.datosborrado = JSON.stringify({ \"id_persona\": id_persona, \"id_tarea\": registro.id_tarea });\n        this.apiService.delete(this.datosborrado).subscribe();\n\n        Swal.fire({\n          title: registro.tarea,\n          text: 'Registro eliminado',\n          icon: 'success',\n          showConfirmButton: false\n        })\n          , this.recarga();\n\n      }\n    });\n  }\n\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function (d) {\n      return d.rol_name.toLowerCase().indexOf(val) !== -1 || d.tarea.toLowerCase().indexOf(val) !== -1 || d.ibm_hora.toLowerCase().indexOf(val) !== -1 || d.estatus.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","<div class=\"row\">\n  <div class=\"col-6 text-left\">\n  Turno establecido: <strong><span class=\"upperc\">{{registroroleperson.turno}}</span> {{registroroleperson.tipo_turno}} {{registroroleperson.horainicio}} {{registroroleperson.horafin}}</strong>\n  </div>\n  <div class=\"col-6 text-right\">\n    <form [formGroup]=\"reactiveFormTurnos\" (ngSubmit)=\"onSubmit( f )\" #f=\"ngForm\" class=\"form-inline\">      \n        <input type=\"hidden\" \n        class=\"form-control\"\n        formControlName=\"id_persona\"\n        name=\"id_persona\" \n        >\n        <div class=\"form-group\"><select \n          class=\"form-control\"\n          formControlName=\"id_turno\"\n          name=\"id_turno\" \n          ><option value=\"\">Cambiar turno</option>\n          <option \n            *ngFor=\"let listat of listaturnos; let x = index\" \n            [value]=\"listat.id_turno\" \n            >{{listat.turno}} - {{listat.tipo_turno}} - {{listat.horainicio}} {{listat.horafin}}</option>\n          </select>\n          <button type=\"submit\" class=\"btn btn-info ml-2\">Establecer turno</button>  \n      </div> \n      </form> \n</div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-10\">\n    <div class=\"form\">\n      <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n        <input\n          matInput\n          #filter\n          placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\n          (keyup)=\"updateFilter($event)\"\n        />\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"col-2 text-right\">\n    <div *ngIf=\"registroroleperson.id_rol== '8' ||  registroroleperson.id_rol== '6'\">\n      <a alt=\"Nuevo registro\" title=\"nuevo registro\" [routerLink]=\"['/', 'alta']\" class=\"btn btn-info pt4 btn-circle posicionplus\"><i class=\"fa fa-plus fa-3\"></i></a>\n    </div>\n  </div>\n</div>\n\n<!-- <div class=\"row\">\n  <div class=\"col-12 text-left mt-2 mb-2\">\n     El turno establecido es <strong> {{turnoestablecido.turno}} {{turnoestablecido.tipo_turno}} {{turnoestablecido.horainicio}} {{turnoestablecido.horafin}}</strong>\n  </div>\n</div> -->\n\n\n\n      <ngx-datatable\n        #mydatatable\n        class=\"material striped\"\n        headerHeight=\"50\"\n        [limit]=\"15\"\n        [columnMode]=\"'force'\"\n        footerHeight=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n        [messages]=\"my_messages\"\n      >\n\n        <ngx-datatable-column  [maxWidth]=\"90\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <div *ngIf=\"registroroleperson.id_rol=='8'\" class=\"text-center\">{{ row.id_tarea }} </div>\n          </ng-template>\n        </ngx-datatable-column> \n\n\n        <!-- <ngx-datatable-column \n        [sortable]=\"true\"\n        name=\"Rol\" prop=\"rol_name\"\n        [maxWidth]=\"130\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n          <div class=\"text-center\">{{ row.rol_name }} </div> \n        </ng-template>        \n        </ngx-datatable-column>  -->\n\n\n        <ngx-datatable-column name=\"Tarea\" [maxWidth]=\"1710\">\n          <ng-template \n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <span\n              title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n              (dblclick)=\"editing[rowIndex + '-tarea'] = true\"\n              *ngIf=\"!editing[rowIndex + '-tarea']\"\n            >\n              {{ value | slice: 0:90 }}\n            </span>\n            <input\n              required\n              autofocus\n              (keyup.enter)=\"updateValue($event, 'tarea', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-tarea']\"\n              type=\"text\"\n              class=\"form-control\"\n              [value]=\"value\"\n              [title]=\"row.id_tarea\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"ibm_hora\" [maxWidth]=\"190\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <span\n              title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n              (dblclick)=\"editing[rowIndex + '-ibm_hora'] = true\"\n              *ngIf=\"!editing[rowIndex + '-ibm_hora']\"\n            >\n              {{ row.ibm_hora }}\n            </span>\n            <input\n              required\n              class=\"form-control\"\n              min=\"5\"\n              max=\"5\"\n              (onError)=\"(myHandleError)\"\n              pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n              \n              autofocus\n              (keyup.enter)=\"updateValue($event, 'ibm_hora', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-ibm_hora']\"\n              type=\"text\"\n              [value]=\"value\"\n              [title]=\"row.id_tarea\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Estatus\" [maxWidth]=\"90\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-row=\"row\"\n            let-value=\"value\"\n          >\n            <div\n              [ngClass]=\"{\n                positive: row.estatus == 'OK',\n                negative: row.estatus == 'KO',\n                posnegtive: row.estatus == 'OK-INC'\n              }\"\n            >\n              <span\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n                (dblclick)=\"editing[rowIndex + '-estatus'] = true\"\n                *ngIf=\"!editing[rowIndex + '-estatus']\"\n              >\n                {{ value }}\n              </span>\n              <input type=\"hidden\" #varId [value]=\"row.id_tarea\" />\n\n              <select\n                class=\"form-control\"\n                name=\"estatus\"\n                *ngIf=\"editing[rowIndex + '-estatus']\"\n                (blur)=\"editing[rowIndex + '-estatus'] = false\"\n                (change)=\"updateValue($event, 'estatus', rowIndex)\"\n                [value]=\"value\"\n                [title]=\"row.id_tarea\"\n              >\n                <option value=\"OK\">OK</option>\n                <option value=\"KO\">KO</option>\n                <option value=\"OK-INC\">OK-INC</option>\n              </select>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"ver\" [maxWidth]=\"150\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-row=\"row\"\n          >\n\n            <div class=\"text-center\">\n              <div class=\"row\">\n                <div class=\"col-12 p0 m0\">\n\n \n <!-- <div *ngIf=\"row.disabledBotones===turnoValor && registroroleperson.id_rol!= '8'\">\n                  <button (click)=\"duplicar(row, i)\"\n                  class=\"btn btn-warning botonsizes mr-1\">\n                      <i class=\"fa fa-clone\"></i>\n                  </button>\n                  <a\n                    [routerLink]=\"['/detalle', row.tokenid]\"\n                    class=\"btn btn-warning botonsizes mr-1\"\n                    ><i class=\"fa fa-pencil\"></i\n                  ></a>\n                  <button\n                    (click)=\"borrarRegistro(row, i)\"\n                    class=\"btn btn-warning botonsizes\"\n                  >\n                    <i class=\"fa fa-trash\"></i>\n                  </button>\n</div> \n\n<div *ngIf=\"registroroleperson.id_rol== '8'\"> -->\n                <button (click)=\"duplicar(row, i)\"\n                class=\"btn btn-warning botonsizes mr-1\">\n                    <i class=\"fa fa-clone\"></i>\n                </button>\n                <a\n                  [routerLink]=\"['/detalle', row.tokenid]\"\n                  class=\"btn btn-warning botonsizes mr-1\"\n                  ><i class=\"fa fa-pencil\"></i\n                ></a>\n                <button\n                  (click)=\"borrarRegistro(row, i)\"\n                  class=\"btn btn-warning botonsizes\"\n                >\n                  <i class=\"fa fa-trash\"></i>\n                </button>\n<!-- </div> -->\n\n\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    ","import { Component, ViewChild } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/apiregistros.service';\nimport { Issue } from '../../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../../models/constantes.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DetalleService } from '../../services/detalle.service';\nimport { Turnos } from '../../models/turnos';\nimport { Personas } from '../../models/personas';\nimport { ApiPersonas } from '../../services/apipersonas.service';\n\n\n@Component({\n  selector: 'app-apphome',\n  templateUrl: './homeget.component.html'\n\n})\n\nexport class HomeGetComponent {\n\n  turnoValor = localStorage.getItem('valorTurno');\n  personas: Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  //registroroleperson:Personas = new Personas();\n  registroroleperson: Personas = new Personas();\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_tarea: null,\n    rol_name: null,\n    tarea: null,\n    issueg: null,\n    ibm_hora: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_tarea: any;\n  rol_name: any;\n  id_persona: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  datosclon: string;\n  periodetalle: Turnos = new Turnos();\n  my_messages = {\n    'emptyMessage': '',\n    'totalMessage': ''\n  };\n  req: any;\n\n  turnoestablecido:Turnos = new Turnos();\n\ngetmyProp = localStorage.getItem('myProp');\ngetmyNewValue = localStorage.getItem('myNewValue');\n\n\n\n\n\n\n  constructor(private registroRoleService: ApiPersonas, private translate: TranslateService, private httpClient: HttpClient, private registroService: DetalleService, private apiService: ApiService) {\n    // this.fetch(data => {\n    //   // cache\n    //   this.temp = [...data];\n    //   this.rows = data;\n\n    // });\n\n    translate.get('Total', { value: 'eeeeeeeeee' })\n      .subscribe((res: string) => this.my_messages.totalMessage = res);\n    translate.get('No hay resultados para mostrar', { value: '' })\n      .subscribe((res: string) => this.my_messages.emptyMessage = res);\n\n   \n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit() {\n\n    this.fetch(data => {\n      this.temp = [...data];\n      this.rows = data;\n\n\n    });\n\n    //verificar  id_usuario y id_rol\n    const id_persona = localStorage.getItem('id_persona');\n    this.registroRoleService.getPerson(id_persona)\n      .subscribe((respuesta: Personas) => {\n        this.registroroleperson = respuesta;\n        this.registroroleperson.id_persona = id_persona;\n       \n      });\n\n\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga() {\n    location.reload();\n  }\n\n\n\n\n\n  //cargamos el listado\n  fetch(cb) {\n\n\n      const req = new XMLHttpRequest();\n      const id_persona = localStorage.getItem('id_persona');\n      // this.registroRoleService.getPerson(id_persona)\n      // .subscribe((respuesta: Personas) => {\n      //   this.registroroleperson = respuesta;\n      //   this.registroroleperson.id_persona = id_persona;\n       \n\n    req.open('GET', `${this.PHP_API_SERVER}/ajax/registro_read.php?id_persona=${id_persona}`);\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n    req.send();\n\n\n\n          \n      // });\n    }\n\n\n  //alta de registro\n  altaRegistro() {\n    //si los campos obligatorios nos llegan vacios\n    if (this.datoregistro.tarea == null || this.datoregistro.ibm_hora == null || this.datoregistro.estatus == null) {\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos no pueden estar vacíos!!',\n        icon: 'error',\n      });\n    } else {\n      //enviamos el array a la funcions del server\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.tarea,\n            text: 'Registro añadido',\n            icon: 'success',\n            showConfirmButton: false\n          }), this.recarga();\n        });\n    }\n  }\n\n  //actualización campos inline\n  updateValue(event, cell, rowIndex) {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n    this.campo = cell;\n    this.id_tarea = event.target.title;\n    const id_persona = localStorage.getItem('id_persona');\n    this.valor = event.target.value;\n    this.ever = id_persona, this.campo, this.id_tarea, this.valor;\n    this.datos = JSON.stringify({ \"id_persona\": id_persona, \"campo\": this.campo, \"id_tarea\": this.id_tarea, \"valor\": this.valor });\n\n    //validacion del formato de la hora\n    var patronHora = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n    var horaResult = patronHora.test(this.valor);\n\n    //si el campo que recibo es hora...\n    if (this.campo == \"ibm_hora\") {\n      //...valido su formato\n      if (horaResult == false) {\n        Swal.fire({\n          title: 'Revise los datos',\n          text: 'El campo \"hora\" debe de cumplir con los requerimientos!!',\n          icon: 'error',\n        });\n        this.ngOnInit();\n      }\n      // else {\n      //   Swal.fire({\n      //     text: 'Registro actualizado',\n      //     icon: 'success',  \n      //     showConfirmButton : false\n      //   })\n      // }\n    }\n    //el campo que recibo es tarea pero es menor de 3 caracteres\n    else if (this.campo == \"tarea\" && this.valor.length < 3) {\n\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'El campo \"tarea\" debe contener como mínimo tres carácteres!!',\n        icon: 'error',\n      });\n      this.ngOnInit();\n\n    } else {\n      //todo Ok llamo al servicio\n      this.apiService.modiRegistro(this.datos).subscribe(\n        datos => {\n          Swal.fire({\n            text: 'Registro actualizado',\n            icon: 'success',\n            showConfirmButton: false\n          }), this.recarga();\n\n        });\n    }\n\n  }\n\n\n\n  duplicar(registro: Issue, i: string) {\n\n    Swal.fire({\n      title: `¿Desea crear una tarea a partir de esta?`,\n      text: 'Confirme si desea proceder',\n      icon: 'question',\n      showConfirmButton: true,\n      showCancelButton: true\n\n    }).then(orden => {\n      if (orden.value) {\n\n        const id_persona = localStorage.getItem('id_persona');\n        this.datosclon = JSON.stringify({ \"id_persona\": id_persona, \"id_tarea\": registro.id_tarea });\n\n        let peticion: Observable<any>;\nconsole.log(this.datosclon);\n        peticion = this.registroService.actualizarRegistroNuevaId(this.datosclon);\n        peticion.subscribe(respuesta => {\n          Swal.fire({\n            title: this.id_tarea,\n            text: 'Registro duplicado',\n            icon: 'success',\n            showConfirmButton: true\n          })\n            , this.recarga();\n\n        });\n      }\n    });\n  }\n\n\n\n\n\n  //eliminar registro      \n  borrarRegistro(registro: Issue, i: string) {\n\n    Swal.fire({\n      title: `¿Desea borrar el registro ${registro.tarea}`,\n      text: 'Confirme si desea borrar el registro',\n      icon: 'question',\n      showConfirmButton: true,\n      showCancelButton: true\n\n    }).then(respuesta => {\n      if (respuesta.value) {\n        const id_persona = localStorage.getItem('id_persona');\n        this.datosborrado = JSON.stringify({ \"id_persona\": id_persona, \"id_tarea\": registro.id_tarea });\n        this.apiService.delete(this.datosborrado).subscribe();\n\n        Swal.fire({\n          title: registro.tarea,\n          text: 'Registro eliminado',\n          icon: 'success',\n          showConfirmButton: false\n        })\n          , this.recarga();\n\n      }\n    });\n  }\n\n  onSort(event){\n\nlocalStorage.setItem('myProp',event.column.prop);\nlocalStorage.setItem('myNewValue',event.newValue);\nthis.recarga();\n  }\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function (d) {\n      return d.rol_name.toLowerCase().indexOf(val) !== -1 || d.tarea.toLowerCase().indexOf(val) !== -1 || d.ibm_hora.toLowerCase().indexOf(val) !== -1 || d.estatus.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"row\">\n  <div class=\"col-8 text-left\">\n    <!-- <app-elegirturno></app-elegirturno> -->\n  </div>\n  <div class=\"col-2\">\n    <div class=\"form\">\n      <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n        <input\n          matInput\n          #filter\n          placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\n          (keyup)=\"updateFilter($event)\"\n        />\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"col-2 text-right\">\n    <div *ngIf=\"registroroleperson.id_rol== '8' ||  registroroleperson.id_rol== '6'\">\n      <a alt=\"Nuevo registro\" title=\"nuevo registro\" [routerLink]=\"['/', 'alta']\" class=\"btn btn-info pt4 btn-circle posicionplus\"><i class=\"fa fa-plus fa-3\"></i></a>\n    </div>\n  </div>\n</div>\n\n<!-- <div class=\"row\">\n  <div class=\"col-12 text-left mt-2 mb-2\">\n     El turno establecido es <strong> {{turnoestablecido.turno}} {{turnoestablecido.tipo_turno}} {{turnoestablecido.horainicio}} {{turnoestablecido.horafin}}</strong>\n  </div>\n</div> -->\n\n\n\n      <ngx-datatable\n        #mydatatable\n        class=\"material striped\"\n        headerHeight=\"50\"\n        [limit]=\"15\"\n        [columnMode]=\"'force'\"\n        footerHeight=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n        [messages]=\"my_messages\"\n        (sort)=\"onSort($event)\"\n        [sorts]=\"[{ prop: getmyProp, dir: getmyProp }]\"\n      >\n\n         <ngx-datatable-column \n         [sortable]=\"true\" \n         name=\"ID\" prop=\"id_tarea\"\n         [maxWidth]=\"90\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n            let-selectedCount=\"selectedCount\"\n          >\n          <div class=\"text-center\">{{ row.id_tarea }} </div>          \n        </ng-template>\n        </ngx-datatable-column> \n\n\n        <ngx-datatable-column \n        [sortable]=\"true\"  \n        name=\"Rol\" prop=\"rol_name\"\n        [maxWidth]=\"130\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n          <div class=\"text-center\">{{ row.rol_name }} </div> \n        </ng-template>        \n        </ngx-datatable-column> \n\n\n\n        <ngx-datatable-column   name=\"Tarea\" [maxWidth]=\"1810\">\n          <ng-template  \n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <span\n              title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n              (dblclick)=\"editing[rowIndex + '-tarea'] = true\"\n              *ngIf=\"!editing[rowIndex + '-tarea']\"\n            >\n              {{ value | slice: 0:90 }}\n            </span>\n            <input\n              required\n              autofocus\n              (keyup.enter)=\"updateValue($event, 'tarea', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-tarea']\"\n              type=\"text\"\n              class=\"form-control\"\n              [value]=\"value\"\n              [title]=\"row.id_tarea\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"ibm_hora\" [maxWidth]=\"110\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <span\n              title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n              (dblclick)=\"editing[rowIndex + '-ibm_hora'] = true\"\n              *ngIf=\"!editing[rowIndex + '-ibm_hora']\"\n            >\n              {{ row.ibm_hora }}\n            </span>\n            <input\n              required\n              class=\"form-control\"\n              min=\"5\"\n              max=\"5\"\n              (onError)=\"(myHandleError)\"\n              pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n              \n              autofocus\n              (keyup.enter)=\"updateValue($event, 'ibm_hora', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-ibm_hora']\"\n              type=\"text\"\n              [value]=\"value\"\n              [title]=\"row.id_tarea\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Estatus\" [maxWidth]=\"90\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-row=\"row\"\n            let-value=\"value\"\n          >\n            <div\n              [ngClass]=\"{\n                positive: row.estatus == 'OK',\n                negative: row.estatus == 'KO',\n                posnegtive: row.estatus == 'OK-INC'\n              }\"\n            >\n              <span\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n                (dblclick)=\"editing[rowIndex + '-estatus'] = true\"\n                *ngIf=\"!editing[rowIndex + '-estatus']\"\n              >\n                {{ value }}\n              </span>\n              <input type=\"hidden\" #varId [value]=\"row.id_tarea\" />\n\n              <select\n                class=\"form-control\"\n                name=\"estatus\"\n                *ngIf=\"editing[rowIndex + '-estatus']\"\n                (blur)=\"editing[rowIndex + '-estatus'] = false\"\n                (change)=\"updateValue($event, 'estatus', rowIndex)\"\n                [value]=\"value\"\n                [title]=\"row.id_tarea\"\n              >\n                <option value=\"OK\">OK</option>\n                <option value=\"KO\">KO</option>\n                <option value=\"OK-INC\">OK-INC</option>\n              </select>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"ver\" [maxWidth]=\"150\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-row=\"row\"\n          >\n\n            <div class=\"text-center\">\n              <div class=\"row\">\n                <div class=\"col-12 p0 m0\">\n\n \n <!-- <div *ngIf=\"row.disabledBotones===turnoValor && registroroleperson.id_rol!= '8'\">\n                  <button (click)=\"duplicar(row, i)\"\n                  class=\"btn btn-warning botonsizes mr-1\">\n                      <i class=\"fa fa-clone\"></i>\n                  </button>\n                  <a\n                    [routerLink]=\"['/detalle', row.tokenid]\"\n                    class=\"btn btn-warning botonsizes mr-1\"\n                    ><i class=\"fa fa-pencil\"></i\n                  ></a>\n                  <button\n                    (click)=\"borrarRegistro(row, i)\"\n                    class=\"btn btn-warning botonsizes\"\n                  >\n                    <i class=\"fa fa-trash\"></i>\n                  </button>\n</div> \n\n<div *ngIf=\"registroroleperson.id_rol== '8'\"> -->\n                <button (click)=\"duplicar(row, i)\"\n                class=\"btn btn-warning botonsizes mr-1\">\n                    <i class=\"fa fa-clone\"></i>\n                </button>\n                <a\n                  [routerLink]=\"['/detalle', row.tokenid]\"\n                  class=\"btn btn-warning botonsizes mr-1\"\n                  ><i class=\"fa fa-pencil\"></i\n                ></a>\n                <button\n                  (click)=\"borrarRegistro(row, i)\"\n                  class=\"btn btn-warning botonsizes\"\n                >\n                  <i class=\"fa fa-trash\"></i>\n                </button>\n<!-- </div> -->\n\n\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    ","import { Injectable } from '@angular/core';\nimport { Constantes } from '../models/constantes.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminServicioService {\n\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private http: HttpClient) { }\n\n\n  altaRegistroFoto(datosFoto) {\n    return this.http.post(`${this.PHP_API_SERVER}/ajax/personas_update_foto.php`, datosFoto);\n  } \n\n\n  guardarRol(datosformulario){\n\n    return this.http.post(`${this.PHP_API_SERVER}/ajax/rol_crear.php`, JSON.stringify(datosformulario));\n  }\n\n  deleteRol(datosborrado){\n  \n    return this.http.post(`${this.PHP_API_SERVER}/ajax/roles_borrado.php`, datosborrado);\n  }\n  \n  guardarTurno(datosformularioturno){\n \n    return this.http.post(`${this.PHP_API_SERVER}/ajax/turno_registro_crear.php`, JSON.stringify(datosformularioturno));\n  }\n  \n  deleteTurno(datosborradoturno){\n \n    return this.http.post(`${this.PHP_API_SERVER}/ajax/turno_registro_borrado.php`, datosborradoturno);\n  }\n\n\n  getPersonas( id_persona:string ){\n\n    return this.http.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  guardarNuevancidencia(incidenciaForm){\n\n    return this.http.post(`${this.PHP_API_SERVER}/ajax/incidencia_crear.php`, JSON.stringify(incidenciaForm));\n  }      \n\n\n  getAyuda( id_ayuda:string ){\n      return this.http.get(`${ this.PHP_API_SERVER}/ajax/ayuda_detalle.php?id_ayuda=${ id_ayuda }`);\n  }\n\n  guardarNewAyuda(datosformularioayuda){\n\n    return this.http.post(`${this.PHP_API_SERVER}/ajax/ayuda_crear.php`, JSON.stringify(datosformularioayuda));\n  }\n\n  guardarAyudaModificado(datosformularioayuda){\n \n    return this.http.post(`${this.PHP_API_SERVER}/ajax/ayuda_update.php`, JSON.stringify(datosformularioayuda));\n  }\n\n  deleteAyuda(datosborradoAyuda){\n  \n    return this.http.post(`${this.PHP_API_SERVER}/ajax/ayuda_borrado.php`, datosborradoAyuda);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Personas } from '../models/personas';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiPersonas {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n  //turnos por rol\n  getTurnosReadByRol( id_rol:string ){\n      return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/turnos_read_by_rol.php?id_rol=${ id_rol }`);\n  }\n\n  //obtener persona por id_tarea\n  getPerson( id_persona ){\n      return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  //obtener foto persona\n  getFotografia( id_persona ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  validaEmail( email ){\n    \n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_validar_email.php?email=${ email }`);\n  }\n\n\n  altaRegistroFoto(datosFoto) {\n  \n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_update_foto.php`, datosFoto);\n  } \n\n\n  altaRegistro(datoregistro) {\n      return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_crear.php`, JSON.stringify(datoregistro));\n  }\n\n  getIdTurnoby( id_persona ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/turnos_read_by__id_persona.php?id_persona=${ id_persona }`);\n }\n\n getTurnosbyID( id_persona ){\n  return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/turno_read_by_persona.php?id_persona=${ id_persona }`);\n }\n \n\n\n\n  actualizarRegistro(persona: Personas){\n    const personaTemp = {\n        ...persona\n    };\n    delete personaTemp.id_persona;\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_update_detalle.php`, persona);  \n  }\n\n  modiRegistro(datos){\n    console.log(datos);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_update_personas.php`, datos);   \n  \n  }\n  \n  delete(datosborrado){\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n  \n  getLastId() {\n  return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/last_id.php`)\n  }\n\n  altaRegistro(datoregistro) {\n     console.log(JSON.stringify(datoregistro));\n      return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_crear.php`, JSON.stringify(datoregistro));\n  }\n\n  modiRegistro(datos){\n    //console.log(JSON.stringify(datos));\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_update.php`, datos);   \n  \n  }\n\n  delete(datosborrado){\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Personas } from '../models/personas';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AyudaService {\n\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n  //obtener persona por id_tarea\n  open(id_persona){\n      return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  \n\n}","import { Injectable } from '@angular/core';\nimport { WebsocketService } from './websocket.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor(public wsService: WebsocketService) { }\n\n  sendMessage( mensaje: string ){\n    const payload = {\n      de: this.wsService.getUsuario().nombre,\n      cuerpo: mensaje\n      };\n      \n      this.wsService.emit('mensaje',payload);\n  }\n  \n  getMessages(){\n    return this.wsService.listen('mensaje-nuevo');\n  }\n\n  getMessagesPrivate(){\n    return this.wsService.listen('mensaje-privado');\n  }\n  \n  getUsuariosActivos(){\n    return this.wsService.listen('usuarios-activos');\n  }\n\n  emitirUsuariosActivos(){\n    this.wsService.emit('obtener-usuarios');\n  }\n}","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {Issue} from '../models/issue';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n@Injectable()\nexport class DataService {\n\n\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n\n  dataChange: BehaviorSubject<Issue[]> = new BehaviorSubject<Issue[]>([]);\n  \n  // Temporarily stores data from dialogs\n  dialogData: any;\n\n  constructor (private httpClient: HttpClient) {}\n\n  get data(): Issue[] {\n    return this.dataChange.value;\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  /** CRUD METHODS */\n  getAllIssues(): void {\n    this.httpClient.get<Issue[]>(`${this.PHP_API_SERVER}/ajax/registro_read.php`).subscribe(data => {\n        this.dataChange.next(data);\n      },\n      (error: HttpErrorResponse) => {\n      console.log (error.name + ' ' + error.message);\n      });\n  }\n\n  // DEMO ONLY, you can find working methods below\n  addIssue (issue: Issue): void {\n    this.dialogData = issue;\n  }\n\n  updateIssue (issue: Issue): void {\n    this.dialogData = issue;\n  }\n\n  deleteIssue (id: number): void {\n    console.log(id);\n  }\n}\n\n\n\n/* REAL LIFE CRUD Methods I've used in my projects. ToasterService uses Material Toasts for displaying messages:\n\n    // ADD, POST METHOD\n    addItem(kanbanItem: KanbanItem): void {\n    this.httpClient.post(this.API_URL, kanbanItem).subscribe(data => {\n      this.dialogData = kanbanItem;\n      this.toasterService.showToaster('Successfully added', 3000);\n      },\n      (err: HttpErrorResponse) => {\n      this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n    });\n   }\n\n    // UPDATE, PUT METHOD\n     updateItem(kanbanItem: KanbanItem): void {\n    this.httpClient.put(this.API_URL + kanbanItem.id, kanbanItem).subscribe(data => {\n        this.dialogData = kanbanItem;\n        this.toasterService.showToaster('Successfully edited', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n\n  // DELETE METHOD\n  deleteItem(id: number): void {\n    this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(data['']);\n        this.toasterService.showToaster('Successfully deleted', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n*/\n\n\n\n\n","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Usermodule } from '../models/usuario.model';\nimport { HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS } from '@angular/cdk/a11y/high-contrast-mode/high-contrast-mode-detector';\nimport { Observable } from 'rxjs';\n\n\n\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class DataserviceService {\n\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  redirectUrl: string;\n\n  leftCypt = Math.random().toString(36).substr(2);\n  rightCypt = Math.random().toString(36).substr(2);\n\n@Output() getLoggedInName: EventEmitter<any> = new EventEmitter();\n\n  constructor(private httpClient : HttpClient) { }\n \n  private aRndm = Constantes.ARND; //URL del servicio\n  private bRndm = Constantes.BRND; //URL del servicio\n  private cRndm = Constantes.CRND; //URL del servicio\n  private dRndm = Constantes.DRND; //URL del servicio\n\n  public userlogin(username,password) {\n    return this.httpClient.post<any>(`${this.PHP_API_SERVER}/ajax/login.php`, {username,password})\n        .pipe(map(Usermodule => {\n            //id mask\n            const id_persona_mask = this.aRndm+Usermodule[0].id_persona+this.bRndm;\n            this.setToken(Usermodule[0].nombres);\n            this.setID(id_persona_mask);\n            this.setIDrol(Usermodule[0].id_rol);\n            this.getLoggedInName.emit(true);\n            \n            return Usermodule;\n        }));\n\n    }\n\n\n    getUserId( id_persona ){\n        return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n    }\n\n\n  \n// public userregistration(name,email,pwd,mobile) {\n//   return this.httpClient.post<any>(this.baseUrl + '/registration.php', { name,email, pwd,mobile })\n//       .pipe(map(Usermodule => {\n//           return Usermodule;\n//       }));\n// }\n\n\nrand = function(token: string) {\n  return Math.random().toString(36).substr(2); // remove `0.`\n};\n\n\nsetIDrol(id_rol: string) {\n  localStorage.setItem('id_rol', this.cRndm+id_rol+this.dRndm);\n}\n\nsetID(id_persona: string) {\n    localStorage.setItem('id_persona', id_persona);\n  }\n   \ngetID() {\n    return localStorage.getItem('id_persona');\n  }\n  \n\n//token\nsetToken(token: string) {\n  localStorage.setItem('token', this.rand(token));\n}\n \ngetToken() {\n  return localStorage.getItem('token');\n}\n \ndeleteToken() {\n  localStorage.removeItem('token');\n}\n \nisLoggedIn() {\n  const usertoken = this.getToken();\n  const idtoken = this.getID();\n  if (usertoken != null || idtoken != null) {\n    return true\n  }\n  return false;\n}\n \n}\n ","\r\n\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Issue } from '../../app/models/issue';\r\nimport { Personas } from '../models/personas';\r\nimport { Seguimiento } from '../models/seguimiento';\r\nimport { Constantes } from '../models/constantes.model';\r\n\r\n@Injectable(\r\n    {\r\n        providedIn:'root'\r\n    }\r\n)\r\n\r\n\r\nexport class DetalleService {\r\n\r\n    private personas:Issue[] = [];\r\n    private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n\r\n\r\n        constructor( private http: HttpClient) {}\r\n\r\n\r\n        //modificar registro\r\n        actualizarRegistro(persona: Issue){\r\n\r\n            const personaTemp = {\r\n                ...persona\r\n            };\r\n            delete personaTemp.id_tarea;\r\nconsole.log(persona);\r\n            return this.http.post(`${this.PHP_API_SERVER}/ajax/registro_update_detalle.php`, persona);  \r\n\r\n        }\r\n\r\n         //duplicar\r\n         actualizarRegistroNuevaId(datosclon){\r\n            return this.http.post(`${this.PHP_API_SERVER}/ajax/registro_duplicar_detalle.php`,datosclon);\r\n          }\r\n\r\n\r\n\r\n        actualizarRegistroSeguimiento(datoregistro) {\r\n            console.log(datoregistro);\r\n            return this.http.post(`${this.PHP_API_SERVER}/ajax/registro_update_seguimiento.php`, JSON.stringify(datoregistro));\r\n        }\r\n\r\n        //obtener persona por id_tarea\r\n        getPerson( id_tarea:string ){\r\n            return this.http.get(`${ this.PHP_API_SERVER}/ajax/registro_detalle.php?id_tarea=${ id_tarea }`);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        delete(datosborrado){\r\n            return this.http.post(`${this.PHP_API_SERVER}/ajax/registro_seguimiento_borrado.php`,datosborrado);\r\n          }\r\n\r\n\r\n   \r\n    \r\n       \r\n \r\n    \r\n}\r\n\r\n","\r\n\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\nimport { Constantes } from '../models/constantes.model';\r\n@Injectable(\r\n    {\r\n        providedIn:'root'\r\n    }\r\n)\r\n\r\n\r\nexport class DetalleHistoricoService {\r\n\r\n     //persons:any[] = [];\r\n \r\n \r\n\r\n        private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n\r\n        constructor( private http: HttpClient) {\r\n\r\n        }\r\n\r\n\r\n\r\n        //obtener persona por id\r\n        getDetalleHistorico( id_log:string ){\r\n            return this.http.get(`${ this.PHP_API_SERVER}/ajax/registro_historico_detalle.php?id_log=${ id_log }`);\r\n        }\r\n\r\n\r\n        delete(datosborrado){\r\n            console.log(datosborrado);\r\n            return this.http.post(`${this.PHP_API_SERVER}/ajax/registro_seguimiento_borrado.php`,datosborrado);\r\n          }\r\n\r\n\r\n \r\n    \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlotanteService {\n\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient : HttpClient) { }\n\n  getUserId( id_persona ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n}\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoricoService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n\n\n  delete(datosborrado){\n    console.log(datosborrado);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_historico_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IncidenciasService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n    //obtener persona por id\n    getDetalleIncidencia( token_incidencia ){\n        return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/incidencia_detalle.php?token_incidencia=${ token_incidencia }`);\n    }\n\n\n    guardarIncidencia(valor){  \n        console.log(valor);\n        return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/incidencia_update.php`, valor);\n      }\n\n      \n\n  delete(datosborrado){\n    console.log(datosborrado);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_historico_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeriodicidadService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n  altaRegistrochecks(datoregistro) {\n      // console.log(JSON.stringify(datoregistro));\n      return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/periodicidad_crear.php`, JSON.stringify(datoregistro));\n  }\n\n  //obtener persona por id\n          getCheckeds( id_tarea:string ){\n            return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/periodicidad_detalle.php?id_tarea=${ id_tarea }`);\n        }\n\n  getDatosMadre( id_tarea ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/periodicidad_madre.php?id_tarea=${ id_tarea }`)\n    \n  }\n  \n\n//   modiRegistro(datos){\n//     console.log(datos);\n//     return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_update.php`, datos);   \n  \n//   }\n\n//   delete(datosborrado){\n//     console.log(datosborrado);\n//     return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_borrado.php`,datosborrado);\n//   }\n\n\ndelete(datosborrado){\n  console.log(datosborrado);\n  return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_diames_borrado.php`,datosborrado);\n}\n\n\n\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Constantes } from '../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\nprovidedIn: 'root'\r\n})\r\n\r\nexport class SharedService {\r\n\r\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n\r\n    private subject = new Subject<any>();\r\n\r\n\r\n    constructor(private httpClient: HttpClient) {}\r\n\r\n\r\n\r\n    sendClickEvent() {\r\n      this.subject.next();\r\n    }\r\n    getClickEvent(): Observable<any>{ \r\n      return this.subject.asObservable();\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Personas } from '../models/personas';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TurnosService {\n\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n  guardarTurnoGhost(datosturnos){  \n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/turno_ghost_crear.php`, datosturnos);\n  }\n\n  guardarTurno(datosturnos){  \n\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/turno_crear.php`, datosturnos);\n  }\n\n  //obtener rol persona \n  getUserId( id_persona ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n  \n\n}","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { Usuario } from '../models/usuario';\nimport { Router } from '@angular/router';\nimport { callbackify } from 'util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  public socketStatus = false;\n  public usuario: Usuario = null;\n\n  constructor(private socket: Socket, private router: Router) { \n    this.cargarStorage();\n    this.checkStatus();\n  }\n\n  checkStatus(){\n\n    this.socket.on('connect', () =>{\n      console.log('Conectado al servidor');\n      this.socketStatus = true;\n      this.cargarStorage();\n    });\n\n    this.socket.on('disconnect', () =>{\n      console.log('Desconectado del servidor');\n      this.socketStatus = false;\n    });\n  }\n\n  emit( evento: string, payload?: any, callback?: Function ){\n    console.log('Emitiendo', evento)\n    this.socket.emit ( evento, payload, callback );\n  }\n\n  //recibe un evento y devuelve un observable\n  listen( evento: string ){\n    return this.socket.fromEvent( evento ); \n  }\n\n  loginWS ( id_persona: string ){\n    //retorno promesa para mantener sesion activa\n    return new Promise( ( resolve, reject ) =>{\n      this.emit('configurar-usuario',{id_persona}, resp =>{  \n        this.usuario= new Usuario( id_persona );\n        this.guardarStorage();\n        resolve(); //resuelvo la promesa\n      })\n    });\n  }\n\n\n  // logoutWS(){\n  //   this.usuario = null;\n  //   localStorage.removeItem('usuario');\n  //   const payload = {\n  //     id_persona: ''\n  //   }\n  //   this.emit('configurar-usuario', payload, ()=> {} );\n  //   this.router.navigateByUrl('');\n  // }\n\n\n  getUsuario(){\n    return this.usuario;  \n  }\n\n  //almacenamos la sesion del usuario el localstorage\n  guardarStorage(){\n    localStorage.setItem ('usuario', JSON.stringify(this.usuario));\n  }\n\n  //leemos el localstorage\n  cargarStorage(){ \n    if(localStorage.getItem('usuario')){\n      this.usuario = JSON.parse(localStorage.getItem('usuario'));\n      this.loginWS(this.usuario.id_persona);\n    } \n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n   wsUrl: 'http://ibmes.site:5001'\n};\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}