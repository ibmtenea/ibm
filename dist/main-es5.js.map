{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/components/ayuda/ayuda.component.ts","webpack:///src/app/components/ayuda/ayuda.component.html","webpack:///src/app/components/buscador/buscador.component.ts","webpack:///src/app/components/buscador/buscador.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/imagen/modimagen.component.ts","webpack:///src/app/components/imagen/modimagen.component.html","webpack:///src/app/components/menu/menu.component.ts","webpack:///src/app/components/menu/menu.component.html","webpack:///src/app/components/periodicidad/accion.component.ts","webpack:///src/app/components/periodicidad/accion.component.html","webpack:///src/app/components/periodicidad/accionhistorico.component.ts","webpack:///src/app/components/periodicidad/accionhistorico.component.html","webpack:///src/app/components/periodicidad/check.component.ts","webpack:///src/app/components/periodicidad/check.component.html","webpack:///src/app/guards/authguard.guard.ts","webpack:///src/app/models/accionpuntual.ts","webpack:///src/app/models/constantes.model.ts","webpack:///src/app/models/issue.ts","webpack:///src/app/models/issuehistorico.ts","webpack:///src/app/models/periodicidad.ts","webpack:///src/app/models/periodicidadmadre.ts","webpack:///src/app/models/personas.ts","webpack:///src/app/models/seguimiento.ts","webpack:///src/app/pages/alta.component.ts","webpack:///src/app/pages/alta.component.html","webpack:///src/app/pages/configuracion.pages.ts","webpack:///src/app/pages/configuracion.pages.html","webpack:///src/app/pages/descarga.pages.ts","webpack:///src/app/pages/descarga.pages.html","webpack:///src/app/pages/detalle.component.ts","webpack:///src/app/pages/detalle.component.html","webpack:///src/app/pages/detallehistorico.component.ts","webpack:///src/app/pages/detallehistorico.component.html","webpack:///src/app/pages/detallepersona.component.ts","webpack:///src/app/pages/detallepersona.component.html","webpack:///src/app/pages/historico.component.ts","webpack:///src/app/pages/historico.component.html","webpack:///src/app/pages/home.component.ts","webpack:///src/app/pages/home.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/perfil.component.ts","webpack:///src/app/pages/perfil.component.html","webpack:///src/app/pages/personas.pages.ts","webpack:///src/app/pages/personas.pages.html","webpack:///src/app/pages/turnos/elegir.component.ts","webpack:///src/app/pages/turnos/elegir.component.html","webpack:///src/app/services/apipersonas.service.ts","webpack:///src/app/services/apiregistros.service.ts","webpack:///src/app/services/ayuda.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/dataservice.service.ts","webpack:///src/app/services/detalle.service.ts","webpack:///src/app/services/detallehistorico.service.ts","webpack:///src/app/services/historico.service.ts","webpack:///src/app/services/periodicidad.service.ts","webpack:///src/app/services/serviciocompartido.service.ts","webpack:///src/app/services/turnos.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","dataService","title","getLoggedInName","subscribe","nombres","changeName","isLoggedIn","console","log","loginbtn","logoutbtn","deleteToken","window","location","href","selector","templateUrl","styleUrls","HttpLoaderFactory","http","AppModule","provide","useValue","forRoot","setLocale","useHash","loader","useFactory","deps","declarations","imports","entryComponents","providers","bootstrap","routes","path","component","canActivate","pathMatch","redirectTo","AyudaComponent","httpClient","modalService","ayudaService","contenidoayuda","PHP_API_SERVER","API_SERVER","modalOptions","backdrop","backdropClass","size","id_persona","localStorage","getItem","get","result","ayuda","open","closeResult","reason","getDismissReason","ESC","BACKDROP_CLICK","BuscadorComponent","FooterComponent","any","Date","getFullYear","HeaderComponent","translate","router","activatedRoute","addLangs","setDefaultLang","browserLang","getBrowserLang","use","match","removeItem","redirect","redirectUrl","navigate","Logout","ModimagenComponent","fb","perioService","personas","fotopersona","imageSrc","accionForm","group","required","snapshot","paramMap","id_persona_log","cargaMadre","getFotografia","respuesta","reload","file","dataTransfer","files","target","pattern","reader","FileReader","type","alert","onload","_handleReaderLoaded","bind","readAsDataURL","datosFoto","JSON","stringify","altaRegistroFoto","fire","text","icon","showConfirmButton","recarga","handleInputChange","MenuComponent","servicioCompartido","user","show","clickEventsubscription","getClickEvent","incrementCount","getUserId","checked","AccionComponent","registro","registroRetorno","periodicidades","datoregistro","id_seguimiento","id_tarea","mad","mesActual","now","diasMes","tramosSemana","tramosMes","diasSemana","mesVigente","getMonth","error","checkArrayt","array","fechafin","repeticiones","id_categoria","getDatosMadre","madre","identificacion","datosborrado","push","value","i","controls","forEach","item","removeAt","borrarRegistro","valormes","altaRegistrochecks","submitForm","AccionHistoricoComponent","setValue","CheckComponent","accionFormCheck","AuthguardGuard","route","state","routeurl","url","isLogin","queryParams","returnUrl","providedIn","ModeloAccionPuntual","Constantes","nombreTurnos","Issue","IssueHistorico","ModeloPeriodicidad","PeriodicidadMadre","Personas","Seguimiento","AltaComponent","apiService","Editor","roles","estados","categorias","issue","editing","rows","temp","dregistro","tarea","hora","estatus","observaciones","flag_visibilidad","prioridad","ColumnMode","editor","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","altaRegistro","datos","onReady","ConfiguracionPage","DescargaPage","DetalleComponent","registroService","dregistroa","registropersona","recurrencias","suscripcion","dias","name","getPerson","periodetalle","undefined","decidecategoria","periodcate","content","ariaLabelledBy","form","patronHora","horaResult","test","peticion","actualizarRegistro","actualizarRegistroSeguimiento","showCancelButton","guardarregistro","DetalleHistoricoComponent","id_log","getDetalleHistorico","DetallePersona","telefono","email","direccion","registrado","id_rol","password","imagen","fieldTextType","patronEmail","emailResult","patronPassword","passwordResult","toggleFieldTextType","HistoricoComponent","historicoService","fecha","issueg","descripcion_accion","hour","status","fetch","data","cb","XMLHttpRequest","parse","response","send","event","val","toLowerCase","filter","d","indexOf","table","offset","updateFilter","HomeComponent","my_messages","res","totalMessage","emptyMessage","valorTurno","cell","rowIndex","campo","valor","ever","ngOnInit","length","modiRegistro","LoginComponent","angForm","minLength","userlogin","pipe","postdata","PerfilPersona","PersonasPage","emailvalida","mailexiste","validaEmail","datosMail","ElegirTurno","formbuilder","turnosService","userPersona","listaturnos","datosturnos","id_turno","turno","tipo_turno","turno_horario","reactiveForm","isSubmitted","valueChanges","setItem","sendClickEvent","onSubmit","ApiPersonas","post","persona","personaTemp","ApiService","AyudaService","DataService","API_URL","dataChange","dialogData","next","message","DataserviceService","baseUrl","username","Usermodule","setToken","setID","emit","token","usertoken","getToken","idtoken","getID","DetalleService","DetalleHistoricoService","HistoricoService","PeriodicidadService","SharedService","subject","asObservable","TurnosService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\nimport { DataserviceService } from './services/dataservice.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'check';\n\n          loginbtn:boolean;\n          logoutbtn:boolean;\n          constructor(private dataService: DataserviceService) {\n            dataService.getLoggedInName.subscribe(nombres => this.changeName(nombres));\n            if(this.dataService.isLoggedIn())\n            {\n              console.log(\"loggedin\");\n              this.loginbtn=false;\n              this.logoutbtn=true\n            }\n            else{\n            this.loginbtn=true;\n            this.logoutbtn=false\n            }\n        \n        \n        }\n        private changeName(nombres: boolean): void {\n          this.logoutbtn = nombres;\n          this.loginbtn = !nombres;\n        }\n        logout()\n        {\n          this.dataService.deleteToken();\n          window.location.href = window.location.href;\n        }\n\n\n}\n","<div class=\"container-fluid\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { routes } from './app.routes';\r\n//import { AppRoutingModule } from './app.routes';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { DataService } from './services/data.service';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { HomeComponent } from './pages/home.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { BuscadorComponent } from './components/buscador/buscador.component';\r\n\r\nimport { PersonasPage } from './pages/personas.pages';\r\n\r\nimport { DescargaPage } from './pages/descarga.pages';\r\nimport { ConfiguracionPage } from './pages/configuracion.pages';\r\n\r\nimport { DetalleComponent } from './pages/detalle.component';\r\n\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\n\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\r\nimport { AltaComponent } from './pages/alta.component';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { NgxFullCalendarModule } from 'ngx-fullcalendar';\r\nimport { CheckComponent } from './components/periodicidad/check.component';\r\nimport { AccionComponent } from './components/periodicidad/accion.component';\r\nimport { AccionHistoricoComponent } from './components/periodicidad/accionhistorico.component';\r\nimport { HistoricoComponent } from './pages/historico.component';\r\nimport { DetalleHistoricoComponent } from './pages/detallehistorico.component';\r\nimport { DetallePersona } from './pages/detallepersona.component';\r\nimport { ModimagenComponent } from './components/imagen/modimagen.component';\r\n\r\n\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport {JpImagePreloadModule} from '@jaspero/ng-image-preload';\r\nimport { PerfilPersona } from './pages/perfil.component';\r\nimport { AyudaComponent } from './components/ayuda/ayuda.component';\r\nimport { ElegirTurno } from './pages/turnos/elegir.component';\r\n\r\n\r\n\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\nCheckComponent,\r\n    HomeComponent,\r\n    DetalleComponent,\r\n    LoginComponent,\r\n    DetalleHistoricoComponent,\r\n  AccionComponent,\r\n  ModimagenComponent,\r\n  AccionHistoricoComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    MenuComponent,\r\n    BuscadorComponent,\r\n    PersonasPage,\r\nHistoricoComponent,\r\n    DescargaPage,\r\n    ConfiguracionPage,\r\n    ElegirTurno,\r\n    AltaComponent,\r\n    DetallePersona,\r\n    PerfilPersona,\r\nAyudaComponent\r\n    \r\n\r\n \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    JpImagePreloadModule.forRoot(),\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    NgxFullCalendarModule,\r\n    MatPaginatorModule,\r\n    [NgxMaterialTimepickerModule.setLocale('es-419')],\r\n    FormsModule,\r\n    NgxDatatableModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    //RouterModule.forRoot( routes ),\r\n    RouterModule.forRoot(routes, { useHash: true }),\r\n    ToastrModule.forRoot(),\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    CKEditorModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  entryComponents: [],\r\n  exports: [\r\n    RouterModule,\r\n  ],\r\n  providers: [\r\n\r\n    DataService,\r\n    { provide: LOCALE_ID, useValue: 'es' }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","// import { RouterModule, Routes } from '@angular/router';\r\n// import { HomeComponent } from './pages/home.component';\r\n\r\n// import { NgModule } from '@angular/core';\r\n// import { AppComponent } from './app.component';\r\n// import { PerfilPage } from './pages/perfil.pages';\r\n// import { PersonasPage } from './pages/personas.pages';\r\n// import { ConfiguracionPage } from './pages/configuracion.pages';\r\n// import { DescargaPage } from './pages/descarga.pages';\r\n// import { HistoricoPage } from './pages/historico.pages';\r\n \r\n// import { RegistroComponent } from './pages/registro/registro.component';\r\n// import { LoginComponent } from './pages/login/login.component';\r\n\r\n\r\n// const APP_ROUTES: Routes = [\r\n\r\n//  { path: 'home', component: HomeComponent},\r\n//  { path: 'historico', component: HistoricoPage },\r\n//  { path: 'descarga', component: DescargaPage },\r\n//  { path: 'configuracion', component: ConfiguracionPage },\r\n//  { path: 'personas', component: PersonasPage },\r\n// // { path: 'resultadopersonas/:termino', component: ResultadoPersonasComponent },\r\n// // { path: 'persona/:id', component: PersonaComponent },\r\n// { path: 'login'   , component: LoginComponent },\r\n// { path: 'registro', component: RegistroComponent },\r\n// { path: 'perfil', component: PerfilPage },\r\n// //{ path: '**', redirectTo: 'login' }\r\n// { path: '**',  redirectTo: '/registro'}    \r\n// ];\r\n\r\n// @NgModule({\r\n//     imports:[\r\n//         RouterModule.forRoot ( APP_ROUTES, {useHash:false})\r\n//     ],\r\n//     exports: [ RouterModule ]\r\n// })\r\n\r\n// export class AppRoutingModule {}\r\n// //CON HASH (??) export const APP_ROUTING = RouterModule.forRoot(APP_ROUTES ,{useHash:true});\r\n// export const APP_ROUTING = RouterModule.forRoot(APP_ROUTES);\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { Routes} from '@angular/router';\r\n\r\nimport { HomeComponent } from './pages/home.component';\r\nimport { DetalleComponent } from './pages/detalle.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nimport { PersonasPage } from './pages/personas.pages';\r\nimport { AltaComponent } from './pages/alta.component';\r\nimport { HistoricoComponent } from './pages/historico.component';\r\nimport { DetalleHistoricoComponent } from './pages/detallehistorico.component';\r\nimport { DetallePersona } from './pages/detallepersona.component';\r\nimport { AuthguardGuard } from './guards/authguard.guard';\r\nimport { PerfilPersona } from './pages/perfil.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { AyudaComponent } from './components/ayuda/ayuda.component';\r\nimport { ElegirTurno } from './pages/turnos/elegir.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: 'ayuda' , component: AyudaComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'elegirturno' , component: ElegirTurno, canActivate: [ AuthguardGuard ] },\r\n  { path: 'home' , component: HomeComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'alta' , component: AltaComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'personas' , component: PersonasPage, canActivate: [ AuthguardGuard ] },\r\n  { path: 'perfil/:id_persona' , component: PerfilPersona, canActivate: [ AuthguardGuard ] },\r\n  { path: 'detallepersona/:id_persona' , component: DetallePersona, canActivate: [ AuthguardGuard ] },\r\n  { path: 'historico' , component: HistoricoComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'detallehistorico/:id_log' , component: DetalleHistoricoComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'detalle/:id_tarea' , component: DetalleComponent, canActivate: [ AuthguardGuard ]},\r\n  { path: 'login'   , component: LoginComponent },\r\n  { path: '', pathMatch: 'full', redirectTo: '/login'},\r\n  { path: '**', redirectTo: '/login' }\r\n];\r\n\r\n\r\n//export class AppRoutingModule { }\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\n  \nimport {NgbModal, ModalDismissReasons, NgbModalOptions} from '@ng-bootstrap/ng-bootstrap';\nimport { AyudaService } from '../../services/ayuda.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Ayuda } from '../../models/ayuda';\nimport { Constantes } from '../../models/constantes.model';\n  \n@Component({\n  selector: 'app-ayuda',\n  templateUrl: './ayuda.component.html'\n})\nexport class AyudaComponent  implements OnInit {\n  title = 'Ayuda';\n\n  \n  contenidoayuda: Ayuda[] = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  closeResult: string;\n  modalOptions:NgbModalOptions;\n  constructor(private httpClient: HttpClient,private modalService: NgbModal, private ayudaService: AyudaService) {\n\n    this.modalOptions = {\n      backdrop:'static',\n      backdropClass:'customBackdrop',\n      size: 'lg' \n    }\n\n  }\n  \n  ngOnInit(){\n    const id_persona = localStorage.getItem('id_persona');\n\n    //cargo el listado \n    this.httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_ayuda.php?id_persona=' + id_persona)\n    .subscribe(result => {\n      this.contenidoayuda = result;\n    });\n\n\n  }\n\n  open(ayuda) {\n    this.modalService.open(ayuda, this.modalOptions).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n\n\n\n\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  \n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n}","<a \n        \ntitle=\"Ayuda\"\n(click)=\"open(ayuda)\"\nclass=\"nav-link pointerplus\"\n><i class=\"fa fa-question-circle mr-1 fa-1g\"></i>\nAyuda\n</a>\n\n\n\n<ng-template #ayuda let-modal class=\"modal-lg\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Ayuda</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n      <span aria-hidden=\"true\">×</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n\n    <div *ngFor=\"let contenido of contenidoayuda\">\n\n    <div id=\"card-966405\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                 <a class=\"card-link collapsed\" \n                 data-toggle=\"collapse\" \n                 data-parent=\"#card-966405\" \n                 href=\"#card-element-{{contenido.numauto}}\">{{contenido.ayudatitulo}}</a>\n            </div>\n            <div id=\"card-element-{{contenido.numauto}}\" class=\"collapse\">\n                <div class=\"card-body\">\n                    {{contenido.ayudatexto}}\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Cerrar</button>\n  </div>\n</ng-template>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-buscador',\r\n    templateUrl: './buscador.component.html'\r\n})\r\n\r\nexport class BuscadorComponent {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"row mb-4\">\r\n    <div class=\"col-md-12 flex-column text-center ml-2 mr-3\">\r\n    <form class=\"form-inline\">\r\n      <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"{{ 'txtSearch' | translate }}\" /> \r\n      <button class=\"btn btn-info my-2 my-sm-0 btn-circle\" type=\"submit\">\r\n        <i class=\"fa  fa-search\"></i>\r\n      </button>\r\n    </form>\r\n  </div>\r\n  </div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-footer',\r\n    templateUrl: './footer.component.html'\r\n})\r\n\r\nexport class FooterComponent {\r\n    any: number;\r\n    constructor(){\r\n        this.any = new Date().getFullYear();\r\n    }\r\n}\r\n\r\n\r\n","<div class=\"row \">\r\n    <div class=\"col-12 footer bg-dark text-center  text-white\">\r\n\r\n   \r\n          &copy; 2020 - {{ any }}\r\n        </div>\r\n\r\n</div>","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataserviceService } from '../../services/dataservice.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html'\r\n})\r\n\r\nexport class HeaderComponent {\r\n    \r\n  title = 'ng-bootstrap-modal-demo';\r\n\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private dataService: DataserviceService,\r\n        private router:Router,\r\n        private activatedRoute: ActivatedRoute\r\n        ){\r\n        this.translate.addLangs(['es','ca','en']);\r\n        this.translate.setDefaultLang('es');\r\n        const browserLang = translate.getBrowserLang();\r\n        translate.use(browserLang.match(/es|ca|en/) ? browserLang : 'es');\r\n        }\r\n\r\n\r\n        Logout() {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('id_persona');\r\n            const redirect = this.dataService.redirectUrl ? this.dataService.redirectUrl : '/login';\r\n                        this.router.navigate([redirect]);\r\n          }\r\n\r\n}\r\n\r\n\r\n","<div class=\"row\">\r\n  <div class=\"col-12 bg-dark\">\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <a class=\"navbar-brand\" href=\"#\">CheckList</a>\r\n\r\n      <!-- Toggle button -->\r\n      <button\r\n        id=\"sidebarCollapse\"\r\n        data-toggle=\"collapse\"\r\n        type=\"button\"\r\n        class=\"navbar-toggler navbar-toggler-right\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n        <ul class=\"navbar-nav ml-md-auto\">\r\n          <li class=\"nav-item\">\r\n\r\n         <app-ayuda></app-ayuda>\r\n\r\n\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\" (click)=\"Logout()\">\r\n              <i class=\"fa fa-times-circle mr-1 fa-1g\"></i>\r\n              {{ \"txtSalir\" | translate }}\r\n            </a>\r\n          </li>\r\n\r\n          <li class=\"nav-item\">\r\n            <div>\r\n              <label>\r\n                <select\r\n                  class=\"form-control form-control-sm moresmall mt-2 ml-4\"\r\n                  #langSelect\r\n                  (change)=\"translate.use(langSelect.value)\"\r\n                >\r\n                  <option\r\n                    *ngFor=\"let lang of translate.getLangs()\"\r\n                    [value]=\"lang\"\r\n                    [selected]=\"lang === translate.currentLang\"\r\n                    >{{ lang }}</option\r\n                  >\r\n                </select>\r\n              </label>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { Personas } from '../../models/personas';\r\nimport { ApiPersonas } from '../../services/apipersonas.service';\r\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\r\nimport { JpPreloadService } from '@jaspero/ng-image-preload';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-modimagen',\r\n  templateUrl: './modimagen.component.html'\r\n})\r\n\r\nexport class ModimagenComponent implements OnInit {\r\n\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  personas: Personas[] = [];\r\n  fotopersona:Personas = new Personas();\r\n  accionForm: FormGroup;\r\n  private imageSrc: string = '';\r\n  datosFoto: string;\r\n    constructor(\r\n      private fb: FormBuilder, \r\n      private activatedRoute: ActivatedRoute, \r\n      private httpClient: HttpClient, \r\n      private perioService: ApiPersonas\r\n\r\n      ) {\r\n        \r\n\r\n        //modificar valores por defecto en la pagina de insercion TODO\r\n        this.accionForm = this.fb.group({\r\n\r\n          fotopersona: ['', Validators.required],\r\n          id_persona: this.activatedRoute.snapshot.paramMap.get('id_persona'),\r\n          id_persona_log: localStorage.getItem('id_persona'),\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n      this.cargaMadre();\r\n   \r\n  }\r\n  \r\n\r\n  cargaMadre(){\r\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona')\r\n    this.perioService.getFotografia(id_persona).subscribe( (respuesta: Personas) => {\r\n    this.fotopersona = respuesta;\r\n    //this.accionForm.controls['fechafin'].setValue(this.fotopersona[0]['imagen']);\r\n    \r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  handleInputChange(e) {\r\n    var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    var pattern = /image-*/;\r\n    var reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('invalid format');\r\n      return;\r\n    }\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n  _handleReaderLoaded(e) {\r\n    let reader = e.target;\r\n    this.imageSrc = reader.result;\r\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona')\r\n    \r\n    const id_persona_log = localStorage.getItem('id_persona')\r\n\r\n    this.datosFoto = JSON.stringify({ \"id_persona_log\": id_persona_log ,\"id_persona\": id_persona , \"fotopersona\": this.imageSrc});\r\n    this.perioService.altaRegistroFoto(this.datosFoto).subscribe();\r\n    \r\n    Swal.fire({\r\n      text: 'Foto actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    , this.recarga()\r\n    ;\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n   submitForm() {\r\n\r\n    // // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    // // const id_tarea: FormControl = this.accionForm.get('id_persona') as FormControl;\r\n\r\n    // this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    // Swal.fire({\r\n    //   text: 'Foto actualizada',\r\n    //   icon: 'success',\r\n    //   showConfirmButton: false\r\n    // })\r\n    // , this.recarga()\r\n    // ;\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","          \r\n  <div class=\"block\" *ngIf=\"fotopersona.imagen==''\">\r\n    <img \r\n    class=\"nofoto animate fadeIn\" \r\n    src=\"./assets/nophoto.jpg\" \r\n    >\r\n  </div> \r\n\r\n \r\n   <div class=\"block\" *ngIf=\"fotopersona.imagen\">\r\n    <img \r\n    class=\"perfildetalle animate fadeIn\" \r\n    src=\"./assets/loader.gif\" \r\n    jpPreload=\"{{fotopersona.imagen}}\">\r\n  </div>\r\n  \r\n\r\n\r\n\r\n\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12 text-center mt-4\">\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" novalidate>\r\n  <input type=\"hidden\" class=\"form-control\"  name=\"id_persona\"  formControlName=\"id_persona\"  />\r\n  <label class=\"fileContainer\"><i class=\"fa fa-camera\"></i>\r\n\r\n  <input \r\n         type=\"file\"\r\n         name=\"fotopersona\"  \r\n         formControlName=\"fotopersona\"\r\n         (change)=\"handleInputChange($event)\"\r\n         accept=\"image/*\" \r\n         \r\n         />\r\n\r\n </label>\r\n</form>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { HAMMER_LOADER } from '@angular/platform-browser';\r\n\r\n\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { DataserviceService } from '../../services/dataservice.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Usermodule } from '../../models/usuario.model';\r\n\r\nimport { Personas } from '../../models/personas';\r\nimport { Roles } from '../../models/roles';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SharedService } from '../../services/serviciocompartido.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n    selector: 'app-menu',\r\n    templateUrl: './menu.component.html',\r\n    styleUrls: ['./menu.component.css']\r\n})\r\n\r\n\r\n\r\n\r\nexport class MenuComponent implements OnInit{\r\n\r\nclickEventsubscription:Subscription;\r\nuser:Personas = new Personas();\r\n\r\nPHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\nconstructor(private httpClient: HttpClient,private servicioCompartido: SharedService, private dataService: DataserviceService,private router:Router){\r\n\r\n    this.clickEventsubscription=this.servicioCompartido.getClickEvent().subscribe(()=>{\r\n        this.incrementCount();\r\n        })\r\n\r\n }\r\n public show:boolean = false;\r\n\r\n        ngOnInit(){\r\n            const id_persona = localStorage.getItem('id_persona');\r\n            this.dataService.getUserId ( id_persona )\r\n              .subscribe( (respuesta:Personas) => {\r\n                 this.user = respuesta;\r\n                \r\n              });\r\n        }\r\n\r\n        \r\n\r\n        incrementCount(){\r\n            this.show = !this.show;\r\n        }\r\n\r\n\r\n}\r\n","<!-- Vertical navbar -->\r\n<div class=\"vertical-nav bg-white\" id=\"sidebar\">\r\n  <div class=\"py-4 px-3 mb-4 bg-light\">\r\n    <div class=\"media d-flex align-items-center\">\r\n\r\n\r\n\r\n\r\n      <div  *ngIf=\"user.imagen==null \">\r\n        <img \r\n        src=\"./assets/nophoto.jpg\" \r\n        width=\"75\"\r\n        class=\"mr-3 rounded-circle img-thumbnail shadow-sm\"\r\n        >\r\n      </div> \r\n    \r\n     \r\n       <div  *ngIf=\"user.imagen\">\r\n        <img \r\n        width=\"75\"\r\n        class=\"mr-3 rounded-circle img-thumbnail shadow-sm\"\r\n        src=\"./assets/loader.gif\" \r\n        jpPreload=\"{{user.imagen}}\">\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"media-body\" >\r\n        <h5 class=\"minnom m-0\">{{ user.nombres }}</h5>\r\n        <p class=\"font-weight-light roledef mt-2 mb-2\">\r\n          <em>{{ user.nombre_rol }}{{ user.level_rol }}</em>\r\n        </p>\r\n        \r\n        <a [routerLink]=\"['/', 'perfil', '1']\" class=\"text-light\">\r\n          <i class=\"fa fa-user mr-1  fa-1g\"></i> <small>{{ \"txtProfile\" | translate }}</small>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n<app-buscador></app-buscador>\r\n\r\n<hr />\r\n\r\n  <p class=\"text-gray font-weight-bold text-uppercase px-3 small mt-2 pb-4 mb-0\">\r\n    {{ \"txtNavegacion\" | translate }}\r\n  </p>\r\n\r\n  <ul class=\"nav flex-column bg-white mb-0\">\r\n\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'elegirturno']\" class=\"nav-link  \">\r\n        <i class=\"fa fa-home mr-3  fa-fw\"></i>\r\n        Turnos\r\n      </a>\r\n    </li>\r\n\r\n\r\n    <!-- <ng-container *ngIf=\"show\"> -->\r\n    <li class=\"nav-item\" routerLinkActive=\"active\" >\r\n      <a [routerLink]=\"['/', 'home']\" class=\"nav-link  \">\r\n        <i class=\"fa fa-home mr-3  fa-fw\"></i>\r\n        Tareas \r\n      </a>\r\n    </li>\r\n  <!-- </ng-container> -->\r\n\r\n\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'personas']\" class=\"nav-link \">\r\n        <i class=\"fa fa-users mr-3  fa-fw\"></i>\r\n        {{ \"txtPersonas\" | translate }}\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'historico']\" class=\"nav-link \">\r\n        <i class=\"fa fa-history mr-3  fa-fw\"></i>\r\n        {{ \"txtConsultahistorica\" | translate }}\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a href =\"http://joraco.site:8081/b/ajax/exportar_registros_tareas_csv.php\" class=\"nav-link \">\r\n        <i class=\"fa fa-download mr-3  fa-fw\"></i>\r\n        {{ \"txtDescargaInformacion\" | translate }}\r\n      </a>\r\n    </li>\r\n  </ul>\r\n  <hr />\r\n  <p class=\"text-gray font-weight-bold text-uppercase px-3 small mt-2  pb-4 mb-0\">\r\n   {{ \"txtRolAdministrador\" | translate }}\r\n  </p>\r\n\r\n  <ul class=\"nav flex-column bg-white mb-0\">\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'configuracion']\" class=\"nav-link \">\r\n        <i class=\"fa fa-cog mr-3  fa-fw\"></i>\r\n        {{ \"txtConfiguracion\" | translate }}\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n<!-- End vertical navbar -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DiasMes } from '../../models/diasdelmes';\r\nimport { ModeloAccionPuntual } from '../../models/accionpuntual';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModeloPeriodicidad } from '../../models/periodicidad';\r\nimport { TramosSemana } from '../../models/tramossemana';\r\nimport { TramosMes } from '../../models/tramosmes';\r\nimport { TramosDias } from '../../models/tramosdias';\r\nimport Swal from 'sweetalert2';\r\nimport { PeriodicidadMadre } from '../../models/periodicidadmadre';\r\nimport { NoopScrollStrategy } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-accion',\r\n  templateUrl: './accion.component.html'\r\n})\r\n\r\nexport class AccionComponent implements OnInit {\r\n\r\n\r\n  registro: ModeloAccionPuntual = new ModeloAccionPuntual();\r\n  registroRetorno: ModeloPeriodicidad = new ModeloPeriodicidad();\r\n  periodicidades: ModeloPeriodicidad[] = [];\r\n\r\n  datoregistro = {\r\n    id_seguimiento: null,\r\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n    id_persona: null\r\n  }\r\n  madre: PeriodicidadMadre;\r\n\r\n  mad:PeriodicidadMadre = new PeriodicidadMadre();\r\n\r\n  mesActual: number = Date.now();\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  diasMes: DiasMes[] = [];\r\n  tramosSemana: TramosSemana[] = [];\r\n  tramosMes: TramosMes[] = [];\r\n  diasSemana: TramosDias[] = [];\r\n\r\n  datosRecibidos: string;\r\n  dias: any;\r\n  accionForm: FormGroup;\r\n\r\n  selectedHobbiesNames: [string];\r\n\r\n  mesVigente = new Date().getMonth() + 1;\r\n  datosborrado: string;\r\n  repeticiones: PeriodicidadMadre;\r\n  fechafin: any;\r\n\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private httpClient: HttpClient, private perioService: PeriodicidadService) {\r\n\r\n    //cargo los dias del mes en curso\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_dias_mes_actual.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos mes\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_mes.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos dias de la semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_dias_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo el listado de personas para esta ID tarea\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.periodicidades = result;\r\n    }, error => console.error(error));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionForm = this.fb.group({\r\n      checkArrayt: this.fb.array([]),\r\n      fechafin: new FormControl(''),\r\n    //   repeticiones: new FormControl(this.madre),\r\n      repeticiones: ['', Validators.required],\r\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n      id_categoria: '3', //id de accion puntual\r\n      id_persona: localStorage.getItem('id_persona')\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n this.cargaMadre();\r\n\r\n  }\r\n\r\n\r\n  cargaMadre(){\r\n\r\n\r\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id_tarea');\r\n\r\n    this.perioService.getDatosMadre(id_tarea).subscribe( (respuesta: PeriodicidadMadre) => {\r\n    this.madre = respuesta;\r\n    this.mad = respuesta;\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //eliminar registro\r\n  borrarRegistro(identificacion) {\r\n    this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n    this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  }\r\n\r\n  onCheckboxChange(e) {\r\n    const checkArrayt: FormArray = this.accionForm.get('checkArrayt') as FormArray;\r\n    if (e.target.checked) {\r\n      checkArrayt.push(new FormControl(e.target.value));\r\n    } else {\r\n      let i: number = 0;\r\n      checkArrayt.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          checkArrayt.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n      //quito el check y borro el registro 8no se aprecia porqu eno recarga la pagina)\r\n      this.borrarRegistro(e.target.value);\r\n    }\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n  submitForm() {\r\n    const valormes = this.mesVigente;\r\n    // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    const id_tarea: FormControl = this.accionForm.get('id_tarea') as FormControl;\r\n\r\n    this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    Swal.fire({\r\n      text: 'Periodicidad actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    //, this.recarga()\r\n    ;\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card bg-default\">\r\n        <h5 class=\"card-header\">\r\n          Acción puntual\r\n        </h5>\r\n        <div class=\"card-body\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div class=\"row\">\r\n          \r\n            <div class=\"col-md-7\">\r\n          <div [formGroup]=\"accionForm\">\r\n          <input type=\"hidden\" class=\"form-control\"  name=\"id_tarea\"  formControlName=\"id_tarea\"  />\r\n          </div>\r\n\r\n          <div [formGroup]=\"accionForm\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_categoria\"  formControlName=\"id_categoria\"  />\r\n          </div>\r\n\r\n          <div [formGroup]=\"accionForm\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_persona\"  formControlName=\"id_persona\"  />\r\n          </div>\r\n\r\n             <div class=\"row\">\r\n            <div class=\"col-md-7\"><h5 class=\"titolpetit\">Posición en la semana</h5>\r\n            <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-6  minitext\">\r\n\r\n\r\n\r\n                  <div *ngFor=\"let dias of diasSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{dias.name}}</div><div class=\"col-4\">\r\n                      <input type=\"checkbox\"  name=\"dias.name{{dias.value}}\" [value]=\"dias.value\" \r\n                      checked=\"{{dias.checked}}\"  \r\n                      (change)=\"onCheckboxChange($event)\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n\r\n               \r\n                </div>\r\n                <div class=\"col-6  minitext\">\r\n                  <div *ngFor=\"let tramos of tramosSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{tramos.name}}</div><div class=\"col-4\">\r\n                      \r\n                      <input type=\"checkbox\" [value]=\"tramos.value\" checked=\"{{tramos.checked}}\" (change)=\"onCheckboxChange($event)\" />\r\n                    \r\n                      \r\n                    \r\n                    \r\n                    </div></div>\r\n                  </div>\r\n                </div>\r\n            </div>      \r\n            </div>\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Posición en el mes</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3  minitext\">\r\n                <div class=\"col-12\">\r\n                  <div *ngFor=\"let trames of tramosMes; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{trames.name}}</div><div class=\"col-4 text-right\">\r\n                      <input type=\"checkbox\" [value]=\"trames.value\" checked=\"{{trames.checked}}\" (change)=\"onCheckboxChange($event)\" /></div></div>\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div>\r\n           </div> \r\n\r\n\r\n           <div class=\"row\">\r\n            <div class=\"col-md-12\"><h5 class=\"titolpetit\"></h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12\">\r\n                 \r\n                 \r\n                 \r\n                  <div class=\"row\" [formGroup]=\"accionForm\">\r\n                    <div class=\"col-6\"> \r\n                      <label for=\"dp\">Fecha fin</label>\r\n                      <div class=\"input-group\">\r\n                        <input\r\n                          class=\"form-control\"\r\n                          ngbDatepicker\r\n                          #d=\"ngbDatepicker\"\r\n                          name=\"fechafin\"\r\n                          formControlName=\"fechafin\"\r\n                           placeholder =  {{mad.fechafin}} \r\n                          readonly\r\n                        />\r\n                        <div class=\"input-group-append\">\r\n                          <button\r\n                            class=\"btn btn-outline-secondary calendar\"\r\n                            (click)=\"d.toggle()\"\r\n                            type=\"button\"\r\n                          ></button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"col-6\" [formGroup]=\"accionForm\"><label for=\"repeticiones\">Número de repeticiones</label> \r\n                    \r\n                      <input type=\"number\" class=\"form-control\"  \r\n                      name=\"repeticiones\" \r\n                      value=  {{mad.repeticiones}} \r\n                      formControlName=\"repeticiones\"  \r\n  \r\n                      />\r\n                    \r\n                  \r\n                    </div>\r\n\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div> \r\n          </div>\r\n          </div>\r\n\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Selección de días</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12 m-0 p-0\">\r\n                  <div class=\"row mb-3 p-0 text-center\">\r\n                    <!-- <div class=\"col-12\">\r\n                      <h5 class=\"titolpetit\">{{mesActual | date: 'LLLL'}}</h5>\r\n                    </div> -->\r\n                  </div>\r\n                  <div class=\"row m-0 p-0 checkbox\">\r\n                      <div class=\"col-2  text-center p-0 m-0\" *ngFor=\"let diam of diasMes; let i=index\">\r\n\r\n                          <input type=\"checkbox\" \r\n                          [value]=\"diam.value\" name=\"checkbox{{diam.value}}\" id=\"checkbox{{diam.value}}\" \r\n                         \r\n                          checked=\"{{diam.checked}}\"  \r\n                          (change)=\"onCheckboxChange($event)\"\r\n                          />\r\n                        \r\n\r\n                        <label for=\"checkbox{{diam.value}}\">{{diam.name}}</label>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>      \r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-12 text-center\"><hr class=\"bdott\" />\r\n              <button type=\"submit\" class=\"btn btn-info mt-3\">\r\n                Guardar periodicidad\r\n              </button>\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </form>\r\n\r\n  <script>\r\n    CKEDITOR.replace(\"ibmeditor\", { \r\n    on : {\r\n      // maximize the editor on startup\r\n      'instanceReady' : function( evt ) {\r\n        evt.editor.resize(\"100%\");\r\n      }\r\n    }\r\n  });\r\n  </script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DiasMes } from '../../models/diasdelmes';\r\nimport { ModeloAccionPuntual } from '../../models/accionpuntual';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModeloPeriodicidad } from '../../models/periodicidad';\r\nimport { TramosSemana } from '../../models/tramossemana';\r\nimport { TramosMes } from '../../models/tramosmes';\r\nimport { TramosDias } from '../../models/tramosdias';\r\nimport Swal from 'sweetalert2';\r\nimport { PeriodicidadMadre } from '../../models/periodicidadmadre';\r\nimport { NoopScrollStrategy } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-accionhistorico',\r\n  templateUrl: './accionhistorico.component.html'\r\n})\r\n\r\nexport class AccionHistoricoComponent implements OnInit {\r\n\r\n\r\n  registro: ModeloAccionPuntual = new ModeloAccionPuntual();\r\n  registroRetorno: ModeloPeriodicidad = new ModeloPeriodicidad();\r\n  periodicidades: ModeloPeriodicidad[] = [];\r\n\r\n  datoregistro = {\r\n    id_seguimiento: null,\r\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\r\n    id_persona: null\r\n  }\r\n  madre: any;\r\n\r\n  \r\n  mesActual: number = Date.now();\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  diasMes: DiasMes[] = [];\r\n  tramosSemana: TramosSemana[] = [];\r\n  tramosMes: TramosMes[] = [];\r\n  diasSemana: TramosDias[] = [];\r\n  mad:PeriodicidadMadre = new PeriodicidadMadre();\r\n\r\n  datosRecibidos: string;\r\n  dias: any;\r\n  accionForm: FormGroup;\r\n\r\n  selectedHobbiesNames: [string];\r\n\r\n  mesVigente = new Date().getMonth() + 1;\r\n  datosborrado: string;\r\n\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private httpClient: HttpClient, private perioService: PeriodicidadService) {\r\n\r\n    //cargo los dias del mes en curso\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_dias_mes_actual.php').subscribe(result => {\r\n      this.diasMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos mes\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_mes.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos dias de la semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_dias_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo el listado de personas para esta ID tarea\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.periodicidades = result;\r\n    }, error => console.error(error));\r\n\r\n  \r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionForm = this.fb.group({\r\n      checkArrayt: this.fb.array([]),\r\n      fechafin: new FormControl(''),\r\n    //   repeticiones: new FormControl(this.madre),\r\n      repeticiones: ['', Validators.required],\r\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\r\n      id_categoria: '3' //id de accion puntual\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n this.cargaMadre();\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  cargaMadre(){\r\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id')\r\n    this.perioService.getDatosMadre(id_tarea).subscribe( (respuesta: PeriodicidadMadre) => {\r\n    this.madre = respuesta;\r\n    this.mad = respuesta[0];\r\n    this.accionForm.controls['fechafin'].setValue(this.madre[0]['fechafin']);\r\n    this.accionForm.controls['repeticiones'].setValue(this.madre[0]['repeticiones']);\r\n    console.log(this.mad.fechafin);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  //   this.perioService.getDatosMadre (this.datoregistro.id_tarea)\r\n  //     .subscribe( (\r\n  //       respuesta:PeriodicidadMadre) => {\r\n  //        this.madre = respuesta;\r\n  //        console.log(this.madre);\r\n  //     });\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //eliminar registro      \r\n  borrarRegistro(identificacion) {\r\n    this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n    this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  }\r\n\r\n  onCheckboxChange(e) {\r\n    const checkArrayt: FormArray = this.accionForm.get('checkArrayt') as FormArray;\r\n    if (e.target.checked) {\r\n      checkArrayt.push(new FormControl(e.target.value));\r\n    } else {\r\n      let i: number = 0;\r\n      checkArrayt.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          checkArrayt.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n      //quito el check y borro el registro 8no se aprecia porqu eno recarga la pagina)\r\n      this.borrarRegistro(e.target.value);\r\n    }\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n  submitForm() {\r\n    const valormes = this.mesVigente;\r\n    // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    const id_tarea: FormControl = this.accionForm.get('id_tarea') as FormControl;\r\n\r\n    this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    Swal.fire({\r\n      text: 'Periodicidad actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    //, this.recarga()\r\n    ;\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card bg-default\">\r\n        <h5 class=\"card-header\">\r\n          Acción puntual\r\n        </h5>\r\n        <div class=\"card-body\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div class=\"row\">\r\n          \r\n            <div class=\"col-md-7\">\r\n          <div [formGroup]=\"accionForm\">\r\n          <input type=\"hidden\" class=\"form-control\"  name=\"id_tarea\"  formControlName=\"id_tarea\"  />\r\n          </div>\r\n\r\n          <div [formGroup]=\"accionForm\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_categoria\"  formControlName=\"id_categoria\"  />\r\n          </div>\r\n\r\n             <div class=\"row\">\r\n            <div class=\"col-md-7\"><h5 class=\"titolpetit\">Posición en la semana</h5>\r\n            <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-6  minitext\">\r\n\r\n\r\n\r\n                  <div *ngFor=\"let dias of diasSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{dias.name}}</div><div class=\"col-4\">\r\n                      <input type=\"checkbox\"  name=\"dias.name{{dias.value}}\" [value]=\"dias.value\" \r\n                      checked=\"{{dias.checked}}\"  \r\n                      (change)=\"onCheckboxChange($event)\"\r\n                      disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n\r\n               \r\n                </div>\r\n                <div class=\"col-6  minitext\">\r\n                  <div *ngFor=\"let tramos of tramosSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{tramos.name}}</div><div class=\"col-4\">\r\n                      \r\n                      <input type=\"checkbox\" \r\n                      disabled\r\n                      [value]=\"tramos.value\" checked=\"{{tramos.checked}}\" (change)=\"onCheckboxChange($event)\" />\r\n                    \r\n                      \r\n                    \r\n                    \r\n                    </div></div>\r\n                  </div>\r\n                </div>\r\n            </div>      \r\n            </div>\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Posición en el mes</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3  minitext\">\r\n                <div class=\"col-12\">\r\n                  <div *ngFor=\"let trames of tramosMes; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{trames.name}}</div><div class=\"col-4 text-right\">\r\n                      <input type=\"checkbox\" \r\n                      disabled\r\n                      [value]=\"trames.value\" checked=\"{{trames.checked}}\" (change)=\"onCheckboxChange($event)\" /></div></div>\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div>\r\n           </div> \r\n\r\n\r\n           <div class=\"row\">\r\n            <div class=\"col-md-12\"><h5 class=\"titolpetit\"></h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"row\" [formGroup]=\"accionForm\">\r\n                    <div class=\"col-6\">\r\n                      \r\n                      <label for=\"dp\">Fecha fin</label>\r\n                      <div class=\"input-group\">\r\n                        <input\r\n                          class=\"form-control\"\r\n                          ngbDatepicker\r\n                          #d=\"ngbDatepicker\"\r\n                          name=\"fechafin\"\r\n                          formControlName=\"fechafin\"\r\n                          disabled\r\n                          placeholder =  {{mad.fechafin}} \r\n                          readonly\r\n                        />\r\n                        <div class=\"input-group-append\">\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"col-6\" [formGroup]=\"accionForm\"><label for=\"repeticiones\">Número de repeticiones</label> \r\n                    \r\n                      <input type=\"number\" class=\"form-control\"  \r\n                      name=\"repeticiones\" \r\n                      formControlName=\"repeticiones\"  \r\n                      disabled\r\n                      />\r\n                    \r\n                  \r\n                    </div>\r\n\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div> \r\n          </div>\r\n          </div>\r\n\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Selección de días</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12 m-0 p-0\">\r\n                  <div class=\"row mb-3 p-0 text-center\">\r\n                    <!-- <div class=\"col-12\">\r\n                      <h5 class=\"titolpetit\">{{mesActual | date: 'LLLL'}}</h5>\r\n                    </div> -->\r\n                  </div>\r\n                  <div class=\"row m-0 p-0 checkbox\">\r\n                      <div class=\"col-2  text-center p-0 m-0\" *ngFor=\"let diam of diasMes; let i=index\">\r\n\r\n                          <input type=\"checkbox\" \r\n                          [value]=\"diam.value\" name=\"checkbox{{diam.value}}\" id=\"checkbox{{diam.value}}\" \r\n                         \r\n                          checked=\"{{diam.checked}}\"  \r\n                          (change)=\"onCheckboxChange($event)\"\r\n                          disabled\r\n                          />\r\n                        \r\n\r\n                        <label for=\"checkbox{{diam.value}}\">{{diam.name}}</label>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>      \r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-12 text-center\"><hr class=\"bdott\" />\r\n              <!-- <button type=\"submit\" class=\"btn btn-info mt-3\">\r\n                Guardar periodicidad\r\n              </button> -->\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </form>\r\n\r\n  <script>\r\n    CKEDITOR.replace(\"ibmeditor\", { \r\n    on : {\r\n      // maximize the editor on startup\r\n      'instanceReady' : function( evt ) {\r\n        evt.editor.resize(\"100%\");\r\n      }\r\n    }\r\n  });\r\n  </script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DiasMes } from '../../models/diasdelmes';\r\nimport { ModeloAccionPuntual } from '../../models/accionpuntual';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModeloPeriodicidad } from '../../models/periodicidad';\r\nimport { TramosSemana } from '../../models/tramossemana';\r\nimport { TramosMes } from '../../models/tramosmes';\r\nimport { TramosDias } from '../../models/tramosdias';\r\nimport Swal from 'sweetalert2';\r\nimport { PeriodicidadMadre } from '../../models/periodicidadmadre';\r\nimport { NoopScrollStrategy } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-check',\r\n  templateUrl: './check.component.html'\r\n})\r\n\r\nexport class CheckComponent implements OnInit {\r\n\r\n\r\n  registro: ModeloAccionPuntual = new ModeloAccionPuntual();\r\n  registroRetorno: ModeloPeriodicidad = new ModeloPeriodicidad();\r\n  periodicidades: ModeloPeriodicidad[] = [];\r\n\r\n  datoregistro = {\r\n    id_seguimiento: null,\r\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n    id_persona: null\r\n  }\r\n  madre: PeriodicidadMadre;\r\n\r\n  mad:PeriodicidadMadre = new PeriodicidadMadre();\r\n\r\n  mesActual: number = Date.now();\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  diasMes: DiasMes[] = [];\r\n  tramosSemana: TramosSemana[] = [];\r\n  tramosMes: TramosMes[] = [];\r\n  diasSemana: TramosDias[] = [];\r\n\r\n  datosRecibidos: string;\r\n  dias: any;\r\n  accionFormCheck: FormGroup;\r\n\r\n  selectedHobbiesNames: [string];\r\n\r\n  mesVigente = new Date().getMonth() + 1;\r\n  datosborrado: string;\r\n  repeticiones: PeriodicidadMadre;\r\n  fechafin: any;\r\n\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private httpClient: HttpClient, private perioService: PeriodicidadService) {\r\n\r\n    //cargo los dias del mes en curso\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_dias_mes_actual.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos mes\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_mes.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos dias de la semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_dias_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo el listado de personas para esta ID tarea\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.periodicidades = result;\r\n    }, error => console.error(error));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionFormCheck = this.fb.group({\r\n      checkArrayt: this.fb.array([]),\r\n      fechafin: new FormControl(''),\r\n    //   repeticiones: new FormControl(this.madre),\r\n      repeticiones: ['', Validators.required],\r\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n      id_categoria: '1', //id de accion puntual\r\n      id_persona: localStorage.getItem('id_persona')\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n this.cargaMadre();\r\n\r\n  }\r\n\r\n\r\n  cargaMadre(){\r\n\r\n\r\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id_tarea');\r\n\r\n    this.perioService.getDatosMadre(id_tarea).subscribe( (respuesta: PeriodicidadMadre) => {\r\n    this.madre = respuesta;\r\n    this.mad = respuesta;\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //eliminar registro\r\n  borrarRegistro(identificacion) {\r\n    this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n    this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  }\r\n\r\n  onCheckboxChange(e) {\r\n    const checkArrayt: FormArray = this.accionFormCheck.get('checkArrayt') as FormArray;\r\n    if (e.target.checked) {\r\n      checkArrayt.push(new FormControl(e.target.value));\r\n    } else {\r\n      let i: number = 0;\r\n      checkArrayt.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          checkArrayt.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n      //quito el check y borro el registro 8no se aprecia porqu eno recarga la pagina)\r\n      this.borrarRegistro(e.target.value);\r\n    }\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n  submitForm() {\r\n    const valormes = this.mesVigente;\r\n    // const fechafin: FormControl = this.accionFormCheck.get('fechafin') as FormControl;\r\n    // const repeticiones: FormControl = this.accionFormCheck.get('repeticiones') as FormControl;\r\n    const id_tarea: FormControl = this.accionFormCheck.get('id_tarea') as FormControl;\r\n\r\n    this.perioService.altaRegistrochecks(this.accionFormCheck.value).subscribe();\r\n    Swal.fire({\r\n      text: 'Periodicidad actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    //, this.recarga()\r\n    ;\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<form [formGroup]=\"accionFormCheck\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n  <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card bg-default\">\r\n          <h5 class=\"card-header\">\r\n            Check\r\n          </h5>\r\n          <div class=\"card-body\">\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n            <div class=\"row\">\r\n            \r\n              <div class=\"col-md-7\">\r\n            <div [formGroup]=\"accionFormCheck\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_tarea\"  formControlName=\"id_tarea\"  />\r\n            </div>\r\n  \r\n            <div [formGroup]=\"accionFormCheck\">\r\n              <input type=\"hidden\" class=\"form-control\"  name=\"id_categoria\"  formControlName=\"id_categoria\"  />\r\n            </div>\r\n\r\n            \r\n          <div [formGroup]=\"accionFormCheck\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_persona\"  formControlName=\"id_persona\"  />\r\n          </div>\r\n  \r\n               <div class=\"row\">\r\n              <div class=\"col-md-7\"><h5 class=\"titolpetit\">Posición en la semana</h5>\r\n              <hr class=\"bdott\" />\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-6  minitext\">\r\n  \r\n  \r\n  \r\n                    <div *ngFor=\"let dias of diasSemana; let i=index\">\r\n                      <div class=\"row\"><div class=\"col-8\">{{dias.name}}</div><div class=\"col-4\">\r\n                        <input type=\"checkbox\"  name=\"dias.name{{dias.value}}\" [value]=\"dias.value\" \r\n                        checked=\"{{dias.checked}}\"  \r\n                        (change)=\"onCheckboxChange($event)\"\r\n                       \r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    </div>\r\n  \r\n                 \r\n                  </div>\r\n                  <div class=\"col-6  minitext\">\r\n                    <div *ngFor=\"let tramos of tramosSemana; let i=index\">\r\n                      <div class=\"row\"><div class=\"col-8\">{{tramos.name}}</div><div class=\"col-4\">\r\n                        \r\n                        <input type=\"checkbox\" \r\n                        \r\n                        [value]=\"tramos.value\" checked=\"{{tramos.checked}}\" (change)=\"onCheckboxChange($event)\" />\r\n                      \r\n                        \r\n                      \r\n                      \r\n                      </div></div>\r\n                    </div>\r\n                  </div>\r\n              </div>      \r\n              </div>\r\n              <div class=\"col-md-5\"><h5 class=\"titolpetit\">Posición en el mes</h5>\r\n                <hr class=\"bdott\" />\r\n                <div class=\"row mt-3  minitext\">\r\n                  <div class=\"col-12\">\r\n                    <div *ngFor=\"let trames of tramosMes; let i=index\">\r\n                      <div class=\"row\"><div class=\"col-8\">{{trames.name}}</div><div class=\"col-4 text-right\">\r\n                        <input type=\"checkbox\" \r\n                        \r\n                        [value]=\"trames.value\" checked=\"{{trames.checked}}\" (change)=\"onCheckboxChange($event)\" /></div></div>\r\n                    </div>\r\n                  </div>\r\n                </div>      \r\n              </div>\r\n             </div> \r\n  \r\n  \r\n             <div class=\"row\">\r\n              <div class=\"col-md-12\"><h5 class=\"titolpetit\"></h5>\r\n                <hr class=\"bdott\" />\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-12\">\r\n                    <div class=\"row\" [formGroup]=\"accionFormCheck\">\r\n                      <div class=\"col-6\">\r\n                        \r\n                        <!-- <label for=\"dp\">Fecha fin</label>\r\n                        <div class=\"input-group\">\r\n                          <input\r\n                            class=\"form-control\"\r\n                            ngbDatepicker\r\n                            #d=\"ngbDatepicker\"\r\n                            name=\"fechafin\"\r\n                            formControlName=\"fechafin\"\r\n                            disabled\r\n                            placeholder =  {{mad.fechafin}} \r\n                            readonly\r\n                          />\r\n                          <div class=\"input-group-append\">\r\n                            \r\n                          </div>\r\n                        </div> -->\r\n                      </div>\r\n  \r\n  \r\n  \r\n  \r\n                      <div class=\"col-6\" [formGroup]=\"accionFormCheck\">\r\n                        \r\n                        <!-- <label for=\"repeticiones\">Número de repeticiones</label> \r\n                      \r\n                        <input type=\"number\" class=\"form-control\"  \r\n                        name=\"repeticiones\" \r\n                        formControlName=\"repeticiones\"  \r\n                        disabled\r\n                        />\r\n                       -->\r\n                    \r\n                      </div>\r\n  \r\n  \r\n  \r\n  \r\n                    </div>\r\n                  </div>\r\n                </div>      \r\n              </div> \r\n            </div>\r\n            </div>\r\n  \r\n              <div class=\"col-md-5\"><h5 class=\"titolpetit\">Selección de días</h5>\r\n                <hr class=\"bdott\" />\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-12 m-0 p-0\">\r\n                    <div class=\"row mb-3 p-0 text-center\">\r\n                      <!-- <div class=\"col-12\">\r\n                        <h5 class=\"titolpetit\">{{mesActual | date: 'LLLL'}}</h5>\r\n                      </div> -->\r\n                    </div>\r\n                    <div class=\"row m-0 p-0 checkbox\">\r\n                        <div class=\"col-2  text-center p-0 m-0\" *ngFor=\"let diam of diasMes; let i=index\">\r\n  \r\n                            <input type=\"checkbox\" \r\n                            [value]=\"diam.value\" name=\"checkbox{{diam.value}}\" id=\"checkbox{{diam.value}}\" \r\n                           \r\n                            checked=\"{{diam.checked}}\"  \r\n                            (change)=\"onCheckboxChange($event)\"\r\n                            \r\n                            />\r\n                          \r\n  \r\n                          <label for=\"checkbox{{diam.value}}\">{{diam.name}}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>      \r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12 text-center\"><hr class=\"bdott\" />\r\n                 <button type=\"submit\" class=\"btn btn-info mt-3\">\r\n                  Guardar periodicidad\r\n                </button> \r\n               \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </form>\r\n  \r\n    <script>\r\n      CKEDITOR.replace(\"ibmeditor\", { \r\n      on : {\r\n        // maximize the editor on startup\r\n        'instanceReady' : function( evt ) {\r\n          evt.editor.resize(\"100%\");\r\n        }\r\n      }\r\n    });\r\n    </script>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  ","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router } from '@angular/router';\nimport { DataserviceService } from '../services/dataservice.service';\n\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardGuard implements CanActivate  {\n \n  constructor(private dataService: DataserviceService,private router: Router  ) {}\n \n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    const routeurl: string = state.url;\n    return this.isLogin(routeurl);\n  }\n  isLogin(routeurl: string) {\n    if (this.dataService.isLoggedIn()) {\n      return true;\n    }\n    this.dataService.redirectUrl = routeurl;\n    this.router.navigate(['/login'], {queryParams: { returnUrl: routeurl }} );\n  }\n}\n ","export class ModeloAccionPuntual {\n  id_periodicidad: string;\n  id_categoria: string;\n  id_period_madre: string;\n  fecha: string;\n  id_accion: string;\n  fechafin: string;\n  repeticiones: string;\n  name: string;\n  value: string;\n  id_tarea: string;\n  checked: string;\n  id_persona: string;\n}\n","export class Constantes {\r\n    public static API_SERVER = 'http://joraco.site:8081/b';\r\n    public static nombreTurnos = 'turnos';\r\n  }\r\n  \r\n","export class Issue {\n  id_tarea: string;\n  tarea: string;\n  hora: string;\n  estatus: string;\n  observaciones: string;\n  fecha: string;\n  fechamodi: string;\n  id_categoria: string;\n  id_persona: string;\n  flag_visibilidad: string;\n  prioridad: string;\n  decidecategoria: string;\n\n}\n","export class IssueHistorico {\n\nid_log: string;\nid_tarea: string;\nfecha: string;\nnombres: string;\ndescripcion: string;\ntarea: string;\nid_persona: string;             \n\n}\n","export class ModeloPeriodicidad {\n\n\n  id_periodicidad: string;\n  id_categoria: string;\n  id_period_madre: string;\n  id_tarea: string;\n  value: string;\n  fecha: string;\n  fechafin: string;\n  repeticiones: string;\n  name: string;\n  checked: string;\n\n\n}\n\n","export class PeriodicidadMadre {\n\n    id_period_madre: string;\n    fecha: string;\n    id_tarea: string;\n    value: string;\n    fechafin: string;\n    repeticiones: string;\n\n\n}\n\n","export class Personas {\n  id_persona: string;\n  id_persona_log: string;\n  nombres: string;\n  telefono: string;\n  email: string;\n  direccion: string;\n  registrado: string;\n  id_rol: string;\n  nombre_rol: string;\n  level_rol: string;\n  password: string;\n  imagen: string;\n\n}\n","export class Seguimiento {\n  id_seguimiento: string;\n  id_persona: string;\n  id_tarea: string;\n\n}\n","import {Component, ViewChild} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { ApiService } from '../services/apiregistros.service';\nimport { Issue } from  '../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../models/constantes.model';\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { Router } from '@angular/router';\nimport { Roles } from '../models/roles';\n\nimport { Estados } from '../models/estados';\nimport { Categorias } from '../models/categorias';\nimport { FullCalendarOptions, EventObject } from 'ngx-fullcalendar';\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\n\n\n\n@Component({\n  selector: 'app-alta',\n  templateUrl: './alta.component.html'\n  \n})\n\nexport class AltaComponent {\n\n    model: NgbDateStruct;\n\n    options: FullCalendarOptions;\n   events: EventObject[];\n\n    public Editor = ClassicEditor;\n    public onReady( editor ) {\n        editor.ui.getEditableElement().parentElement.insertBefore(\n            editor.ui.view.toolbar.element,\n            editor.ui.getEditableElement()\n        );\n    }\n    roles: Roles[] = [];\n   // recurrencias: Recurrencias[] = [];\n    estados: Estados [] = [];\n    categorias: Categorias [] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n    personas:Issue[] = [];\n    issue: Issue = new Issue();\n    editing = {};\n    rows = [];\n    temp = [];\n\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n    datoregistro = {\n        id_tarea: null,\n        tarea: null,\n        id_persona: localStorage.getItem('id_persona'),\n        hora: null,\n        estatus: null,\n        observaciones: null,\n        id_categoria:  null,\n        flag_visibilidad:  null,\n        prioridad:  null\n    }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id: any;\n  valor: any;\n  ever: any;\n  datos: string;\n\n  \n  constructor(private httpClient: HttpClient, private apiService: ApiService, private router: Router) {\n\n\n        //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n            this.roles = result;\n          }, error => console.error(error));\n \n\n        //cargo las categorias para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/categorias_read.php').subscribe(result => {\n            this.categorias = result;\n          }, error => console.error(error));                   \n\n\n\n  }\n\n  ngOnInit(){\n\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n    this.router.navigate(['/home']);\n  }\n\n\n  //alta de registro\n  altaRegistro() {\n\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.tarea==null || this.datoregistro.hora==null ){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.tarea,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : true\n          })\n         // ,this.recarga()\n          ;      \n        });\n    }\n  }\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ \"txtNuevoRegistro\" | translate }} \n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-6 pt-5\">\n      <div class=\"form-group\">\n\n\n\n        <input\n        #id_persona=\"ngModel\"\n        name=\"id_persona\"\n        type=\"hidden\"\n        [(ngModel)]=\"datoregistro.id_persona\"\n      />\n\n        <label for=\"tarea\">{{ \"txtTarea\" | translate }}</label>\n        <input\n          required\n          style=\"background-color: white;\"\n          placeholder=\"Resumen tarea\"\n          class=\"form-control form-control-sm\"\n          [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n          #tarea=\"ngModel\"\n          required\n          minlength=\"4\"\n          name=\"tarea\"\n          type=\"text\"\n          [(ngModel)]=\"datoregistro.tarea\"\n        />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <div class=\"form-group 24hr-example\">\n            <label for=\"hora\">{{ \"txtHora\" | translate }}</label>\n            <input\n              required\n              aria-label=\"24hr format\"\n              style=\"background-color: white;\"\n              placeholder=\"00:00\"\n              class=\"form-control form-control-sm reloj\"\n              [class.is-invalid]=\"hora.invalid && hora.touched\"\n              #hora=\"ngModel\"\n              minlength=\"5\"\n              maxlength=\"5\"\n              type=\"text\"\n              [(ngModel)]=\"datoregistro.hora\"\n              [ngxTimepicker]=\"fullTime\"\n              [format]=\"24\"\n              readonly\n            />\n            <ngx-material-timepicker\n              #fullTime\n              [minutesGap]=\"30\"\n            ></ngx-material-timepicker>\n          </div>\n        </div>\n\n        \n    \n<!-- <div class=\"form-group\">\n         \n            <label for=\"id_categoria\">Categoría</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"id_categoria\"\n              placeholder=\"Seleccione categoria\"\n              #id_categoria=\"ngModel\"\n              [(ngModel)]=\"datoregistro.id_categoria\"\n            >\n              <option [ngValue]=\"null\">Seleccione Categoría</option>\n              <option\n                *ngFor=\"let categoria of categorias\"\n                value=\"{{ categoria.id_categoria }}\"\n              >\n                {{ categoria.categoria_name }}\n              </option>\n            </select>\n</div> -->\n\n\n\n\n    \n        <div class=\"col-md-6\">\n            <label for=\"prioridad\">Prioridad</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"prioridad\"\n              placeholder=\"Seleccione prioridad\"\n              #prioridad=\"ngModel\"\n              [(ngModel)]=\"datoregistro.prioridad\"\n            >\n              <option [ngValue]=\"null\" selected>Seleccione prioridad</option>\n              <option value=\"alta\">Alta</option>\n              <option value=\"media\">Media</option>\n              <option value=\"baja\">Baja</option>\n            </select>\n        </div>\n        <div class=\"col-md-2\"></div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <!-- <div class=\"form-group\">\n            <label for=\"tarea\">Asignar persona</label>\n            <input\n              required\n              style=\"background-color: white;\"\n              placeholder=\"Resumen tarea\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n              #tarea=\"ngModel\"\n              required\n              minlength=\"4\"\n              name=\"tarea\"\n              type=\"text\"\n              [(ngModel)]=\"datoregistro.tarea\"\n            />\n          </div> -->\n        </div>\n        <div class=\"col-md-4\">\n\n            \n<!-- \n\n            <div class=\"form-group\">\n                <label for=\"id_recurrencia\">Recurrencia</label>\n                <select\n                  required\n                  style=\"background-color: white;\"\n                  class=\"form-control form-control-sm\"\n                  name=\"id_recurrencia\"\n                  #estatus=\"ngModel\"\n                  [(ngModel)]=\"datoregistro.id_recurrencia\"\n                >\n                  <option [ngValue]=\"null\">Seleccione recurrencia</option>\n                  <option\n                    *ngFor=\"let recurrencia of recurrencias\"\n                    value=\"{{ recurrencia.id_recurrencia }}\"\n                  >\n                    {{ recurrencia.recurrencia_name }}\n                  </option>\n                </select>\n              </div>\n\n -->\n\n\n\n\n\n        </div>\n        <div class=\"col-md-4\">\n          <div *ngIf=\"datoregistro.id_categoria === '3'\">\n            <label for=\"dp\">Fecha fin acción</label>\n            <div class=\"input-group\">\n              <input\n                class=\"form-control\"\n                placeholder=\"yyyy-mm-dd\"\n                name=\"dp\"\n                [(ngModel)]=\"model\"\n                ngbDatepicker\n                #d=\"ngbDatepicker\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  class=\"btn btn-outline-secondary calendar\"\n                  (click)=\"d.toggle()\"\n                  type=\"button\"\n                ></button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-4\">\n\n        </div>\n        <div class=\"col-4\"></div>\n        <div class=\"col-4\"></div>\n      </div>\n    </div>\n    <div class=\"col-md-6 pt-5\">\n      <div class=\"form-group\">\n        <label for=\"observaciones\">{{ \"txtObservaciones\" | translate }}</label>\n\n        <ckeditor\n          (ready)=\"onReady($event)\"\n          rows=\"10\"\n          placeholder=\"Observaciones\"\n          #observaciones=\"ngModel\"\n          maxlength=\"2000\"\n          name=\"observaciones\"\n          [(ngModel)]=\"datoregistro.observaciones\"\n          [editor]=\"Editor\"\n          data=\"\"\n        ></ckeditor>\n      </div>\n\n      <div class=\"form-group text-center\">\n        <button (click)=\"altaRegistro()\" class=\"btn btn-primary colortopacio\">\n          {{ \"txtAgregar\" | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-configuracion',\r\n    templateUrl: './configuracion.pages.html'\r\n})\r\n\r\nexport class ConfiguracionPage {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"page-content\" id=\"content\">\r\n  <app-header></app-header>\r\n  <app-menu></app-menu>\r\n\r\n  \r\n  <div class=\"row m-2\">\r\n    <div class=\"col-md-12 mt-4\">\r\n      <h3>Configuración</h3>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\"><a [routerLink]=\"['/', 'home']\">Home</a></li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">Configuración</li>\r\n        </ol>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n  <div class=\"row m-2 mt-4\">\r\n    <div class=\"col-md-12 \">\r\n      <table class=\"table table-hover table-sm \">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Acciones\r\n            </th>\r\n            <th>\r\n              categoria\r\n            </th>\r\n            <th>\r\n              recurrencia\r\n            </th>\r\n            <th>\r\n              Status\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr class=\"table-active\">\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-descarga',\r\n    templateUrl: './descarga.pages.html'\r\n})\r\n\r\nexport class DescargaPage {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"page-content\" id=\"content\">\r\n  <app-header></app-header>\r\n  <app-menu></app-menu>\r\n\r\n  \r\n  <div class=\"row m-2\">\r\n    <div class=\"col-md-12 mt-4\">\r\n      <h3>Descarga</h3>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\"><a [routerLink]=\"['/', 'home']\">Home</a></li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">Descarga</li>\r\n        </ol>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n  <div class=\"row m-2 mt-4\">\r\n    <div class=\"col-md-12 \">\r\n      <table class=\"table table-hover table-sm \">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Acciones\r\n            </th>\r\n            <th>\r\n              categoria\r\n            </th>\r\n            <th>\r\n              recurrencia\r\n            </th>\r\n            <th>\r\n              Status\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr class=\"table-active\">\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <app-footer></app-footer>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../models/issue';\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Roles } from '../models/roles';\nimport { Recurrencias } from '../models/recurrencias';\nimport { Estados } from '../models/estados';\nimport { Categorias } from '../models/categorias';\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\n@Component({\n  selector: 'app-detalle',\n  templateUrl: './detalle.component.html'\n  \n})\n\n\n\nexport class DetalleComponent implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:Issue = new Issue();\n  dregistroa:Issue = new Issue();\n  registropersona:Seguimiento = new Seguimiento();\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  id_categoria: string;\n  periodetalle: any[];\n  categoperiod: any;\n  periodcate: any;\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n  roles: Roles[] = [];\n    recurrencias: Recurrencias[] = [];\n    estados: Estados [] = [];\n    categorias: Categorias [] = [];\n    personas: Personas [] = [];\n    suscripcion: Seguimiento[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n    datoregistro = {\n      id_seguimiento: null,\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\n      id_persona: null,\n      id_persona_log: localStorage.getItem('id_persona')\n    }\n  constructor(private httpClient: HttpClient,private registroService: DetalleService,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n\n                this.dias = [\n                  {name:'OptionA', value:'first_opt', checked:true},\n                  {name:'OptionB', value:'second_opt', checked:false},\n                  {name:'OptionC', value:'third_opt', checked:true}\n                 ];\n \n\n                \n\n        //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n      //cargo los estados para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/estados_read.php').subscribe(result => {\n          this.estados = result;\n        }, error => console.error(error));\n       //cargo las recurrencias para los combos select\n       httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/recurrencias_read.php').subscribe(result => {\n          this.recurrencias = result;\n        }, error => console.error(error));\n      //cargo las categorias para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/categorias_read.php').subscribe(result => {\n          this.categorias = result;\n        }, error => console.error(error));    \n      //cargo las personas para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n        this.personas = result;\n      }, error => console.error(error));   \n     //cargo el listado de personas para esta ID tarea\n     httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_suscritas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n      this.suscripcion = result;\n      console.log(this.datoregistro.id_tarea);\n     }, error => console.error(error));\n\n\n\n\n\n\n\n  }\n\n  ngOnInit(){\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id_tarea');\n    this.registroService.getPerson ( id_tarea )\n      .subscribe( (respuesta:Issue) => {\n         this.registro = respuesta;\n         this.registro.id_tarea =   id_tarea;\n         this.registro.id_persona = localStorage.getItem('id_persona');\n\n      \n     //cargo el listado periodicidades de esta tarea para verificar a que categoria pertenecen y mostrar un combo u otro\n     this.httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n      this.periodetalle = result[0];\n     if(undefined == this.periodetalle){\n      this.registro.decidecategoria = '0'; \n      console.log(\"esta es la period:\");\n     } else {\n      this.periodcate = this.periodetalle['id_categoria'];\n      this.registro.decidecategoria = this.periodcate; \n      console.log(\"esta es la period:\" ,this.periodcate);\n     }   \n    }, error => console.error(error));\n\n\n\n\n\n\n\n\n\n\n\n\n      });\n\n  }\n\n\n  recarga(){ \n    location.reload();\n  }\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  guardarregistro( form: NgForm){\n     if(this.registro.tarea=='' || this.registro.hora=='' || this.registro.estatus=='' ){\n      Swal.fire({\n        text: 'Los campos obligatorios no pueden quedar vacíos',\n        icon: 'error',  \n        showConfirmButton : true\n      }); \n     } else {\n      var patronHora = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n      var horaResult = patronHora.test(this.registro.hora);\n\n      if(horaResult==false){\n        Swal.fire({\n          text: 'El campo Hora debe cumplir con el formato adecuado',\n          icon: 'error',  \n          showConfirmButton : true\n        });\n      } else {\n        let peticion: Observable<any>;\n        peticion = this.registroService.actualizarRegistro(this.registro);\n        peticion.subscribe( respuesta => {\n          Swal.fire({\n            title: this.registro.tarea,\n            text: 'Registro modificado',\n            icon: 'success',  \n            showConfirmButton : true\n          }),this.recarga();  \n         \n        });\n\n      }\n\n    }\n\n  }\n\n\n\n\n\n  guardarseguimiento(){\n\n    if(this.datoregistro.id_persona==null){\n     Swal.fire({\n       text: 'Debe seleccionar a alguien!',\n       icon: 'error',  \n       showConfirmButton : true\n     }); \n    \n    } else {\n\n       let peticion: Observable<any>;\n       peticion = this.registroService.actualizarRegistroSeguimiento(this.datoregistro);\n       peticion.subscribe( respuesta => {\n         Swal.fire({\n           title: this.datoregistro.id_persona,\n           text: 'Persona asignada',\n           icon: 'success',  \n           showConfirmButton : false\n         }),this.recarga();  \n       });\n\n\n   }\n }\n\n\n\n\n   //eliminar registro      \n   eliminarpersona ( registro: Seguimiento, i:string){\n\n    Swal.fire({\n        title: `¿Desea elimina a esta persona del seguimiento?`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n      console.log(\"id seguimiento: \",registro.id_seguimiento);\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"id_seguimiento\": registro.id_seguimiento });\n            this.registroService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.id_seguimiento,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n// registro: any = {};\n\n\n//   constructor( private activatedRoute: ActivatedRoute, \n//                private _registroService: registrosService \n//                ) {\n\n//     this.activatedRoute.params.subscribe ( params => {\n//       this.registro = this._registroService.getPerson( params['id'] );\n//     })\n\n//    }\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.tarea }} - #{{ registro.id_tarea }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <form (ngSubmit)=\"guardarregistro(f)\" #f=\"ngForm\">\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.fecha | date: \"dd/MM/y HH:mm\"\n          }}</em>\n          | {{ \"txtUltimaModificacion\" | translate }}:\n          <em class=\"text-muted\" *ngIf=\"registro.fechamodi == null\"\n            >nunca modificado</em\n          >\n          <em class=\"text-muted\">{{\n            registro.fechamodi | date: \"dd/MM/y HH:mm\"\n          }}</em>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-7 alturaminima mb-5\">\n        <input\n          type=\"hidden\"\n          class=\"form-control\"\n          name=\"id_tarea\"\n          readonly\n          [(ngModel)]=\"registro.id_tarea\"\n        />\n\n\n        <input\n        #id_persona=\"ngModel\"\n        name=\"id_persona\"\n        type=\"hidden\"\n        [(ngModel)]=\"registro.id_persona\"\n      />\n\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group\">\n              <label for=\"tarea\">\n                {{ \"txtTarea\" | translate }}\n              </label>\n              <input\n                name=\"tarea\"\n                required\n                class=\"form-control form-control-sm\"\n                [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n                #tarea=\"ngModel\"\n                minlength=\"4\"\n                type=\"text\"\n                [(ngModel)]=\"registro.tarea\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"hora\">\n                {{ \"txtHora\" | translate }}\n              </label>\n              <input\n                name=\"hora\"\n                required\n                id=\"reloj\"\n                style=\"background-color: white;\"\n                placeholder=\"00:00\"\n                class=\"form-control form-control-sm hora\"\n                [class.is-invalid]=\"hora.invalid && hora.touched\"\n                #hora=\"ngModel\"\n                pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n                minlength=\"5\"\n                maxlength=\"5\"\n                type=\"text\"\n                [(ngModel)]=\"registro.hora\"\n                [ngxTimepicker]=\"fullTime\"\n                [format]=\"24\"\n                readonly\n              />\n\n              <ngx-material-timepicker\n                #fullTime\n                [minutesGap]=\"30\"\n              ></ngx-material-timepicker>\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"estatus\">\n                {{ \"txtStatus\" | translate }}\n              </label>\n\n              <select\n                required\n                class=\"form-control form-control-sm\"\n                name=\"estatus\"\n                [class.is-invalid]=\"estatus.invalid && estatus.touched\"\n                #estatus=\"ngModel\"\n                [(ngModel)]=\"registro.estatus\"\n                ><option value=\"{{ registro.estatus }}\" selected>{{\n                  registro.estatus\n                }}</option>\n                <option value=\"OK\">OK</option>\n                <option value=\"KO\">KO</option>\n                <option value=\"OK-INC\">OK-INC</option>\n                <option value=\"PENDIENTE\">PENDIENTE</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"id_categoria\">Categoría</label>\n              <select\n                required\n                style=\"background-color: white;\"\n                class=\"form-control form-control-sm\"\n                name=\"id_categoria\"\n                #id_categoria=\"ngModel\"\n                [(ngModel)]=\"registro.id_categoria\"\n              >\n\n              <option\n              *ngFor=\"let categoria of categorias\"\n              value=\"{{ categoria.id_categoria }}\"\n              >\n              {{ categoria.categoria_name }}\n              </option>\n\n              </select>\n            </div>\n          </div>\n        </div>\n<!--acciones variables-->\n        <div class=\"row\">\n          <div class=\"col-md-12 mb-3\">\n\n          <div *ngIf=\"registro.decidecategoria != ''\">\n                      <!--accion puntual-->\n                      <div *ngIf=\"registro.id_categoria === '3'\">\n                        <div *ngIf=\"registro.decidecategoria === '3'\"><app-accion></app-accion></div>\n                      </div>\n                      <!--/end accion puntual-->\n                      <!--check-->\n                      <div *ngIf=\"registro.id_categoria === '1'\">\n                        <div *ngIf=\"registro.decidecategoria === '1'\"><app-check></app-check></div>\n                      </div>\n                      <!--end check-->\n          </div>\n          <div *ngIf=\"registro.decidecategoria === '0' \">\n                      <!--accion puntual-->\n                      <div *ngIf=\"registro.id_categoria === '3'\">\n                        <app-accion></app-accion>\n                      </div>\n                      <!--/end accion puntual-->\n                      <!--check-->\n                      <div *ngIf=\"registro.id_categoria === '1'\">\n                        <app-check></app-check>\n                      </div>\n                      <!--end check-->\n          </div>\n\n\n          </div>  \n        </div>\n<!--/end acciones variables-->\n        <div class=\"row\">\n          <div class=\"col-4\">\n            <label for=\"prioridad\">Prioridad</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"prioridad\"\n              placeholder=\"Seleccione prioridad\"\n              #prioridad=\"ngModel\"\n              [(ngModel)]=\"registro.prioridad\"\n            >\n              <option [ngValue]=\"null\" selected>Seleccione prioridad</option>\n              <option value=\"alta\">Alta</option>\n              <option value=\"media\">Media</option>\n              <option value=\"baja\">Baja</option>\n            </select>\n          </div>\n          <div class=\"col-4\"></div>\n          <div class=\"col-4\"></div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12 mt-3 mb-3\">\n            <hr />\n\n            <div class=\"row\">\n              <div class=\"col-10 mt-2 mb-2 pt3 pb3\">\n                <h5 class=\"titolpetit\">\n                  Personas que participan en el seguimiento\n                </h5>\n              </div>\n              <div class=\"col-2 mt-2 mb-2 text-right\">\n                <a\n                  alt=\"Asignar nueva persona de seguimiento\"\n                  title=\"Asignar nueva persona de seguimiento\"\n                  (click)=\"open(content)\"\n                  class=\"altaseguimiento\"\n                  ><i class=\"fa fa-plus fa-1\"></i\n                ></a>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div\n                class=\"col-12 mt-1 mb-1 pb1 pt1\"\n                *ngFor=\"let suscripcio of suscripcion\"\n              >\n                <div class=\"row\">\n                  <div class=\"col-4\">\n                    {{ suscripcio.id_seguimiento }} - {{ suscripcio.nombres }}\n                  </div>\n                  <div class=\"col-4\">{{ suscripcio.email }}</div>\n                  <div class=\"col-2\">{{ suscripcio.rol_name }}</div>\n                  <div class=\"col-2 text-right\">\n                    <a\n                      alt=\"Eliminar persona de seguimiento\"\n                      title=\"Eliminar persona de seguimiento\"\n                      (click)=\"eliminarpersona(suscripcio, i)\"\n                      class=\"altaseguimiento\"\n                      ><i class=\"fa fa-trash\"></i\n                    ></a>\n                  </div>\n                </div>\n\n                <hr class=\"bdott\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group text-center\">\n              <button type=\"submit\" class=\"btn btn-info mr-2\">\n                {{ \"txtModificar\" | translate }}\n              </button>\n              <button [routerLink]=\"['/home']\" class=\"btn btn-warning\">\n                {{ \"txtVolver\" | translate }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-5 alturaminima mb-5\">\n        <div class=\"form-group\">\n          <label for=\"observaciones\">{{\n            \"txtObservaciones\" | translate\n          }}</label>\n          <ckeditor\n          [config]=\"{ toolbar: [ 'link', '|', 'bold', 'italic' ] }\"\n            (ready)=\"onReady($event)\"\n            id=\"ibmeditor\"\n            placeholder=\"Observaciones\"\n            #observaciones=\"ngModel\"\n            maxlength=\"2000\"\n            name=\"observaciones\"\n            [(ngModel)]=\"registro.observaciones\"\n            [editor]=\"Editor\"\n            data=\"\"\n          ></ckeditor>\n        </div>\n      </div>\n    </div>\n  </form>\n\n  <ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Seguimiento de la issue\n      </h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <input\n          name=\"id_tarea\"\n          type=\"hidden\"\n          #id_tarea=\"ngModel\"\n          [(ngModel)]=\"datoregistro.id_tarea\"\n        />\n        <input\n          name=\"id_persona_log\"\n          type=\"hidden\"\n          #id_persona_log=\"ngModel\"\n          [(ngModel)]=\"datoregistro.id_persona_log\"\n        />\n\n        \n        <label for=\"id_persona\"\n          >Seleccione la persona para designarle el seguimiento</label\n        >\n        <div class=\"input-group\">\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm\"\n            name=\"id_persona\"\n            placeholder=\"Seleccione persona\"\n            #id_persona=\"ngModel\"\n            [(ngModel)]=\"datoregistro.id_persona\"\n          >\n            <option [ngValue]=\"null\">Seleccione persona</option>\n            <option\n              *ngFor=\"let persona of personas\"\n              value=\"{{ persona.id_persona }}\"\n            >\n              {{ persona.nombres }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button (click)=\"guardarseguimiento()\" class=\"btn btn-info\">\n        Añadir persona\n      </button>\n    </div>\n  </ng-template>\n\n  <app-footer></app-footer>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../models/issue';\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Roles } from '../models/roles';\nimport { Recurrencias } from '../models/recurrencias';\nimport { Estados } from '../models/estados';\nimport { Categorias } from '../models/categorias';\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\nimport { DetalleHistoricoService } from '../services/detallehistorico.service';\nimport { IssueHistorico } from '../models/issuehistorico';\n@Component({\n  selector: 'app-detallehistorico',\n  templateUrl: './detallehistorico.component.html'\n  \n})\n\n\n\nexport class DetalleHistoricoComponent implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:IssueHistorico = new IssueHistorico();\n  registropersona:Seguimiento = new Seguimiento();\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n  roles: Roles[] = [];\n    recurrencias: Recurrencias[] = [];\n    estados: Estados [] = [];\n    categorias: Categorias [] = [];\n    personas: Personas [] = [];\n    suscripcion: Seguimiento[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n    datoregistro = {\n      id_seguimiento: null,\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\n      id_persona: null\n    }\n  constructor(private httpClient: HttpClient,private registroService: DetalleHistoricoService,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n\n\n        //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n      //cargo los estados para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/estados_read.php').subscribe(result => {\n          this.estados = result;\n        }, error => console.error(error));\n       //cargo las recurrencias para los combos select\n       httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/recurrencias_read.php').subscribe(result => {\n          this.recurrencias = result;\n        }, error => console.error(error));\n      //cargo las categorias para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/categorias_read.php').subscribe(result => {\n          this.categorias = result;\n        }, error => console.error(error));        \n      //cargo las personas para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n        this.personas = result;\n      }, error => console.error(error));   \n     //cargo el listado de personas para esta ID tarea\n     httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_suscritas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n      this.suscripcion = result;\n     }, error => console.error(error));\n\n\n\n\n              }\n\n  ngOnInit(){\n    const id_log = this.activatedRoute.snapshot.paramMap.get('id_log');\n    this.registroService.getDetalleHistorico ( id_log )\n      .subscribe( (respuesta:IssueHistorico) => {\n         this.registro = respuesta;\n         this.registro.id_log =   id_log;\n    \n      });\n\n  }\n\n\n  recarga(){ \n    location.reload();\n  }\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n   //eliminar registro      \n   eliminarpersona ( registro: Seguimiento, i:string){\n\n    Swal.fire({\n        title: `¿Desea elimina a esta persona del seguimiento?`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n      console.log(\"id seguimiento: \",registro.id_seguimiento);\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"id_seguimiento\": registro.id_seguimiento });\n            this.registroService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.id_seguimiento,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>Histórico de Logs</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.tarea }} - #{{ registro.id_log }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.fecha | date: \"dd/MM/y HH:mm\"\n          }}</em>\n          \n         \n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-7 alturaminima mb-5\">\n        <input\n          type=\"hidden\"\n          class=\"form-control\"\n          name=\"id_log\"\n          readonly\n          [(ngModel)]=\"registro.id_log\"\n        />\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group\">\n              <label for=\"tarea\">\n                {{ \"txtTarea\" | translate }}\n              </label>\n              <input\n                name=\"tarea\"\n                required\n                class=\"form-control form-control-sm\"\n                [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n                #tarea=\"ngModel\"\n                minlength=\"4\"\n                type=\"text\"\n                [(ngModel)]=\"registro.tarea\"\n                disabled\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"nombres\">\n                Usuario\n              </label>\n              <input\n                name=\"nombres\"\n                required\n              \n                style=\"background-color: white;\"\n        \n                class=\"form-control form-control-sm\"\n              \n                #nombres=\"ngModel\"\n    \n                type=\"text\"\n                [(ngModel)]=\"registro.nombres\"\n             readonly\n                disabled\n              />\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"id_persona\">\n                Usuario creado\n              </label>\n              <input\n                name=\"id_persona\"\n                required\n              \n                style=\"background-color: white;\"\n        \n                class=\"form-control form-control-sm\"\n              \n                #id_persona=\"ngModel\"\n    \n                type=\"text\"\n                [(ngModel)]=\"registro.id_persona\"\n             readonly\n                disabled\n              />\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n       \n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-12 mb-3\" >\n \n          </div>  \n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-4\"></div>\n          <div class=\"col-4\"></div>\n          <div class=\"col-4\"></div>\n        </div>\n\n  \n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group text-center\">\n              <!-- <button type=\"submit\" class=\"btn btn-info mr-2\">\n                {{ \"txtModificar\" | translate }}\n              </button> -->\n              <button [routerLink]=\"['/historico']\" class=\"btn btn-warning\">\n                {{ \"txtVolver\" | translate }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-5 alturaminima mb-5\">\n        <div class=\"form-group\">\n          <label for=\"observaciones\">{{\n            \"txtObservaciones\" | translate\n          }}</label>\n          <textarea\n            #descripcion=\"ngModel\"\n    class=\"form-control\"\n    rows=\"10\"\n            name=\"observaciones\"\n            [(ngModel)]=\"registro.descripcion\"\n\n            disabled\n          ></textarea>\n        </div>\n      </div>\n    </div>\n \n\n \n\n  <app-footer></app-footer>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\nimport { DetalleHistoricoService } from '../services/detallehistorico.service';\nimport { ApiPersonas } from '../services/apipersonas.service';\nimport { Roles } from '../models/roles';\n@Component({\n  selector: 'app-detallepersona',\n  templateUrl: './detallepersona.component.html'\n  \n})\n\n\n\nexport class DetallePersona implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:Personas = new Personas();\n\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n\n    personas: Personas [] = [];\n    roles: Roles[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n\n    fieldTextType: boolean;\n    datoregistro = {\n      id_persona: this.activatedRoute.snapshot.paramMap.get('id_persona'),\n      id_persona_log: localStorage.getItem('id_persona'),\n      nombres: null,\n      telefono: null,\n      email:  null,\n      direccion: null,\n      registrado: null,\n      id_rol: null,\n      password:  null,\n      imagen:  null\n    }\n\n    \n\n  constructor(private httpClient: HttpClient,private registroService: ApiPersonas,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n       //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n\n              }\n\n\n\n  ngOnInit(){\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona');\n \n    this.registroService.getPerson ( id_persona )\n      .subscribe( (respuesta:Personas) => {\n         this.registro = respuesta;\n         this.registro.id_persona =   id_persona;\n\n      });\n\n  }\n\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  recarga(){ \n    location.reload();\n  }\n\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  \n\n\n\n  //alta de registro\n  altaRegistro() {\n\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.nombres==null || this.datoregistro.email==null || this.datoregistro.id_rol==null || this.datoregistro.password==null){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos obligatorios no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.registroService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.nombres,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : false\n          }),this.recarga();      \n        });\n    }\n  }\n\n  \n\n\n  guardarregistro( ){\n    console.log(this.registro);\n    if(\n      this.registro.nombres=='' || \n      this.registro.telefono=='' || \n      this.registro.email=='' || \n      this.registro.password=='' ||\n      this.registro.direccion=='' ||\n      this.registro.id_rol=='' \n      ){\n     Swal.fire({\n       text: 'Los campos obligatorios no pueden quedar vacíos',\n       icon: 'error',  \n       showConfirmButton : true\n     }); \n    }  else {\n            //validacion email      \n            var patronEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/;\n            var emailResult = patronEmail.test(this.registro.email);\n            if(emailResult==false){\n              Swal.fire({\n                text: 'El campo E-mail debe cumplir con el formato adecuado',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else \n            // validacion password\n            // al menos 1 número, una minúscula y una mayuscula\n            // al menos 6 carácteres\n            var patronPassword = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/;\n            var passwordResult = patronPassword.test(this.registro.password);\n            if(passwordResult==false){\n              Swal.fire({\n                text: 'El campo Password debe tener al menos 1 número, una minúscula y una mayúscula y como mínimo 6 carácteres',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else {\n              let peticion: Observable<any>;\n              peticion = this.registroService.actualizarRegistro(this.registro);\n              peticion.subscribe( respuesta => {\n                Swal.fire({\n                  title: this.registro.nombres,\n                  text: 'Registro modificado',\n                  icon: 'success',  \n                  showConfirmButton : false\n                }),this.recarga();  \n              });\n            }\n\n   }\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.nombres }} - #{{ registro.id_persona }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.registrado | date: \"dd/MM/y HH:mm\"\n          }}</em>\n         \n          \n          \n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-2 alturaminima mb-5\">\n       \n\n\n\n\n<app-modimagen></app-modimagen>\n\n\n\n\n\n\n\n      </div>\n\n        <div class=\"col-md-10 alturaminima mb-5\">\n\n\n\n        <div class=\"form-group\">\n          <label for=\"nombres\">{{ \"txtNombres\" | translate }}</label>\n          <input\n            required\n            style=\"background-color: white;\"\n            placeholder=\"{{ 'txtNombres' | translate }}\"\n            class=\"form-control form-control-sm\"\n            [class.is-invalid]=\"nombres.invalid && nombres.touched\"\n            #nombres=\"ngModel\"\n            required\n            minlength=\"4\"\n            name=\"nombres\"\n            type=\"text\"\n            [(ngModel)]=\"registro.nombres\"\n          />\n        </div>\n  \n\n\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"txtEmail\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtEmail' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"email.invalid && email.touched\"\n              #email=\"ngModel\"\n              required\n              [email]=\"true\"\n              name=\"email\"\n              type=\"email\"\n              [(ngModel)]=\"registro.email\"\n            />\n          </div>\n  </div>\n  <div class=\"col-md-4\">       \n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"txtPassword\" | translate }}</label>\n            <div class=\"input-group\">\n            <input\n              required\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtPassword' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"password.invalid && password.touched\"\n              #password=\"ngModel\"\n              required\n              name=\"password\"\n              type=\"password\"\n              [(ngModel)]=\"registro.password\"\n              [type]=\"fieldTextType ? 'text' : 'password'\"\n            />\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\">\n                <i\n                class=\"fa\"\n                [ngClass]=\"{\n                  'fa-eye-slash': !fieldTextType,\n                  'fa-eye': fieldTextType\n                }\"\n                (click)=\"toggleFieldTextType()\"\n              ></i>\n              </span>\n           </div>\n          </div>\n</div>\n</div>    \n<div class=\"col-md-4\">\n  <div class=\"form-group\">\n    <label for=\"telefono\">{{ \"txtTelefono\" | translate }}</label>\n    <input\n      style=\"background-color: white;\"\n      placeholder=\"{{ 'txt9digitos' | translate }}\"\n      class=\"form-control form-control-sm\"\n      #telefono=\"ngModel\"\n      minlength=\"9\"\n      name=\"telefono\"\n      type=\"text\"\n      [(ngModel)]=\"registro.telefono\"\n    />\n  </div>\n</div>\n\n\n</div>\n<div class=\"row\">\n<div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"direccion\">{{ \"txtDireccion\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtDireccion' | translate }}\"\n              class=\"form-control form-control-sm\"\n              #direccion=\"ngModel\"\n              name=\"direccion\"\n              type=\"text\"\n              [(ngModel)]=\"registro.direccion\"\n            />\n          </div>\n\n</div>\n<div class=\"col-md-6\">\n\n\n        <div class=\"form-group\">\n          <label for=\"id_rol\">{{ \"txtRol\" | translate }}</label>\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm\"\n            name=\"id_rol\"\n           \n            [class.is-invalid]=\"id_rol.invalid && id_rol.touched\"\n            #id_rol=\"ngModel\"\n            [(ngModel)]=\"registro.id_rol\"\n          >\n          <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\n            {{rol.rol_name}}\n          </option>\n          </select>\n        </div>\n</div>\n</div>\n        <div class=\"form-group text-center\">\n           <button (click)=\"guardarregistro()\" class=\"btn btn-primary colortopacio\">\n            {{ \"txtModificar\" | translate }}\n          </button> \n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    </div>\n \n\n \n\n  <app-footer></app-footer>\n</div>\n","import {Component, ViewChild} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../models/constantes.model';\nimport { HistoricoService } from '../services/historico.service';\n\n@Component({\n  selector: 'app-historico',\n  templateUrl: './historico.component.html'\n  \n})\n\nexport class HistoricoComponent {\n   \n  personas:Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_log: null,\n    fecha: null,\n    tarea: null,\n    issueg: null,\n    descripcion_accion: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_log: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  \n  constructor(private httpClient: HttpClient, private historicoService: HistoricoService) {\n        this.fetch(data => {\n          // cache\n            this.temp = [...data];\n            this.rows = data;\n        });\n\n\n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit(){\n    this.fetch(data => {\n        this.temp = [...data];\n        this.rows = data;\n      });\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n      location.reload();\n  }\n\n  //cargamos el listado\n  fetch(cb) {\n    if(cb){\n      const req = new XMLHttpRequest();\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/read_historico.php`);\n      req.onload = () => {\n        cb(JSON.parse(req.response));\n        console.log(JSON.parse(req.response));\n      };\n      req.send();\n    }\n  }\n\n\n\n\n   //eliminar registro      \n   borrarRegistro ( registro: Issue, i:string){\n\n    Swal.fire({\n        title: `¿Desea borrar el registro histórico ${registro.tarea}`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"tarea\": registro.tarea, \"id_tarea\": registro.id_tarea });\n            this.historicoService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.tarea,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function(d) {\n      return  d.tarea.toLowerCase().indexOf(val) !== -1 || d.fecha.toLowerCase().indexOf(val) !== -1|| d.nombres.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Historial {{ \"txtRegistros\" | translate }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2 mt-4\">\n    <div class=\"col-md-12 alturaminima mb-5\">\n\n<div class=\"row\">\n  <div class=\"col-6\">\n    <div class=\"form\">\n      <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n        <input\n          matInput\n          #filter\n          placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\n          (keyup)=\"updateFilter($event)\"\n        />\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"col-6 text-right\">\n  </div>\n</div>\n\n      <ngx-datatable\n        #mydatatable\n        class=\"material striped\"\n        headerHeight=\"50\"\n        [limit]=\"15\"\n        [columnMode]=\"'force'\"\n        footerHeight=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"id_log\" [maxWidth]=\"90\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <div class=\"text-center\">{{ row.id_log }}</div>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Fecha\" [maxWidth]=\"200\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n              {{ value | slice: 0:90 }}\n\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Tarea\" [maxWidth]=\"1010\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n\n              {{ value | slice: 0:90 }}\n           \n          \n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Nombres\" [maxWidth]=\"210\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n           \n              {{ value }}\n            \n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Descripcion\" [maxWidth]=\"390\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-row=\"row\"\n            let-value=\"value\"\n          >\n\n                {{ value }}\n\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"ver\" [maxWidth]=\"80\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-row=\"row\"\n          >\n            <div class=\"text-center\">\n              <div class=\"row\">\n                <div class=\"col-12 p0 m0\">\n                  <a\n                    [routerLink]=\"['/detallehistorico', row.id_log]\"\n                    class=\"btn btn-warning botonsizes mr-1\"\n                    ><i class=\"fa fa-eye\"></i\n                  ></a>\n              \n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n\n\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","import {Component, ViewChild} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { ApiService } from '../services/apiregistros.service';\nimport { Issue } from  '../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../models/constantes.model';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-app',\n  templateUrl: './home.component.html'\n  \n})\n\nexport class HomeComponent {\n   \n  personas:Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_tarea: null,\n    tarea: null,\n    issueg: null,\n    hora: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_tarea: any;\n  id_persona: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n\n\n  my_messages = {\n    'emptyMessage': '',\n    'totalMessage': ''\n  };\n \n \n  constructor(private translate: TranslateService,private httpClient: HttpClient, private apiService: ApiService) {\n        this.fetch(data => {\n          // cache\n            this.temp = [...data];\n            this.rows = data;\n        });\n\n        translate.get('Total', {value: 'eeeeeeeeee'})\n        .subscribe((res: string) => this.my_messages.totalMessage = res);\n        translate.get('No hay resultados para mostrar', {value: ''})\n        .subscribe((res: string) => this.my_messages.emptyMessage = res);\n\n\n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit(){\n    this.fetch(data => {\n        this.temp = [...data];\n        this.rows = data;\n      \n      });\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n      location.reload();\n  }\n\n\n\n\n\n\n  //cargamos el listado\n  fetch(cb) {\n    if(cb){\n      const id_persona = localStorage.getItem('id_persona');\n      const valorTurno = localStorage.getItem('valorTurno');\n      const req = new XMLHttpRequest();\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/registro_read.php?id_persona=${id_persona}&valorturno=${valorTurno}`);\n      req.onload = () => {\n        cb(JSON.parse(req.response));\n\n      };\n      req.send();\n    }\n  }\n\n\n\n\n\n\n\n\n\n  //alta de registro\n  altaRegistro() {\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.tarea==null || this.datoregistro.hora==null || this.datoregistro.estatus==null){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.tarea,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : false\n          }),this.recarga();      \n        });\n    }\n  }\n\n  //actualización campos inline\n  updateValue(event, cell, rowIndex) {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n    this.campo = cell;\n    this.id_tarea = event.target.title;\n    const id_persona = localStorage.getItem('id_persona');\n    this.valor = event.target.value;\n    this.ever = id_persona,this.campo,this.id_tarea,this.valor;\n    this.datos = JSON.stringify({ \"id_persona\": id_persona,\"campo\": this.campo, \"id_tarea\": this.id_tarea, \"valor\": this.valor });\n    \n    //validacion del formato de la hora\n    var patronHora = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n    var horaResult = patronHora.test(this.valor);\n\n    //si el campo que recibo es hora...\n    if(this.campo == \"hora\"){\n      //...valido su formato\n      if(horaResult==false){\n        Swal.fire({\n          title: 'Revise los datos',\n          text: 'El campo \"hora\" debe de cumplir con los requerimientos!!',\n          icon: 'error',\n        }); \n        this.ngOnInit();  \n      } \n      // else {\n      //   Swal.fire({\n      //     text: 'Registro actualizado',\n      //     icon: 'success',  \n      //     showConfirmButton : false\n      //   })\n      // }\n    }\n    //el campo que recibo es tarea pero es menor de 3 caracteres\n    else if(this.campo == \"tarea\" && this.valor.length < 3){\n       \n          Swal.fire({\n            title: 'Revise los datos',\n            text: 'El campo \"tarea\" debe contener como mínimo tres carácteres!!',\n            icon: 'error',\n          });   \n          this.ngOnInit();  \n             \n    } else {\n      //todo Ok llamo al servicio\n      this.apiService.modiRegistro(this.datos).subscribe(\n        datos => {\n          Swal.fire({\n            text: 'Registro actualizado',\n            icon: 'success',  \n            showConfirmButton : false\n          })\n      \n        });\n    }\n\n  }\n\n\n   //eliminar registro      \n   borrarRegistro ( registro: Issue, i:string){\n\n    Swal.fire({\n        title: `¿Desea borrar el registro ${registro.tarea}`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n        if ( respuesta.value ) {\n            const id_persona = localStorage.getItem('id_persona');\n            this.datosborrado = JSON.stringify({ \"id_persona\": id_persona, \"id_tarea\": registro.id_tarea });\n            this.apiService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.tarea,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }) ,this.recarga();  \n\n        }\n      });\n    }\n\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function(d) {\n      return  d.tarea.toLowerCase().indexOf(val) !== -1 || d.hora.toLowerCase().indexOf(val) !== -1|| d.estatus.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ \"txtRegistros\" | translate }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2 mt-4\">\n    <div class=\"col-md-12 alturaminima mb-5\">\n\n<div class=\"row\">\n  <div class=\"col-6\">\n    <div class=\"form\">\n      <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n        <input\n          matInput\n          #filter\n          placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\n          (keyup)=\"updateFilter($event)\"\n        />\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"col-6 text-right\">\n    <a alt=\"Nuevo registro\" title=\"nuevo registro\" [routerLink]=\"['/', 'alta']\" class=\"btn btn-info pt4 btn-circle posicionplus\"><i class=\"fa fa-plus fa-3\"></i></a>\n  </div>\n</div>\n\n      <ngx-datatable\n        #mydatatable\n        class=\"material striped\"\n        headerHeight=\"50\"\n        [limit]=\"15\"\n        [columnMode]=\"'force'\"\n        footerHeight=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n        [messages]=\"my_messages\"\n      >\n\n        <ngx-datatable-column name=\"id_tarea\" [maxWidth]=\"90\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <div class=\"text-center\">{{ row.id_tarea }}</div>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Tarea\" [maxWidth]=\"1810\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <span\n              title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n              (dblclick)=\"editing[rowIndex + '-tarea'] = true\"\n              *ngIf=\"!editing[rowIndex + '-tarea']\"\n            >\n              {{ value | slice: 0:90 }}\n            </span>\n            <input\n              required\n              autofocus\n              (keyup.enter)=\"updateValue($event, 'tarea', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-tarea']\"\n              type=\"text\"\n              class=\"form-control\"\n              [value]=\"value\"\n              [title]=\"row.id_tarea\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Hora\" [maxWidth]=\"110\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <span\n              title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n              (dblclick)=\"editing[rowIndex + '-hora'] = true\"\n              *ngIf=\"!editing[rowIndex + '-hora']\"\n            >\n              {{ value }}\n            </span>\n            <input\n              required\n              class=\"form-control\"\n              min=\"5\"\n              max=\"5\"\n              (onError)=\"(myHandleError)\"\n              pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n              \n              autofocus\n              (keyup.enter)=\"updateValue($event, 'hora', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-hora']\"\n              type=\"text\"\n              [value]=\"value\"\n              [title]=\"row.id_tarea\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Estatus\" [maxWidth]=\"90\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-row=\"row\"\n            let-value=\"value\"\n          >\n            <div\n              [ngClass]=\"{\n                positive: row.estatus == 'OK',\n                negative: row.estatus == 'KO',\n                posnegtive: row.estatus == 'OK-INC'\n              }\"\n            >\n              <span\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n                (dblclick)=\"editing[rowIndex + '-estatus'] = true\"\n                *ngIf=\"!editing[rowIndex + '-estatus']\"\n              >\n                {{ value }}\n              </span>\n              <input type=\"hidden\" #varId [value]=\"row.id_tarea\" />\n\n              <select\n                class=\"form-control\"\n                name=\"estatus\"\n                *ngIf=\"editing[rowIndex + '-estatus']\"\n                (blur)=\"editing[rowIndex + '-estatus'] = false\"\n                (change)=\"updateValue($event, 'estatus', rowIndex)\"\n                [value]=\"value\"\n                [title]=\"row.id_tarea\"\n              >\n                <option value=\"OK\">OK</option>\n                <option value=\"KO\">KO</option>\n                <option value=\"OK-INC\">OK-INC</option>\n              </select>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"ver\" [maxWidth]=\"80\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-row=\"row\"\n          >\n\n            <div class=\"text-center\">\n              <div class=\"row\">\n                <div class=\"col-12 p0 m0\">\n                  <a\n                    [routerLink]=\"['/detalle', row.tokenid]\"\n                    class=\"btn btn-warning botonsizes mr-1\"\n                    ><i class=\"fa fa-pencil\"></i\n                  ></a>\n                  <button\n                    (click)=\"borrarRegistro(row, i)\"\n                    class=\"btn btn-warning botonsizes\"\n                  >\n                    <i class=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n\n\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, NgForm, NgModel } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { DataserviceService } from '../../services/dataservice.service';\nimport Swal from 'sweetalert2';\n\n \n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  angForm: FormGroup;\n  datosphp: string;\n  constructor(private fb: FormBuilder,private dataService: DataserviceService,private router:Router) {\n    this.angForm = this.fb.group({\n \n      email: ['', [Validators.required,Validators.minLength(1), Validators.email]],\n      password: ['', Validators.required]\n \n    });\n   }\n \n  ngOnInit() {\n\n  }\n\n  postdata(angForm:FormGroup)\n  {\n\n   \n\n    var patronEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/;\n    var emailResult = patronEmail.test(angForm.value.email);\n        if(emailResult==false){\n              Swal.fire({\n                text: 'El campo E-mail debe cumplir con el formato adecuado',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n        } else {\n\n\n            // this.datosphp = JSON.stringify({ \"email\": angForm.value.email, \"password\": angForm.value.password });\n            this.dataService.userlogin(angForm.value.email,angForm.value.password)\n              .pipe(first())\n              .subscribe(\n                  data => {\n                        const redirect = this.dataService.redirectUrl ? this.dataService.redirectUrl : '/elegirturno';\n                        this.router.navigate([redirect]);\n                  },\n                  error => {\n                    Swal.fire({\n                      text: 'El campo E-mail o el password son erróneos. revise los datos.',\n                      icon: 'error',  \n                      showConfirmButton : true\n                    });\n                  });\n        }\n\n  }\n  get email() { return this.angForm.get('email'); }\n  get password() { return this.angForm.get('password'); }\n}","<div class=\"limiter animated fadeInLeft\">\n    <div class=\"container-login100\">\n        <div class=\"wrap-login100 p-t-50 p-b-90\">\n           \n\n\n            <form \n            [formGroup]=\"angForm\" \n            (ngSubmit)=\"postdata(angForm)\" \n            autocomplete=\"off\" \n            class=\"login100-form validate-form flex-sb flex-w\"\n            >\n\n\n\n            <span class=\"login100-form-title p-b-51\">\n                Login\n            </span>\n            <div class=\"wrap-input100 m-b-16\">\n               \n                <input \n                type=\"email\" \n                name=\"email\" \n                formControlName=\"email\" \n                autocomplete=\"off\" \n                class=\"input100\" \n                required\n               \n                placeholder=\"E-mail\">\n                <span class=\"focus-input100\"></span>\n            </div>\n            <div class=\"wrap-input100 m-b-16\">\n                <input \n                type=\"password\" \n                name=\"Password\" \n                formControlName=\"password\"  \n                autocomplete=\"off\" \n                class=\"input100\" \n                placeholder=\"Password\"\n                required\n                minlength=\"6\">\n                <span class=\"focus-input100\"></span>\n            </div>\n                \n                <!-- <div class=\"flex-sb-m w-full p-t-3 p-b-24\">\n                    <div class=\"contact100-form-checkbox\">\n                        <input [(ngModel)]=\"recordarme\"\n                        class=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\">\n                        <label class=\"label-checkbox100\" for=\"ckb1\">\n                            Recordar mi usuario\n                        </label>\n                    </div>\n\n                    <div>\n                        \n                    </div>\n                </div> -->\n\n                <div class=\"container-login100-form-btn m-t-17\">\n                    <button \n                    type=\"submit\" \n                    class=\"login100-form-btn\" \n                 \n                    >Ingresar</button>\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\nimport { DetalleHistoricoService } from '../services/detallehistorico.service';\nimport { ApiPersonas } from '../services/apipersonas.service';\nimport { Roles } from '../models/roles';\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html'\n  \n})\n\n\n\nexport class PerfilPersona implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:Personas = new Personas();\n\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n\n    personas: Personas [] = [];\n    roles: Roles[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n\n    fieldTextType: boolean;\n    datoregistro = {\n      id_persona: this.activatedRoute.snapshot.paramMap.get('id_persona'),\n      id_persona_log: localStorage.getItem('id_persona'),\n      nombres: null,\n      telefono: null,\n      email:  null,\n      direccion: null,\n      registrado: null,\n      id_rol: null,\n      password:  null,\n      imagen:  null\n    }\n\n    \n\n  constructor(private httpClient: HttpClient,private registroService: ApiPersonas,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n       //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n\n              }\n\n\n\n  ngOnInit(){\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona');\n \n    this.registroService.getPerson ( id_persona )\n      .subscribe( (respuesta:Personas) => {\n         this.registro = respuesta;\n         this.registro.id_persona =   id_persona;\n\n      });\n\n  }\n\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  recarga(){ \n    location.reload();\n  }\n\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  \n\n\n\n  //alta de registro\n  altaRegistro() {\n\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.nombres==null || this.datoregistro.email==null || this.datoregistro.id_rol==null || this.datoregistro.password==null){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos obligatorios no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.registroService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.nombres,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : false\n          }),this.recarga();      \n        });\n    }\n  }\n\n  \n\n\n  guardarregistro( ){\n    console.log(this.registro);\n    if(\n      this.registro.nombres=='' || \n      this.registro.telefono=='' || \n      this.registro.email=='' || \n\n      this.registro.direccion=='' ||\n      this.registro.id_rol=='' \n      ){\n     Swal.fire({\n       text: 'Los campos obligatorios no pueden quedar vacíos',\n       icon: 'error',  \n       showConfirmButton : true\n     }); \n    }  else {\n            //validacion email      \n            var patronEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/;\n            var emailResult = patronEmail.test(this.registro.email);\n            if(emailResult==false){\n              Swal.fire({\n                text: 'El campo E-mail debe cumplir con el formato adecuado',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else \n            // validacion password\n            // al menos 1 número, una minúscula y una mayuscula\n            // al menos 6 carácteres\n            var patronPassword = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/;\n            var passwordResult = patronPassword.test(this.registro.password);\n            if(passwordResult==false){\n              Swal.fire({\n                text: 'El campo Password debe tener al menos 1 número, una minúscula y una mayúscula y como mínimo 6 carácteres',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else {\n              let peticion: Observable<any>;\n              peticion = this.registroService.actualizarRegistro(this.registro);\n              peticion.subscribe( respuesta => {\n                Swal.fire({\n                  title: this.registro.nombres,\n                  text: 'Registro modificado',\n                  icon: 'success',  \n                  showConfirmButton : false\n                }),this.recarga();  \n              });\n            }\n\n   }\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.nombres }} - #{{ registro.id_persona }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.registrado | date: \"dd/MM/y HH:mm\"\n          }}</em>\n         \n          \n          \n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-2 alturaminima mb-5\">\n       \n\n\n\n\n<app-modimagen></app-modimagen>\n\n\n\n\n\n\n\n      </div>\n\n        <div class=\"col-md-10 alturaminima mb-5\">\n\n\n\n        <div class=\"form-group\">\n          <label for=\"nombres\">{{ \"txtNombres\" | translate }}</label>\n          <input\n            required\n            style=\"background-color: white;\"\n            placeholder=\"{{ 'txtNombres' | translate }}\"\n            class=\"form-control form-control-sm\"\n            [class.is-invalid]=\"nombres.invalid && nombres.touched\"\n            #nombres=\"ngModel\"\n            required\n            minlength=\"4\"\n            name=\"nombres\"\n            type=\"text\"\n            [(ngModel)]=\"registro.nombres\"\n          />\n        </div>\n  \n\n\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"txtEmail\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtEmail' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"email.invalid && email.touched\"\n              #email=\"ngModel\"\n              required\n              [email]=\"true\"\n              name=\"email\"\n              type=\"email\"\n              [(ngModel)]=\"registro.email\"\n            />\n          </div>\n  </div>\n  <div class=\"col-md-4\">       \n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"txtPassword\" | translate }}</label>\n            <div class=\"input-group\">\n            <input\n              required\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtPassword' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"password.invalid && password.touched\"\n              #password=\"ngModel\"\n              required\n              name=\"password\"\n              type=\"password\"\n              [(ngModel)]=\"registro.password\"\n              [type]=\"fieldTextType ? 'text' : 'password'\"\n            />\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\">\n                <i\n                class=\"fa\"\n                [ngClass]=\"{\n                  'fa-eye-slash': !fieldTextType,\n                  'fa-eye': fieldTextType\n                }\"\n                (click)=\"toggleFieldTextType()\"\n              ></i>\n              </span>\n           </div>\n          </div>\n</div>\n</div>    \n<div class=\"col-md-4\">\n  <div class=\"form-group\">\n    <label for=\"telefono\">{{ \"txtTelefono\" | translate }}</label>\n    <input\n      style=\"background-color: white;\"\n      placeholder=\"{{ 'txt9digitos' | translate }}\"\n      class=\"form-control form-control-sm\"\n      #telefono=\"ngModel\"\n      minlength=\"9\"\n      name=\"telefono\"\n      type=\"text\"\n      [(ngModel)]=\"registro.telefono\"\n    />\n  </div>\n</div>\n\n\n</div>\n<div class=\"row\">\n<div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"direccion\">{{ \"txtDireccion\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtDireccion' | translate }}\"\n              class=\"form-control form-control-sm\"\n              #direccion=\"ngModel\"\n              name=\"direccion\"\n              type=\"text\"\n              [(ngModel)]=\"registro.direccion\"\n            />\n          </div>\n\n</div>\n<div class=\"col-md-6\">\n\n\n        <div class=\"form-group\">\n          <label for=\"id_rol\">{{ \"txtRol\" | translate }}</label>\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm\"\n            name=\"id_rol\"\n           disabled\n           readonly\n            [class.is-invalid]=\"id_rol.invalid && id_rol.touched\"\n            #id_rol=\"ngModel\"\n            [(ngModel)]=\"registro.id_rol\"\n          >\n          <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\n            {{rol.rol_name}}\n          </option>\n          </select>\n        </div>\n</div>\n</div>\n        <div class=\"form-group text-center\">\n           <button (click)=\"guardarregistro()\" class=\"btn btn-primary colortopacio\">\n            {{ \"txtModificar\" | translate }}\n          </button> \n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    </div>\n \n\n \n\n  <app-footer></app-footer>\n</div>\n","import {Component, ViewChild} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { ColumnMode } from '@swimlane/ngx-datatable';\r\nimport Swal from 'sweetalert2';\r\nimport { Constantes } from '../models/constantes.model';\r\nimport { ApiPersonas } from '../services/apipersonas.service';\r\nimport { Roles } from '../models/roles';\r\nimport { Personas } from '../models/personas';\r\n\r\n@Component({\r\n  selector: 'app-personas',\r\n  templateUrl: './personas.pages.html'\r\n  \r\n})\r\n\r\nexport class PersonasPage {\r\n  roles: Roles[] = [];\r\n  personas:Personas[] = [];\r\n  issue: Personas = new Personas();\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n\r\n  final: Observable<Object>;\r\n  dregistro = null;\r\n  datoregistro = {\r\n    id_persona: null,\r\n    nombres: null,\r\n    telefono: null,\r\n    email:  null,\r\n    direccion: null,\r\n    id_rol: null,\r\n    password:  null,\r\n    imagen:  null,\r\n    id_persona_log: localStorage.getItem('id_persona')\r\n  }\r\n  emailvalida = {\r\n    mailexiste: null\r\n  }\r\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\r\n  ColumnMode = ColumnMode;\r\n  campo: any;\r\n  id_persona: any;\r\n  valor: any;\r\n  ever: any;\r\n  datos: string;\r\n  datosborrado: string;\r\n\r\n\r\n  \r\n  constructor(private httpClient: HttpClient, private apiService: ApiPersonas) {\r\n        this.fetch(data => {\r\n          // cache\r\n            this.temp = [...data];\r\n            this.rows = data;\r\n        });\r\n\r\n        //cargo los roles para los combos select\r\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\r\n            this.roles = result;\r\n          }, error => console.error(error));\r\n\r\n  }\r\n\r\n  //el ngoninit nos servira para recargar en caso de error de validacion\r\n  ngOnInit(){\r\n    this.fetch(data => {\r\n        this.temp = [...data];\r\n        this.rows = data;\r\n      });\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga(){ \r\n      location.reload();\r\n  }\r\n\r\n  //cargamos el listado\r\n  fetch(cb) {\r\n    if(cb){\r\n      const req = new XMLHttpRequest();\r\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/personas_read.php`);\r\n      req.onload = () => {\r\n        cb(JSON.parse(req.response));\r\n      };\r\n      req.send();\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  //alta de registro\r\n  altaRegistro() {\r\n\r\n    //compruebo que el email no exista (ya se valida también en el servidor en PHP)\r\n    this.apiService.validaEmail(this.datoregistro.email).subscribe(\r\n      (datosMail:any) => {\r\n        this.emailvalida = datosMail;  \r\n        if(this.emailvalida.mailexiste==true) {\r\n              Swal.fire({\r\n                title: this.datoregistro.email,\r\n                text: 'El e-mail indicado ya existe, escoja otro',\r\n                icon: 'error',  \r\n                showConfirmButton : true\r\n              });  \r\n        }\r\n        //si los campos obligatorios nos llegan vacios\r\n        else if(this.datoregistro.nombres==null || this.datoregistro.email==null || this.datoregistro.id_rol==null || this.datoregistro.password==null){\r\n          Swal.fire({\r\n            title: 'Revise los datos',\r\n            text: 'Los campos obligatorios no pueden estar vacíos!!',\r\n            icon: 'error',\r\n          });   \r\n        } else {\r\n\r\n      //enviamos el array a la funcions del server\r\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\r\n        datos => {\r\n          Swal.fire({\r\n            title: this.datoregistro.nombres,\r\n            text: 'Registro añadido',\r\n            icon: 'success',  \r\n            showConfirmButton : false\r\n          }),this.recarga(); \r\n        });\r\n       }\r\n   });\r\n  }\r\n\r\n  //actualización campos inline\r\n  updateValue(event, cell, rowIndex) {\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    this.rows[rowIndex][cell] = event.target.value;\r\n    this.rows = [...this.rows];\r\n    this.campo = cell;\r\n    this.id_persona = event.target.title;\r\n    this.valor = event.target.value;\r\n    this.ever = this.campo,this.id_persona,this.valor;\r\n    this.datos = JSON.stringify({ \"campo\": this.campo, \"id_persona\": this.id_persona, \"valor\": this.valor });\r\n\r\n    //validacion del formato email\r\n     var patronEmail = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/;\r\n     var emailResult = patronEmail.test(this.valor);\r\n\r\n    // //si el campo que recibo es email...\r\n    if(this.campo == \"email\"){\r\n      //...valido su formato\r\n      if(emailResult==false){\r\n        Swal.fire({\r\n          title: 'Revise los datos',\r\n          text: 'El campo \"email\" debe de cumplir con los requerimientos!!',\r\n          icon: 'error',\r\n        }); \r\n        this.ngOnInit();  \r\n      } \r\n      // else {\r\n      //   Swal.fire({\r\n      //     text: 'Registro actualizado',\r\n      //     icon: 'success',  \r\n      //     showConfirmButton : false\r\n      //   })\r\n      // }\r\n    }\r\n    //el campo que recibo es tarea pero es menor de 3 caracteres\r\n    else \r\n    if(this.campo == \"nombres\" && this.valor.length < 3){\r\n       \r\n          Swal.fire({\r\n            title: 'Revise los datos',\r\n            text: 'El campo \"nombres\" debe contener como mínimo tres carácteres!!',\r\n            icon: 'error',\r\n          });   \r\n          this.ngOnInit();  \r\n             \r\n    } \r\n    else \r\n    if(this.campo == \"telefono\" && this.valor.length < 9){       \r\n          Swal.fire({\r\n            title: 'Revise los datos',\r\n            text: 'El campo \"telefono\" debe contener nueve carácteres!!',\r\n            icon: 'error',\r\n          });   \r\n          this.ngOnInit();  \r\n             \r\n    } else {\r\n      //todo Ok llamo al servicio\r\n      this.apiService.modiRegistro(this.datos).subscribe(\r\n        datos => {\r\n          Swal.fire({\r\n            text: 'Registro actualizado',\r\n            icon: 'success',  \r\n            showConfirmButton : false\r\n          })\r\n      \r\n        });\r\n    }\r\n\r\n  }\r\n\r\n\r\n   //eliminar registro      \r\n   borrarRegistro ( registro: Personas, i:string){\r\n    \r\n    Swal.fire({\r\n        title: `¿Desea borrar el registro ${registro.nombres}`,\r\n        text: 'Confirme si desea borrar el registro',\r\n        icon: 'question',\r\n        showConfirmButton: true,\r\n        showCancelButton: true\r\n\r\n    }).then( respuesta => {\r\n         \r\n        if ( respuesta.value ) {\r\n            const id_persona_log = localStorage.getItem('id_persona');\r\n            this.datosborrado = JSON.stringify({ \"id_persona_log\": id_persona_log,\"nombres\": registro.nombres, \"id_persona\": registro.id_persona });\r\n            this.apiService.delete( this.datosborrado ).subscribe();\r\n\r\n            Swal.fire({\r\n              title: registro.nombres,\r\n              text: 'Registro eliminado',\r\n              icon: 'success',  \r\n              showConfirmButton : false\r\n            })\r\n            ,this.recarga();  \r\n\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n\r\n  //actualizacion filtro busqueda\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n    const temp = this.temp.filter(function(d) {\r\n      return  d.nombres.toLowerCase().indexOf(val) !== -1 || d.telefono.toLowerCase().indexOf(val) !== -1 || d.email.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n    // actualizamos las rows\r\n    this.rows = temp;\r\n    // Cuando cambie el filtro, regresa a la primera página.\r\n    this.table.offset = 0;\r\n  }\r\n\r\n}\r\n\r\ninterface Rols {\r\n    rol_name: string;\r\n}","<div class=\"page-content\" id=\"content\">\r\n    <app-header></app-header>\r\n    <app-menu></app-menu>\r\n  \r\n    <div class=\"row m-2\">\r\n      <div class=\"col-md-12 mt-4\">\r\n        <h3>{{ \"txtPersonas\" | translate }}</h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n              <a [routerLink]=\"['/', 'home']\">Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n              {{ \"txtPersonas\" | translate }}\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"row m-2 mt-4\">\r\n      <div class=\"col-md-8 alturaminima mb-5\">\r\n        <div class=\"form\">\r\n          <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\r\n            <input\r\n              matInput\r\n              #filter\r\n              placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\r\n              (keyup)=\"updateFilter($event)\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n        <ngx-datatable\r\n          #mydatatable\r\n          class=\"material striped\"\r\n          headerHeight=\"50\"\r\n          [limit]=\"15\"\r\n          [columnMode]=\"'force'\"\r\n          footerHeight=\"50\"\r\n          rowHeight=\"auto\"\r\n          [rows]=\"rows\"\r\n        >\r\n          <ngx-datatable-column name=\"id_persona\" [maxWidth]=\"90\">\r\n            <ng-template\r\n              class=\"mat-column-id\"\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <div class=\"text-center\">{{ row.id_persona }}</div>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n          <ngx-datatable-column name=\"Nombres\" [maxWidth]=\"1810\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span\r\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                (dblclick)=\"editing[rowIndex + '-nombres'] = true\"\r\n                *ngIf=\"!editing[rowIndex + '-nombres']\"\r\n              >\r\n                {{ value | slice: 0:90 }}\r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'nombres', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-nombres']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n          <ngx-datatable-column name=\"Telefono\" [maxWidth]=\"120\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span\r\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                (dblclick)=\"editing[rowIndex + '-telefono'] = true\"\r\n                *ngIf=\"!editing[rowIndex + '-telefono']\"\r\n              >\r\n           <a href='tel:{{ value }}'>{{ value | slice: 0:90 }}</a> \r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'telefono', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-telefono']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n\r\n\r\n\r\n          <ngx-datatable-column name=\"Email\" [maxWidth]=\"180\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span\r\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                (dblclick)=\"editing[rowIndex + '-email'] = true\"\r\n                *ngIf=\"!editing[rowIndex + '-email']\"\r\n              >\r\n              <a href='mailto:{{ value }}'> {{ value | slice: 0:90 }}</a>\r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'email', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-email']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n\r\n<!-- \r\n\r\n          <ngx-datatable-column name=\"Registrado\" [maxWidth]=\"1810\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span>\r\n                {{ value | slice: 0:10 }}\r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'registrado', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-registrado']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column> -->\r\n\r\n\r\n          <ngx-datatable-column name=\"Rol\" [maxWidth]=\"80\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-row=\"row\"\r\n              let-value=\"value\"\r\n            >\r\n\r\n           \r\n\r\n                <span\r\n                  title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                  (dblclick)=\"editing[rowIndex + '-id_rol'] = true\"\r\n                  *ngIf=\"!editing[rowIndex + '-id_rol']\"\r\n                >\r\n                  {{ value }}\r\n                </span>\r\n                <input type=\"hidden\" #varId [value]=\"row.id_persona\" />\r\n  \r\n                <select\r\n                  class=\"form-control\"\r\n                  name=\"id_rol\"\r\n                  *ngIf=\"editing[rowIndex + '-id_rol']\"\r\n                  (blur)=\"editing[rowIndex + '-id_rol'] = false\"\r\n                  (change)=\"updateValue($event, 'id_rol', rowIndex)\"\r\n                  [value]=\"value\"\r\n                  [title]=\"row.id\"\r\n                >\r\n                <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\r\n                    {{rol.rol_name}}\r\n                  </option>\r\n        \r\n                </select>\r\n             \r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n          <ngx-datatable-column name=\"ver\" [maxWidth]=\"80\">\r\n            <ng-template\r\n              class=\"mat-column-id\"\r\n              ngx-datatable-cell-template\r\n              let-row=\"row\"\r\n            >\r\n              <div class=\"text-center\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 p0 m0\">\r\n                    <a\r\n                      [routerLink]=\"['/detallepersona', row.id_persona]\"\r\n                      class=\"btn btn-warning botonsizes mr-1\"\r\n                      ><i class=\"fa fa-pencil\"></i\r\n                    ></a>\r\n                    <button\r\n                      (click)=\"borrarRegistro(row, i)\"\r\n                      class=\"btn btn-warning botonsizes\"\r\n                    >\r\n                      <i class=\"fa fa-trash\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n      <div class=\"col-md-4 pt-5\">\r\n        <div class=\"form-group\">\r\n        \r\n  \r\n      </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"nombres\">{{ \"txtNombres\" | translate }}</label>\r\n          <input\r\n            required\r\n            style=\"background-color: white;\"\r\n            placeholder=\"{{ 'txtNombres' | translate }}\"\r\n            class=\"form-control form-control-sm\"\r\n            [class.is-invalid]=\"nombres.invalid && nombres.touched\"\r\n            #nombres=\"ngModel\"\r\n            required\r\n            minlength=\"4\"\r\n            name=\"nombres\"\r\n            type=\"text\"\r\n            [(ngModel)]=\"datoregistro.nombres\"\r\n          />\r\n        </div>\r\n  \r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"telefono\">{{ \"txtTelefono\" | translate }}</label>\r\n            <input\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txt9digitos' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              #telefono=\"ngModel\"\r\n              minlength=\"9\"\r\n              name=\"telefono\"\r\n              type=\"text\"\r\n              [(ngModel)]=\"datoregistro.telefono\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">{{ \"txtEmail\" | translate }}</label>\r\n            <input\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txtEmail' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              [class.is-invalid]=\"email.invalid && email.touched\"\r\n              #email=\"ngModel\"\r\n              required\r\n              [email]=\"true\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              [(ngModel)]=\"datoregistro.email\"\r\n            />\r\n          </div>\r\n          \r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"direccion\">{{ \"txtDireccion\" | translate }}</label>\r\n            <input\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txtDireccion' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              #direccion=\"ngModel\"\r\n              name=\"direccion\"\r\n              type=\"text\"\r\n              [(ngModel)]=\"datoregistro.direccion\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">{{ \"txtPassword\" | translate }}</label>\r\n            <input\r\n              required\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txtPassword' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              [class.is-invalid]=\"password.invalid && password.touched\"\r\n              #password=\"ngModel\"\r\n              required\r\n              name=\"password\"\r\n              type=\"password\"\r\n              [(ngModel)]=\"datoregistro.password\"\r\n            />\r\n          </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"id_rol\">{{ \"txtRol\" | translate }}</label>\r\n          <select\r\n            required\r\n            style=\"background-color: white;\"\r\n            class=\"form-control form-control-sm\"\r\n            name=\"id_rol\"\r\n           \r\n            [class.is-invalid]=\"id_rol.invalid && id_rol.touched\"\r\n            #id_rol=\"ngModel\"\r\n            [(ngModel)]=\"datoregistro.id_rol\"\r\n          >\r\n          <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\r\n            {{rol.rol_name}}\r\n          </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center\">\r\n          <button (click)=\"altaRegistro()\" class=\"btn btn-primary colortopacio\">\r\n            {{ \"txtAgregar\" | translate }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n    <app-footer></app-footer>\r\n  </div>\r\n  ","import { Component, Input, OnInit } from '@angular/core';\n  \nimport {NgbModal, ModalDismissReasons, NgbModalOptions} from '@ng-bootstrap/ng-bootstrap';\nimport { AyudaService } from '../../services/ayuda.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Ayuda } from '../../models/ayuda';\nimport { Constantes } from '../../models/constantes.model';\nimport { Turnos } from '../../models/turnos';\nimport { TurnosService } from '../../services/turnos.service';\nimport { Personas } from '../../models/personas';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { SharedService } from '../../services/serviciocompartido.service';\nimport Swal from 'sweetalert2';\n  \n@Component({\n  selector: 'app-elegirturno',\n  templateUrl: './elegir.component.html'\n})\n\n\n\nexport class ElegirTurno  implements OnInit {\n\n  userPersona: Personas = new Personas();\n  listaturnos: Turnos[] = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  datosturnos = {\n    id_persona: localStorage.getItem('id_persona'),\n    id_turno: null,\n    turno: null,\n    tipo_turno:  null,\n    turno_horario:  null,\n    id_rol: null\n  }\n  id_rol: string;\n\n  reactiveForm: FormGroup = new FormGroup({\n    id_turno: new FormControl(false)\n  })\n\n  isSubmitted = false;\n  valor: boolean;\n\n  constructor(\n    private formbuilder: FormBuilder,\n    private httpClient: HttpClient, \n    private servicioCompartido: SharedService, \n    private activatedRoute: ActivatedRoute, \n    private turnosService: TurnosService,\n    private router: Router\n    ) {\n    this.reactiveForm.controls['id_turno'].valueChanges.subscribe((state: any) => {\n\n      id_turno: ['', [Validators.required]];\n\n      console.log(state);\n    });\n\n  }\n  \n  ngOnInit(){\n        const id_persona = localStorage.getItem('id_persona');\n        //obtener el rol de este id_persona\n        this.turnosService.getUserId ( id_persona )\n        .subscribe( (respuesta:Personas) => {\n          this.userPersona = respuesta; \n          this.id_rol = this.userPersona.id_rol;\n              //cargamos los turnos solamente para este id_rol para elegirlos\n              this.httpClient.get<any[]>(this.PHP_API_SERVER + `/ajax/turnos_read_by_rol.php?id_rol=${ this.id_rol }`)\n              .subscribe(result => {\n                  this.listaturnos = result;\n                  console.log(this.listaturnos);\n              }, error => console.error(error));\n        });\n  }\n\n\n\n  get myForm() {\n    return this.reactiveForm.get('id_turno');\n  }\n\n\n  onSubmit() { \n      this.isSubmitted = true;\n      const valor = JSON.stringify(this.reactiveForm.value);\n      if(valor=='{\"id_turno\":false}') {\n \n        Swal.fire({\n          title: 'Error',\n          text: 'Debe escoger una opción',\n          icon: 'error',  \n          showConfirmButton : true\n        });  \n\n        return false;\n      } else {\n        localStorage.setItem('valorTurno', this.reactiveForm.value.id_turno);\n        this.servicioCompartido.sendClickEvent (); \n        this.router.navigate(['/home']);\n      }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4\">\n      <h3>Turnos</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Turnos\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2 mt-4\">\n    <div class=\"col-md-6 alturaminima mb-5\">\n\n      <h5>Disponibles para rol: <b>{{ userPersona.nombre_rol }}</b></h5>\n<form [formGroup]=\"reactiveForm\" (ngSubmit)=\"onSubmit()\">      \n<table class=\"table mt-3\">\n  <tbody>\n    <tr *ngFor=\"let listat of listaturnos\">\n      <td class=\"namturnos\">{{listat.turno}}</td>\n      <td>{{listat.tipo_turno}}</td>\n      <td>{{listat.turno_horario}}</td>\n      <td>\n        <label  class=\"radios\">\n          <input \n          [value]=\"listat.id_turno\"\n          formControlName=\"id_turno\"\n          type=\"radio\"  \n          id=\"{{listat.id_turno}}\" \n          name=\"id_turno\">\n          <span class=\"checkmark\"></span>\n        </label>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<button type=\"submit\">enviar</button>\n</form>\n\n\n\n\n\n\n\n\n\n\n    </div>\n    <div class=\"col-md-6 alturaminima mb-5\">\n\n\n\n\n\nturnos anteriores\n\n\n\n\n    </div>\n  </div>\n\n  <app-footer></app-footer>\n</div>\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Personas } from '../models/personas';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiPersonas {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n\n  //obtener persona por id_tarea\n  getPerson( id_persona ){\n      return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  //obtener foto persona\n  getFotografia( id_persona ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  validaEmail( email ){\n    \n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_validar_email.php?email=${ email }`);\n  }\n\n\n  altaRegistroFoto(datosFoto) {\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_update_foto.php`, datosFoto);\n  } \n\n\n  altaRegistro(datoregistro) {\n      return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_crear.php`, JSON.stringify(datoregistro));\n  }\n\n\n  actualizarRegistro(persona: Personas){\n    const personaTemp = {\n        ...persona\n    };\n    delete personaTemp.id_persona;\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_update_detalle.php`, persona);  \n  }\n\n  modiRegistro(datos){\n    console.log(datos);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_update.php`, datos);   \n  \n  }\n  \n  delete(datosborrado){\n    console.log(datosborrado);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n  altaRegistro(datoregistro) {\n      console.log(JSON.stringify(datoregistro));\n      return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_crear.php`, JSON.stringify(datoregistro));\n  }\n\n  modiRegistro(datos){\n   \n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_update.php`, datos);   \n  \n  }\n\n  delete(datosborrado){\n    console.log(datosborrado);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Personas } from '../models/personas';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AyudaService {\n\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n  //obtener persona por id_tarea\n  open(id_persona){\n      return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  \n\n}","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {Issue} from '../models/issue';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\n\n@Injectable()\nexport class DataService {\n\n  private readonly API_URL = 'http://joraco.site:8081/b/ajax/registro_read.php';\n\n  dataChange: BehaviorSubject<Issue[]> = new BehaviorSubject<Issue[]>([]);\n  \n  // Temporarily stores data from dialogs\n  dialogData: any;\n\n  constructor (private httpClient: HttpClient) {}\n\n  get data(): Issue[] {\n    return this.dataChange.value;\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  /** CRUD METHODS */\n  getAllIssues(): void {\n    this.httpClient.get<Issue[]>(this.API_URL).subscribe(data => {\n        this.dataChange.next(data);\n      },\n      (error: HttpErrorResponse) => {\n      console.log (error.name + ' ' + error.message);\n      });\n  }\n\n  // DEMO ONLY, you can find working methods below\n  addIssue (issue: Issue): void {\n    this.dialogData = issue;\n  }\n\n  updateIssue (issue: Issue): void {\n    this.dialogData = issue;\n  }\n\n  deleteIssue (id: number): void {\n    console.log(id);\n  }\n}\n\n\n\n/* REAL LIFE CRUD Methods I've used in my projects. ToasterService uses Material Toasts for displaying messages:\n\n    // ADD, POST METHOD\n    addItem(kanbanItem: KanbanItem): void {\n    this.httpClient.post(this.API_URL, kanbanItem).subscribe(data => {\n      this.dialogData = kanbanItem;\n      this.toasterService.showToaster('Successfully added', 3000);\n      },\n      (err: HttpErrorResponse) => {\n      this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n    });\n   }\n\n    // UPDATE, PUT METHOD\n     updateItem(kanbanItem: KanbanItem): void {\n    this.httpClient.put(this.API_URL + kanbanItem.id, kanbanItem).subscribe(data => {\n        this.dialogData = kanbanItem;\n        this.toasterService.showToaster('Successfully edited', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n\n  // DELETE METHOD\n  deleteItem(id: number): void {\n    this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(data['']);\n        this.toasterService.showToaster('Successfully deleted', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n*/\n\n\n\n\n","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Usermodule } from '../models/usuario.model';\nimport { HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS } from '@angular/cdk/a11y/high-contrast-mode/high-contrast-mode-detector';\nimport { Observable } from 'rxjs';\n\n\n\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class DataserviceService {\n  redirectUrl: string;\n\n  baseUrl:string = Constantes.API_SERVER; //URL del servicio\n\n@Output() getLoggedInName: EventEmitter<any> = new EventEmitter();\n\n  constructor(private httpClient : HttpClient) { }\n\n  public userlogin(username,password) {\n \n    return this.httpClient.post<any>(`${this.baseUrl}/ajax/login.php`, {username,password})\n        .pipe(map(Usermodule => {\n            this.setToken(Usermodule[0].nombres);\n            this.setID(Usermodule[0].id_persona);\n            this.getLoggedInName.emit(true);\n            \n            return Usermodule;\n        }));\n\n    }\n\n\n    getUserId( id_persona ){\n        return this.httpClient.get(`${ this.baseUrl}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n    }\n\n\n  \n// public userregistration(name,email,pwd,mobile) {\n//   return this.httpClient.post<any>(this.baseUrl + '/registration.php', { name,email, pwd,mobile })\n//       .pipe(map(Usermodule => {\n//           return Usermodule;\n//       }));\n// }\n\n\n\nsetID(id_persona: string) {\n    localStorage.setItem('id_persona', id_persona);\n  }\n   \ngetID() {\n    return localStorage.getItem('id_persona');\n  }\n  \n\n//token\nsetToken(token: string) {\n  localStorage.setItem('token', token);\n}\n \ngetToken() {\n  return localStorage.getItem('token');\n}\n \ndeleteToken() {\n  localStorage.removeItem('token');\n}\n \nisLoggedIn() {\n  const usertoken = this.getToken();\n  const idtoken = this.getID();\n  if (usertoken != null || idtoken != null) {\n    return true\n  }\n  return false;\n}\n \n}\n ","\r\n\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Issue } from '../../app/models/issue';\r\nimport { Personas } from '../models/personas';\r\nimport { Seguimiento } from '../models/seguimiento';\r\n@Injectable(\r\n    {\r\n        providedIn:'root'\r\n    }\r\n)\r\n\r\n\r\nexport class DetalleService {\r\n\r\n    private personas:Issue[] = [];\r\n     //persons:any[] = [];\r\n \r\n        //definimos la url del servicio\r\n        private url = 'http://joraco.site:8081/b/ajax';\r\n\r\n\r\n\r\n        constructor( private http: HttpClient) {\r\n            // console.log(\"servicio listo para usar\");\r\n            // this.http.get('https://restcountries.eu/rest/v2/lang/es') //URL del servicio\r\n            // .subscribe( (resultados:any) => {\r\n            // this.persons = resultados;\r\n            // } );\r\n        }\r\n\r\n        // //nuevo registro\r\n        // crearPersona( persona: Issue ){\r\n        //     return this.http.post(`${ this.url}/personas.php`,persona)\r\n        //     .pipe(\r\n        //         map( (respuesta:any) => {\r\n        //             persona.id = respuesta.name;\r\n        //             return persona;\r\n        //         })\r\n        //     );\r\n        // }\r\n\r\n        //modificar registro\r\n        actualizarRegistro(persona: Issue){\r\n\r\n            const personaTemp = {\r\n                ...persona\r\n            };\r\n            delete personaTemp.id_tarea;\r\n\r\n            return this.http.post(`${this.url}/registro_update_detalle.php`, persona);  \r\n\r\n        }\r\n\r\n\r\n        actualizarRegistroSeguimiento(datoregistro) {\r\n            console.log(JSON.stringify(datoregistro));\r\n            return this.http.post(`${this.url}/registro_update_seguimiento.php`, JSON.stringify(datoregistro));\r\n        }\r\n\r\n\r\n\r\n        //obtener persona por id_tarea\r\n        getPerson( id_tarea:string ){\r\n            return this.http.get(`${ this.url}/registro_detalle.php?id_tarea=${ id_tarea }`);\r\n        }\r\n\r\n\r\n        delete(datosborrado){\r\n            console.log(datosborrado);\r\n            return this.http.post(`${this.url}/registro_seguimiento_borrado.php`,datosborrado);\r\n          }\r\n\r\n\r\n   \r\n          \r\n\r\n        // buscarPersonas( termino:string ){\r\n        //     let heroesArr:PersonaModel[] = [];\r\n        //     termino = termino.toLowerCase(); \r\n        //     //console.log('termino: ', heroesArr); \r\n\r\n        //     for( let i = 0; i < this.personas.length; i ++ ){  \r\n\r\n        //       let persona = this.personas[i];     \r\n        //       let nombre = persona.nombre.toLowerCase(); \r\n                  \r\n        //       if( nombre.indexOf( termino ) >= 0  ){\r\n        //         persona.idx = i;\r\n        //         heroesArr.push( persona )\r\n        //       }\r\n        //     }\r\n        //     return heroesArr; \r\n        //   }\r\n       \r\n \r\n    \r\n}\r\n\r\n//SI QUEREMOS ESPECIFICAR EL TIPO DE DATOS RECIBIDOS, por lo general ANY\r\n// export interface Heroe{\r\n//         nombre: string;\r\n//          bio: string;\r\n//          img: string;\r\n//          aparicion: string;\r\n//          casa: string;\r\n//          idx?: number\r\n// }\r\n\r\n","\r\n\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Issue } from '../models/issue';\r\nimport { Personas } from '../models/personas';\r\nimport { Seguimiento } from '../models/seguimiento';\r\n@Injectable(\r\n    {\r\n        providedIn:'root'\r\n    }\r\n)\r\n\r\n\r\nexport class DetalleHistoricoService {\r\n\r\n     //persons:any[] = [];\r\n \r\n        //definimos la url del servicio\r\n        private url = 'http://joraco.site:8081/b/ajax';\r\n\r\n\r\n\r\n        constructor( private http: HttpClient) {\r\n            // console.log(\"servicio listo para usar\");\r\n            // this.http.get('https://restcountries.eu/rest/v2/lang/es') //URL del servicio\r\n            // .subscribe( (resultados:any) => {\r\n            // this.persons = resultados;\r\n            // } );\r\n        }\r\n\r\n\r\n\r\n        //obtener persona por id\r\n        getDetalleHistorico( id_log:string ){\r\n            return this.http.get(`${ this.url}/registro_historico_detalle.php?id_log=${ id_log }`);\r\n        }\r\n\r\n\r\n        delete(datosborrado){\r\n            console.log(datosborrado);\r\n            return this.http.post(`${this.url}/registro_seguimiento_borrado.php`,datosborrado);\r\n          }\r\n\r\n\r\n \r\n    \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoricoService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n\n\n  delete(datosborrado){\n    console.log(datosborrado);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_historico_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeriodicidadService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n  altaRegistrochecks(datoregistro) {\n      console.log(JSON.stringify(datoregistro));\n      return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/periodicidad_crear.php`, JSON.stringify(datoregistro));\n  }\n\n  //obtener persona por id\n          getCheckeds( id_tarea:string ){\n            return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/periodicidad_detalle.php?id_tarea=${ id_tarea }`);\n        }\n\n  getDatosMadre( id_tarea ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/periodicidad_madre.php?id_tarea=${ id_tarea }`)\n    \n  }\n  \n\n//   modiRegistro(datos){\n//     console.log(datos);\n//     return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_update.php`, datos);   \n  \n//   }\n\n//   delete(datosborrado){\n//     console.log(datosborrado);\n//     return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_borrado.php`,datosborrado);\n//   }\n\n\ndelete(datosborrado){\n  console.log(datosborrado);\n  return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_diames_borrado.php`,datosborrado);\n}\n\n\n\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n@Injectable({\r\nprovidedIn: 'root'\r\n})\r\nexport class SharedService {\r\nprivate subject = new Subject<any>();\r\nsendClickEvent() {\r\n  this.subject.next();\r\n}\r\ngetClickEvent(): Observable<any>{ \r\n  return this.subject.asObservable();\r\n}\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Personas } from '../models/personas';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TurnosService {\n\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n  //obtener rol persona \n  getUserId( id_persona ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n  \n\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}