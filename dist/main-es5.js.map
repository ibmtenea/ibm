{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/components/ayuda/ayuda.component.ts","webpack:///src/app/components/ayuda/ayuda.component.html","webpack:///src/app/components/buscador/buscador.component.ts","webpack:///src/app/components/buscador/buscador.component.html","webpack:///src/app/components/chat/chat.component.ts","webpack:///src/app/components/chat/chat.component.html","webpack:///src/app/components/flotante/flotante.component.ts","webpack:///src/app/components/flotante/flotante.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/imagen/capturas.component.ts","webpack:///src/app/components/imagen/capturas.component.html","webpack:///src/app/components/imagen/modimagen.component.ts","webpack:///src/app/components/imagen/modimagen.component.html","webpack:///src/app/components/lista-usuarios/lista-usuarios.component.ts","webpack:///src/app/components/lista-usuarios/lista-usuarios.component.html","webpack:///src/app/components/menu/menu.component.ts","webpack:///src/app/components/menu/menu.component.html","webpack:///src/app/components/periodicidad/accion.component.ts","webpack:///src/app/components/periodicidad/accion.component.html","webpack:///src/app/components/periodicidad/accionhistorico.component.ts","webpack:///src/app/components/periodicidad/accionhistorico.component.html","webpack:///src/app/components/periodicidad/check.component.ts","webpack:///src/app/components/periodicidad/check.component.html","webpack:///src/app/guards/authguard.guard.ts","webpack:///src/app/guards/usuario-guard.service.ts","webpack:///src/app/models/accionpuntual.ts","webpack:///src/app/models/ayuda.ts","webpack:///src/app/models/constantes.model.ts","webpack:///src/app/models/incidencia.ts","webpack:///src/app/models/issue.ts","webpack:///src/app/models/issuehistorico.ts","webpack:///src/app/models/periodicidad.ts","webpack:///src/app/models/periodicidadmadre.ts","webpack:///src/app/models/personas.ts","webpack:///src/app/models/seguimiento.ts","webpack:///src/app/models/turnos.ts","webpack:///src/app/models/usuario.ts","webpack:///src/app/pages/abririncidencia.component.ts","webpack:///src/app/pages/abririncidencia.component.html","webpack:///src/app/pages/alta.component.ts","webpack:///src/app/pages/alta.component.html","webpack:///src/app/pages/configuracion.pages.ts","webpack:///src/app/pages/configuracion.pages.html","webpack:///src/app/pages/descarga.pages.ts","webpack:///src/app/pages/descarga.pages.html","webpack:///src/app/pages/detalle.component.ts","webpack:///src/app/pages/detalle.component.html","webpack:///src/app/pages/detallehistorico.component.ts","webpack:///src/app/pages/detallehistorico.component.html","webpack:///src/app/pages/detallepersona.component.ts","webpack:///src/app/pages/detallepersona.component.html","webpack:///src/app/pages/formularios/ayuda.component.ts","webpack:///src/app/pages/formularios/ayuda.component.html","webpack:///src/app/pages/formularios/configuracion-general.component.ts","webpack:///src/app/pages/formularios/configuracion-general.component.html","webpack:///src/app/pages/formularios/incidenciadetalle.component.ts","webpack:///src/app/pages/formularios/incidenciadetalle.component.html","webpack:///src/app/pages/formularios/incidencias.component.ts","webpack:///src/app/pages/formularios/incidencias.component.html","webpack:///src/app/pages/formularios/listados.component.ts","webpack:///src/app/pages/formularios/listados.component.html","webpack:///src/app/pages/formularios/roles.component.ts","webpack:///src/app/pages/formularios/roles.component.html","webpack:///src/app/pages/formularios/turnos.component.ts","webpack:///src/app/pages/formularios/turnos.component.html","webpack:///src/app/pages/historico.component.ts","webpack:///src/app/pages/historico.component.html","webpack:///src/app/pages/historicomini.component.ts","webpack:///src/app/pages/historicomini.component.html","webpack:///src/app/pages/home.component.ts","webpack:///src/app/pages/home.component.html","webpack:///src/app/pages/identificacion/identificacion.component.ts","webpack:///src/app/pages/identificacion/identificacion.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/mensajes/mensajes.component.ts","webpack:///src/app/pages/mensajes/mensajes.component.html","webpack:///src/app/pages/perfil.component.ts","webpack:///src/app/pages/perfil.component.html","webpack:///src/app/pages/personas.pages.ts","webpack:///src/app/pages/personas.pages.html","webpack:///src/app/pages/turnos/elegir.component.ts","webpack:///src/app/pages/turnos/elegir.component.html","webpack:///src/app/pages/turnos/homeget.component.ts","webpack:///src/app/pages/turnos/homeget.component.html","webpack:///src/app/services/admin-servicio.service.ts","webpack:///src/app/services/apipersonas.service.ts","webpack:///src/app/services/apiregistros.service.ts","webpack:///src/app/services/ayuda.service.ts","webpack:///src/app/services/chat.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/dataservice.service.ts","webpack:///src/app/services/detalle.service.ts","webpack:///src/app/services/detallehistorico.service.ts","webpack:///src/app/services/flotante.service.ts","webpack:///src/app/services/historico.service.ts","webpack:///src/app/services/incidencias.service.ts","webpack:///src/app/services/periodicidad.service.ts","webpack:///src/app/services/serviciocompartido.service.ts","webpack:///src/app/services/turnos.service.ts","webpack:///src/app/services/websocket.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","dataService","wsService","chatService","title","getLoggedInName","subscribe","nombres","changeName","isLoggedIn","console","log","loginbtn","logoutbtn","deleteToken","window","location","href","getMessagesPrivate","msg","selector","templateUrl","styleUrls","config","url","wsUrl","options","HttpLoaderFactory","http","AppModule","provide","useValue","forRoot","setLocale","useHash","loader","useFactory","deps","declarations","imports","entryComponents","providers","bootstrap","routes","path","component","canActivate","pathMatch","redirectTo","AyudaComponent","httpClient","modalService","ayudaService","contenidoayuda","PHP_API_SERVER","API_SERVER","modalOptions","backdrop","backdropClass","size","id_persona","localStorage","getItem","get","result","ayuda","open","closeResult","reason","getDismissReason","ESC","BACKDROP_CLICK","BuscadorComponent","ChatComponent","mensajes","elemento","document","getElementById","mensajesSubscription","getMessages","push","setTimeout","scrollTop","scrollHeight","unsubscribe","FlotanteComponent","router","flotanteService","user","isOn","getUserId","respuesta","FooterComponent","any","Date","getFullYear","HeaderComponent","translate","activatedRoute","addLangs","setDefaultLang","browserLang","getBrowserLang","use","match","removeItem","redirect","redirectUrl","navigate","Logout","CapturasComponent","fb","perioService","personas","fotopersona","imageSrc","accionForm","group","required","snapshot","paramMap","id_persona_log","cargaMadre","getFotografia","reload","file","dataTransfer","files","target","pattern","reader","FileReader","type","alert","onload","_handleReaderLoaded","bind","readAsDataURL","datosFoto","JSON","stringify","altaRegistroFoto","fire","text","icon","showConfirmButton","recarga","handleInputChange","ModimagenComponent","ListaUsuariosComponent","usuariosActivosObs","getUsuariosActivos","emitirUsuariosActivos","MenuComponent","servicioCompartido","show","clickEventsubscription","getClickEvent","incrementCount","checked","AccionComponent","registro","registroRetorno","periodicidades","datoregistro","id_seguimiento","id_tarea","mad","mesActual","now","diasMes","tramosSemana","tramosMes","diasSemana","mesVigente","getMonth","error","checkArrayt","array","fechafin","repeticiones","id_categoria","every","val","forEach","getDatosMadre","madre","identificacion","datosborrado","value","i","controls","item","removeAt","borrarRegistro","valormes","altaRegistrochecks","submitForm","AccionHistoricoComponent","setValue","CheckComponent","accionFormCheck","AuthguardGuard","route","state","routeurl","isLogin","queryParams","returnUrl","providedIn","UsuarioGuardService","getUsuario","navigateByUrl","ModeloAccionPuntual","Ayuda","Constantes","nombreTurnos","ARND","Math","floor","random","BRND","CRND","DRND","Incidencia","Issue","IssueHistorico","ModeloPeriodicidad","PeriodicidadMadre","Personas","Seguimiento","Turnos","Usuario","nombre","AbririncidenciaComponent","formBuilder","adminService","personasdatos","incidenciadatos","incidenciaForm","enunciado","textoincidencia","imagenincidencia","tokenIncidencia","getPersonas","minLength","maxLength","length","imagePath","_event","imgURL","characters","charactersLength","charAt","form","valid","makeid","peticion","guardarNuevancidencia","guardaryenviarIncidencia","preview","styles","AltaComponent","apiService","Editor","roles","estados","categorias","issue","editing","rows","temp","dregistro","tarea","hora","estatus","observaciones","flag_visibilidad","prioridad","id_rol","ColumnMode","editor","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","altaRegistro","datos","getLastId","identif","slice","identificador","onReady","ConfiguracionPage","DescargaPage","DetalleComponent","registroService","dregistroa","registropersona","recurrencias","suscripcion","dias","name","getPerson","periodetalle","undefined","decidecategoria","periodcate","content","ariaLabelledBy","patronHora","horaResult","test","actualizarRegistro","actualizarRegistroSeguimiento","showCancelButton","guardarregistro","DetalleHistoricoComponent","id_log","getDetalleHistorico","DetallePersona","telefono","email","direccion","registrado","password","imagen","fieldTextType","patronEmail","emailResult","patronPassword","passwordResult","toggleFieldTextType","AyudaFormComponent","ayudas","datosformularioayuda","ayudatitulo","ayudatexto","datosformulariomodi","getDismissReasonA","contentmodi","id_ayuda","getDismissReasonB","edicionAyuda","getAyuda","guardarNewAyuda","guardarAyudaModificado","datosborradoAyuda","deleteAyuda","openayuda","ConfiguracionGeneralComponent","IncidenciadetalleComponent","incidenciasService","isSubmitted","resolverSubmit","id_incidencias","token_incidencia","getDetalleIncidencia","valor","guardarIncidencia","onSubmit","IncidenciasComponent","spinner","fecha","issueg","descripcion_accion","hour","status","fetch","data","hide","cb","XMLHttpRequest","parse","response","send","event","toLowerCase","filter","d","indexOf","resuelta","fecharesuelta","table","offset","updateFilter","ListadosComponent","RolesFormComponent","datosformulario","rol_level","rol_name","roldescripcion","guardarRol","deleteRol","openroles","TurnosFormComponent","turnos","datosformularioturno","horainicio","horafin","turno","tipo_turno","turno_horario","horaResulinicio","horaResultfin","hoy","int","inicio","fnt","fin","ngOnInit","guardarTurno","datosborradoturno","id_turno","deleteTurno","openturnos","HistoricoComponent","historicoService","HistoricoMiniComponent","HomeComponent","registroRoleService","registroroleperson","IdentificacionComponent","loginWS","ingresar","LoginComponent","mail","angForm","keysToRemove","key","userlogin","pipe","postdata","MensajesComponent","PerfilPersona","PersonasPage","emailvalida","mailexiste","validaEmail","datosMail","cell","rowIndex","campo","ever","modiRegistro","ElegirTurno","turnosService","turnoValor","reactiveFormTurnos","my_messages","turnoestablecido","res","totalMessage","emptyMessage","getTurnosbyID","getTurnosReadByRol","listaturnos","orden","datosclon","actualizarRegistroNuevaId","HomeGetComponent","getmyProp","getmyNewValue","setItem","column","prop","newValue","onSort","AdminServicioService","post","ApiPersonas","persona","personaTemp","ApiService","AyudaService","ChatService","mensaje","payload","de","cuerpo","emit","listen","DataService","dataChange","dialogData","next","message","DataserviceService","leftCypt","toString","substr","rightCypt","aRndm","bRndm","cRndm","dRndm","rand","token","username","Usermodule","id_persona_mask","setToken","setID","setIDrol","usertoken","getToken","idtoken","getID","DetalleService","DetalleHistoricoService","FlotanteService","HistoricoService","IncidenciasService","PeriodicidadService","SharedService","subject","asObservable","TurnosService","datosturnos","WebsocketService","socket","socketStatus","usuario","cargarStorage","checkStatus","on","evento","callback","fromEvent","reject","resp","guardarStorage","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport { DataserviceService } from './services/dataservice.service';\nimport { WebsocketService } from './services/websocket.service';\nimport { ChatService } from './services/chat.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  implements OnInit {\n  title = 'check';\n\n          loginbtn:boolean;\n          logoutbtn:boolean;\n          constructor(private dataService: DataserviceService, public wsService: WebsocketService, public chatService: ChatService) {\n            dataService.getLoggedInName.subscribe(nombres => this.changeName(nombres));\n            if(this.dataService.isLoggedIn())\n            {\n              console.log(\"loggedin\");\n              this.loginbtn=false;\n              this.logoutbtn=true\n            }\n            else{\n            this.loginbtn=true;\n            this.logoutbtn=false\n            }\n        \n        \n        }\n        private changeName(nombres: boolean): void {\n          this.logoutbtn = nombres;\n          this.loginbtn = !nombres;\n        }\n        logout()\n        {\n          this.dataService.deleteToken();\n          window.location.href = window.location.href;\n        }\n\n\n        ngOnInit(){\n          this.chatService.getMessagesPrivate().subscribe( msg =>{\n            console.log(msg);\n          });\n        }\n\n}\n","<div class=\"container-fluid\">\n  <router-outlet></router-outlet>\n\n    <app-flotante></app-flotante>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { routes } from './app.routes';\r\n//import { AppRoutingModule } from './app.routes';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { DataService } from './services/data.service';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { HomeComponent } from './pages/home.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { BuscadorComponent } from './components/buscador/buscador.component';\r\n\r\nimport { PersonasPage } from './pages/personas.pages';\r\n\r\nimport { DescargaPage } from './pages/descarga.pages';\r\nimport { ConfiguracionPage } from './pages/configuracion.pages';\r\n\r\nimport { DetalleComponent } from './pages/detalle.component';\r\n\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\n\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {environment} from '../environments/environment';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\r\nimport { AltaComponent } from './pages/alta.component';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { NgxFullCalendarModule } from 'ngx-fullcalendar';\r\nimport { CheckComponent } from './components/periodicidad/check.component';\r\nimport { AccionComponent } from './components/periodicidad/accion.component';\r\nimport { AccionHistoricoComponent } from './components/periodicidad/accionhistorico.component';\r\nimport { HistoricoComponent } from './pages/historico.component';\r\nimport { DetalleHistoricoComponent } from './pages/detallehistorico.component';\r\nimport { DetallePersona } from './pages/detallepersona.component';\r\nimport { ModimagenComponent } from './components/imagen/modimagen.component';\r\nimport { CapturasComponent } from './components/imagen/capturas.component';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport {JpImagePreloadModule} from '@jaspero/ng-image-preload';\r\nimport { PerfilPersona } from './pages/perfil.component';\r\nimport { AyudaComponent } from './components/ayuda/ayuda.component';\r\nimport { ElegirTurno } from './pages/turnos/elegir.component';\r\nimport { HomeGetComponent } from './pages/turnos/homeget.component';\r\nimport { FlotanteComponent } from './components/flotante/flotante.component';\r\nimport { MensajesComponent } from './pages/mensajes/mensajes.component';\r\nimport { ListaUsuariosComponent } from './components/lista-usuarios/lista-usuarios.component';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\r\nimport { IdentificacionComponent } from './pages/identificacion/identificacion.component';\r\nimport { HistoricoMiniComponent } from './pages/historicomini.component';\r\n\r\nimport { ConfiguracionGeneralComponent } from './pages/formularios/configuracion-general.component';\r\nimport { AyudaFormComponent } from './pages/formularios/ayuda.component';\r\nimport { RolesFormComponent } from './pages/formularios/roles.component';\r\nimport { TurnosFormComponent } from './pages/formularios/turnos.component';\r\nimport { ListadosComponent } from './pages/formularios/listados.component';\r\nimport { AbririncidenciaComponent } from './pages/abririncidencia.component';\r\nimport { IncidenciasComponent } from './pages/formularios/incidencias.component';\r\nimport { IncidenciadetalleComponent } from './pages/formularios/incidenciadetalle.component';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nconst config: SocketIoConfig = { url: environment.wsUrl, options: {} };\r\n\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n\r\n    ChatComponent,\r\n    ListaUsuariosComponent,\r\n    MensajesComponent,\r\n    IdentificacionComponent,\r\n    AppComponent,\r\n    HomeGetComponent,\r\n    HistoricoMiniComponent,\r\nCheckComponent,\r\n    HomeComponent,\r\n    DetalleComponent,\r\n    LoginComponent,\r\n    FlotanteComponent,\r\n    DetalleHistoricoComponent,\r\n  AccionComponent,\r\n  ModimagenComponent,\r\n  CapturasComponent,\r\n  AccionHistoricoComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    MenuComponent,\r\n    BuscadorComponent,\r\n    PersonasPage,\r\nHistoricoComponent,\r\n    DescargaPage,\r\n    ConfiguracionPage,\r\n    ElegirTurno,\r\n    AltaComponent,\r\n    DetallePersona,\r\n    PerfilPersona,\r\nAyudaComponent,\r\nAyudaFormComponent,\r\nRolesFormComponent,\r\nTurnosFormComponent,\r\nConfiguracionGeneralComponent,\r\nListadosComponent,\r\nAbririncidenciaComponent,\r\nIncidenciasComponent,\r\nIncidenciadetalleComponent\r\n    \r\n\r\n \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgxSpinnerModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    DragDropModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    JpImagePreloadModule.forRoot(),\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    NgxFullCalendarModule,\r\n    MatPaginatorModule,\r\n    [NgxMaterialTimepickerModule.setLocale('es-419')],\r\n    FormsModule,\r\n    NgxDatatableModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    //RouterModule.forRoot( routes ),\r\n    RouterModule.forRoot(routes, { useHash: true }),\r\n    ToastrModule.forRoot(),\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    SocketIoModule.forRoot(config),\r\n    CKEditorModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  entryComponents: [],\r\n  exports: [\r\n    RouterModule,\r\n  ],\r\n  providers: [\r\n\r\n    DataService,\r\n    { provide: LOCALE_ID, useValue: 'es' }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","\r\nimport { Routes} from '@angular/router';\r\n\r\nimport { HomeComponent } from './pages/home.component';\r\nimport { DetalleComponent } from './pages/detalle.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nimport { PersonasPage } from './pages/personas.pages';\r\nimport { AltaComponent } from './pages/alta.component';\r\nimport { HistoricoComponent } from './pages/historico.component';\r\nimport { DetalleHistoricoComponent } from './pages/detallehistorico.component';\r\nimport { DetallePersona } from './pages/detallepersona.component';\r\nimport { AuthguardGuard } from './guards/authguard.guard';\r\nimport { PerfilPersona } from './pages/perfil.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { AyudaComponent } from './components/ayuda/ayuda.component';\r\nimport { ElegirTurno } from './pages/turnos/elegir.component';\r\n\r\nimport { MensajesComponent } from './pages/mensajes/mensajes.component';\r\nimport { UsuarioGuardService } from './guards/usuario-guard.service';\r\nimport { IdentificacionComponent } from './pages/identificacion/identificacion.component';\r\nimport { ConfiguracionGeneralComponent } from './pages/formularios/configuracion-general.component';\r\nimport { AyudaFormComponent } from './pages/formularios/ayuda.component';\r\nimport { RolesFormComponent } from './pages/formularios/roles.component';\r\nimport { TurnosFormComponent } from './pages/formularios/turnos.component';\r\nimport { ListadosComponent } from './pages/formularios/listados.component';\r\nimport { AbririncidenciaComponent } from './pages/abririncidencia.component';\r\nimport { HomeGetComponent } from './pages/turnos/homeget.component';\r\nimport { IncidenciasComponent } from './pages/formularios/incidencias.component';\r\nimport { IncidenciadetalleComponent } from './pages/formularios/incidenciadetalle.component';\r\n\r\n\r\n\r\nexport const routes: Routes = [\r\n  { path: 'ayuda' , component: AyudaComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'elegirturno' , component: ElegirTurno, canActivate: [ AuthguardGuard ] },\r\n  { path: 'homeget' , component: HomeGetComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'home' , component: HomeComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'alta' , component: AltaComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'personas' , component: PersonasPage, canActivate: [ AuthguardGuard ] },\r\n  { path: 'perfil/:id_persona' , component: PerfilPersona, canActivate: [ AuthguardGuard ] },\r\n  { path: 'incidenciadetalle/:token_incidencia' , component: IncidenciadetalleComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'detallepersona/:id_persona' , component: DetallePersona, canActivate: [ AuthguardGuard ] },\r\n  { path: 'historico' , component: HistoricoComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'detallehistorico/:id_log' , component: DetalleHistoricoComponent, canActivate: [ AuthguardGuard ] },\r\n  { path: 'detalle/:id_tarea' , component: DetalleComponent, canActivate: [ AuthguardGuard ]},\r\n  { path: 'formlistados' , component: ListadosComponent, canActivate: [ AuthguardGuard ]},\r\n  { path: 'abririncidencia' , component: AbririncidenciaComponent, canActivate: [ AuthguardGuard ]},\r\n  { path: 'incidencias' , component: IncidenciasComponent, canActivate: [ AuthguardGuard ]},\r\n\r\n  // { path: 'formroles' , component: RolesFormComponent, canActivate: [ AuthguardGuard ]},\r\n  // { path: 'formturnos' , component: TurnosFormComponent, canActivate: [ AuthguardGuard ]},\r\n  { path: 'configuraciongeneral' , component: ConfiguracionGeneralComponent, canActivate: [ AuthguardGuard ]},\r\n\r\n  { path: 'login'   , component: LoginComponent },\r\n  { path: 'identificacion'   , component: IdentificacionComponent },\r\n  { path: 'mensajes', component: MensajesComponent, canActivate: [ UsuarioGuardService ] },\r\n  { path: '', pathMatch: 'full', redirectTo: '/login'},\r\n  { path: '**', redirectTo: '/login' }\r\n];\r\n\r\n\r\n//export class AppRoutingModule { }\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\n  \nimport {NgbModal, ModalDismissReasons, NgbModalOptions} from '@ng-bootstrap/ng-bootstrap';\nimport { AyudaService } from '../../services/ayuda.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Ayuda } from '../../models/ayuda';\nimport { Constantes } from '../../models/constantes.model';\n  \n@Component({\n  selector: 'app-ayuda',\n  templateUrl: './ayuda.component.html'\n})\nexport class AyudaComponent  implements OnInit {\n  title = 'Ayuda';\n\n  \n  contenidoayuda: Ayuda[] = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  closeResult: string;\n  modalOptions:NgbModalOptions;\n  constructor(private httpClient: HttpClient,private modalService: NgbModal, private ayudaService: AyudaService) {\n\n    this.modalOptions = {\n      backdrop:'static',\n      backdropClass:'customBackdrop',\n      size: 'lg' \n    }\n\n  }\n  \n  ngOnInit(){\n    const id_persona = localStorage.getItem('id_persona');\n\n    //cargo el listado \n    this.httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_ayuda.php?id_persona=' + id_persona)\n    .subscribe(result => {\n      this.contenidoayuda = result;\n    });\n\n\n  }\n\n  open(ayuda) {\n    this.modalService.open(ayuda, this.modalOptions).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n\n\n\n\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  \n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n}","<a \n        \ntitle=\"Ayuda\"\n(click)=\"open(ayuda)\"\nclass=\"nav-link pointerplus\"\n><i class=\"fa fa-question-circle mr-1 fa-1g\"></i>\nAyuda\n</a>\n\n\n\n<ng-template #ayuda let-modal class=\"modal-lg\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Ayuda</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n      <span aria-hidden=\"true\">×</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n\n    <div *ngFor=\"let contenido of contenidoayuda\">\n\n    <div id=\"card-966405\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                 <a class=\"card-link collapsed\" \n                 data-toggle=\"collapse\" \n                 data-parent=\"#card-966405\" \n                 href=\"#card-element-{{contenido.numauto}}\">{{contenido.ayudatitulo}}</a>\n            </div>\n            <div id=\"card-element-{{contenido.numauto}}\" class=\"collapse\">\n                <div class=\"card-body\">\n                    {{contenido.ayudatexto}}\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Cerrar</button>\n  </div>\n</ng-template>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-buscador',\r\n    templateUrl: './buscador.component.html'\r\n})\r\n\r\nexport class BuscadorComponent {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"row mb-4\">\r\n    <div class=\"col-md-12 flex-column text-center ml-2 mr-3\">\r\n    <form class=\"form-inline\">\r\n      <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"{{ 'txtSearch' | translate }}\" /> \r\n      <button class=\"btn btn-info my-2 my-sm-0 btn-circle\" type=\"submit\">\r\n        <i class=\"fa  fa-search\"></i>\r\n      </button>\r\n    </form>\r\n  </div>\r\n  </div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ChatService } from '../../services/chat.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html'\n  \n})\nexport class ChatComponent implements OnInit, OnDestroy {\n\n  texto: string;\n  mensajesSubscription: Subscription;\n  elemento: HTMLElement;\n\n  mensajes: any[] = [];\n\n  constructor(public chatService: ChatService) { }\n\n  ngOnInit() {\n    this.elemento = document.getElementById('chat-mensajes');\n    this.mensajesSubscription = this.chatService.getMessages()\n                                          .subscribe(msg => {\n                                            this.mensajes.push( msg );\n                                            setTimeout(() =>{\n                                                this.elemento.scrollTop = this.elemento.scrollHeight;\n                                            },50);\n                                          });\n  }\n\nngOnDestroy(){\nthis.mensajesSubscription.unsubscribe;\n}\n  \n\n\n  \n\n}\n","\n<div id=\"chat-mensajes\">\n \n    <li class=\"list-group-item\" *ngFor=\"let msg of mensajes\" >\n           {{ msg.de }}: {{ msg.cuerpo }}\n    </li>\n  \n    <app-historicomini></app-historicomini>\n\n</div>\n\n<!-- <form (ngSubmit) = \"enviar()\">\n<input type=\"text\" \n        [(ngModel)]=\"texto\"\n        class=\"form-control chat-input\"\n        name=\"texto\"\n        placeholder=\"Mensaje\"\n        autofocusautocomplete=\"off\">\n\n</form> -->","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Personas } from '../../models/personas';\r\nimport { FlotanteService } from '../../services/flotante.service';\r\nimport { empty } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-flotante',\r\n    templateUrl: './flotante.component.html'\r\n})\r\n\r\nexport class FlotanteComponent implements OnInit {\r\n    user:Personas = new Personas();\r\n\r\n    isOn = true;\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private router:Router,\r\n        private flotanteService: FlotanteService\r\n        ){\r\n\r\n            if(localStorage.getItem('id_persona')!=null){\r\n                    const id_persona = localStorage.getItem('id_persona');\r\n                    this.flotanteService.getUserId ( id_persona )\r\n                    .subscribe( (respuesta:Personas) => {\r\n                        this.user = respuesta;\r\n                    });\r\n            }\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n  \r\n    cerrarConsola(){\r\n        \r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","\r\n\r\n  <ng-container *ngIf=\"user.level_rol === '8' && isOn\"> \r\n\r\n  \r\n  <div class=\"example-box\" cdkDrag>\r\n    <div class=\"flotante accordion-icons\" id=\"card-9668745984\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\" title=\"Arrastra para recolocar la consola\" alt=\"Arrastra para recolocar la consola\" id=\"cabeceraDraggable\">\r\n        <div class=\"row\">\r\n          <div class=\"col-11 their\"><h4>Consola de actividad</h4></div>\r\n          <div class=\"col-1 text-right\">\r\n\r\n          \r\n<div class=\"row\">\r\n          <div class=\"col-6 text-right botona \"> \r\n            <a class=\"card-link rightfloat\" \r\n            data-toggle=\"collapse\" \r\n            data-parent=\"#card-9668745984\" \r\n            href=\"#card-element-57874457742\"> \r\n            </a>\r\n           </div>\r\n          <div class=\"col-6 text-right botonb pt-1\">\r\n                <a href=\"#\" class=\"card-link rightfloat\" (click)=\"isOn= false\"></a>\r\n          </div>\r\n</div> \r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div id=\"card-element-57874457742\" class=\"collapse show\">\r\n          <div class=\"card-body overscroll\">\r\n\r\n            \r\n<app-mensajes></app-mensajes>\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<div class=\"row \">\r\n  <div class=\"col-12 footer text-center\">\r\n     <p *ngIf=\"user.level_rol === '8' && !isOn\"><button (click)=\"isOn= true\">+ abrir consola</button></p>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DataserviceService } from '../../services/dataservice.service';\r\nimport { WebsocketService } from '../../services/websocket.service';\r\n@Component({\r\n    selector: 'app-footer',\r\n    templateUrl: './footer.component.html'\r\n})\r\n\r\nexport class FooterComponent {\r\n    any: number;\r\n \r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private router:Router,\r\n        private dataService: DataserviceService,\r\n        public wsService: WebsocketService\r\n        ){\r\n        this.any = new Date().getFullYear();\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n","\r\n<div class=\"row \">\r\n    <div class=\"col-9 footer bg-dark text-center  text-white\">\r\n\r\n   \r\n          &copy; 2020 - {{ any }}\r\n    </div>\r\n    <div class=\"col-3 footer bg-dark text-center  text-white\">\r\n      Status servidor: \r\n      <span *ngIf=\"wsService.socketStatus\" class=\"text-success\">Online</span>\r\n      <span *ngIf=\"!wsService.socketStatus\"  class=\"text-danger\">Offline</span>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataserviceService } from '../../services/dataservice.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html'\r\n})\r\n\r\nexport class HeaderComponent {\r\n    \r\n  title = 'ng-bootstrap-modal-demo';\r\n\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private dataService: DataserviceService,\r\n        private router:Router,\r\n        private activatedRoute: ActivatedRoute\r\n        ){\r\n        this.translate.addLangs(['es','ca','en']);\r\n        this.translate.setDefaultLang('es');\r\n        const browserLang = translate.getBrowserLang();\r\n        translate.use(browserLang.match(/es|ca|en/) ? browserLang : 'es');\r\n        }\r\n\r\n\r\n        Logout() {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('id_rol');\r\n            localStorage.removeItem('id_persona');\r\n            localStorage.removeItem('valorTurno');\r\n            const redirect = this.dataService.redirectUrl ? this.dataService.redirectUrl : '/login';\r\n                        this.router.navigate([redirect]);\r\n          }\r\n\r\n}\r\n\r\n\r\n","<div class=\"row\">\r\n  <div class=\"col-12 bg-dark\">\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <a class=\"navbar-brand\" href=\"#\">CheckList</a>\r\n\r\n      <!-- Toggle button -->\r\n      <button\r\n        id=\"sidebarCollapse\"\r\n        data-toggle=\"collapse\"\r\n        type=\"button\"\r\n        class=\"navbar-toggler navbar-toggler-right\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n        <ul class=\"navbar-nav ml-md-auto\">\r\n\r\n          <li class=\"nav-item\">\r\n            <a  [routerLink]=\"['/', 'abririncidencia']\"  class=\"nav-link\" alt=\"Abrir incidencia\" title=\"Abrir incidencia\">\r\n              Enviar incidencia\r\n            </a>\r\n          </li>\r\n\r\n\r\n          <li class=\"nav-item\">\r\n\r\n         <app-ayuda></app-ayuda>\r\n\r\n\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\" (click)=\"Logout()\">\r\n              <i class=\"fa fa-times-circle mr-1 fa-1g\"></i>\r\n              {{ \"txtSalir\" | translate }}\r\n            </a>\r\n          </li>\r\n\r\n          <li class=\"nav-item\">\r\n            <div>\r\n              <label>\r\n                <select\r\n                  class=\"form-control form-control-sm moresmall mt-2 ml-4\"\r\n                  #langSelect\r\n                  (change)=\"translate.use(langSelect.value)\"\r\n                >\r\n                  <option\r\n                    *ngFor=\"let lang of translate.getLangs()\"\r\n                    [value]=\"lang\"\r\n                    [selected]=\"lang === translate.currentLang\"\r\n                    >{{ lang }}</option\r\n                  >\r\n                </select>\r\n              </label>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<ng-template #content let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">\r\n      Nueva entrada de FAQs\r\n    </h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"form-group\">\r\n      <input\r\n        name=\"id_persona_log\"\r\n        type=\"hidden\"\r\n        #id_persona_log=\"ngModel\"\r\n        [(ngModel)]=\"datosformularioayuda.id_persona_log\"\r\n      />\r\n      <label for=\"ayudatitulo\">Escriba un título</label>\r\n      <input\r\n      name=\"ayudatitulo\"\r\n      type=\"text\"\r\n      maxlength=\"100\"\r\n      #ayudatitulo=\"ngModel\"\r\n      class=\"form-control  mb-2\"\r\n      [(ngModel)]=\"datosformularioayuda.ayudatitulo\"\r\n      />\r\n\r\n      <p>Texto (máx 650 carácteres)</p>\r\n      <div class=\"input-group\">\r\n          <textarea rows=\"10\" \r\n          required \r\n          class=\"form-control  mb-2\" \r\n          maxlength=\"650\"\r\n          name=\"ayudatexto\" \r\n          #ayudatexto=\"ngModel\" \r\n          [(ngModel)]=\"datosformularioayuda.ayudatexto\"></textarea>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button (click)=\"guardarNuevaAyuda()\" class=\"btn btn-info\">\r\n      Guardar registro\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { Personas } from '../../models/personas';\r\nimport { ApiPersonas } from '../../services/apipersonas.service';\r\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\r\nimport { JpPreloadService } from '@jaspero/ng-image-preload';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-capturas',\r\n  templateUrl: './capturas.component.html'\r\n})\r\n\r\nexport class CapturasComponent implements OnInit {\r\n\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  personas: Personas[] = [];\r\n  fotopersona:Personas = new Personas();\r\n  accionForm: FormGroup;\r\n  private imageSrc: string = '';\r\n  datosFoto: string;\r\n    constructor(\r\n      private fb: FormBuilder, \r\n      private activatedRoute: ActivatedRoute, \r\n      private httpClient: HttpClient, \r\n      private perioService: ApiPersonas\r\n\r\n      ) {\r\n        \r\n\r\n        //modificar valores por defecto en la pagina de insercion TODO\r\n        this.accionForm = this.fb.group({\r\n\r\n          fotopersona: ['', Validators.required],\r\n          id_persona: this.activatedRoute.snapshot.paramMap.get('id_persona'),\r\n          id_persona_log: localStorage.getItem('id_persona'),\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n      this.cargaMadre();\r\n   \r\n  }\r\n  \r\n\r\n  cargaMadre(){\r\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona')\r\n    this.perioService.getFotografia(id_persona).subscribe( (respuesta: Personas) => {\r\n    this.fotopersona = respuesta;\r\n    //this.accionForm.controls['fechafin'].setValue(this.fotopersona[0]['imagen']);\r\n    \r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  handleInputChange(e) {\r\n    var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    var pattern = /image-*/;\r\n    var reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('invalid format');\r\n      return;\r\n    }\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n  _handleReaderLoaded(e) {\r\n    let reader = e.target;\r\n    this.imageSrc = reader.result;\r\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona')\r\n    \r\n    const id_persona_log = localStorage.getItem('id_persona')\r\n\r\n    this.datosFoto = JSON.stringify({ \"id_persona_log\": id_persona_log ,\"id_persona\": id_persona , \"fotopersona\": this.imageSrc});\r\n    this.perioService.altaRegistroFoto(this.datosFoto).subscribe();\r\n    \r\n    Swal.fire({\r\n      text: 'Foto actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    , this.recarga()\r\n    ;\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n   submitForm() {\r\n\r\n    // // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    // // const id_tarea: FormControl = this.accionForm.get('id_persona') as FormControl;\r\n\r\n    // this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    // Swal.fire({\r\n    //   text: 'Foto actualizada',\r\n    //   icon: 'success',\r\n    //   showConfirmButton: false\r\n    // })\r\n    // , this.recarga()\r\n    // ;\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","\r\n<div class=\"row\">\r\n  <div class=\"col-12 text-center mt-4\">\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" novalidate>\r\n  <input type=\"hidden\" class=\"form-control\"  name=\"id_persona\"  formControlName=\"id_persona\"  />\r\n  <label class=\"fileContainer\"><i class=\"fa fa-camera\"></i>\r\n\r\n  <input \r\n         type=\"file\"\r\n         name=\"fotopersona\"  \r\n         formControlName=\"fotopersona\"\r\n         (change)=\"handleInputChange($event)\"\r\n         accept=\"image/*\" \r\n         \r\n         />\r\n\r\n </label>\r\n</form>\r\n</div>\r\n</div>","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { Personas } from '../../models/personas';\r\nimport { ApiPersonas } from '../../services/apipersonas.service';\r\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\r\nimport { JpPreloadService } from '@jaspero/ng-image-preload';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-modimagen',\r\n  templateUrl: './modimagen.component.html'\r\n})\r\n\r\nexport class ModimagenComponent implements OnInit {\r\n\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  personas: Personas[] = [];\r\n  fotopersona:Personas = new Personas();\r\n  accionForm: FormGroup;\r\n  private imageSrc: string = '';\r\n  datosFoto: string;\r\n    constructor(\r\n      private fb: FormBuilder, \r\n      private activatedRoute: ActivatedRoute, \r\n      private httpClient: HttpClient, \r\n      private perioService: ApiPersonas\r\n\r\n      ) {\r\n        \r\n\r\n        //modificar valores por defecto en la pagina de insercion TODO\r\n        this.accionForm = this.fb.group({\r\n\r\n          fotopersona: ['', Validators.required],\r\n          id_persona: localStorage.getItem('id_persona'),\r\n          id_persona_log: localStorage.getItem('id_persona'),\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n      this.cargaMadre();\r\n   \r\n  }\r\n  \r\n\r\n  cargaMadre(){\r\n    const id_persona = localStorage.getItem('id_persona')\r\n    this.perioService.getFotografia(id_persona).subscribe( (respuesta: Personas) => {\r\n    this.fotopersona = respuesta;\r\n    //this.accionForm.controls['fechafin'].setValue(this.fotopersona[0]['imagen']);\r\n    \r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  handleInputChange(e) {\r\n    var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    var pattern = /image-*/;\r\n    var reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('invalid format');\r\n      return;\r\n    }\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n  _handleReaderLoaded(e) {\r\n    let reader = e.target;\r\n    this.imageSrc = reader.result;\r\n    const id_persona = localStorage.getItem('id_persona')\r\n    \r\n    const id_persona_log = localStorage.getItem('id_persona')\r\n\r\n    this.datosFoto = JSON.stringify({ \"id_persona_log\": id_persona_log ,\"id_persona\": id_persona , \"fotopersona\": this.imageSrc});\r\n    this.perioService.altaRegistroFoto(this.datosFoto).subscribe();\r\n    \r\n    Swal.fire({\r\n      text: 'Foto actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    , this.recarga()\r\n    ;\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n   submitForm() {\r\n\r\n    // // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    // // const id_tarea: FormControl = this.accionForm.get('id_persona') as FormControl;\r\n\r\n    // this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    // Swal.fire({\r\n    //   text: 'Foto actualizada',\r\n    //   icon: 'success',\r\n    //   showConfirmButton: false\r\n    // })\r\n    // , this.recarga()\r\n    // ;\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","          \r\n  <div class=\"block\" *ngIf=\"fotopersona.imagen==''\">\r\n    <img \r\n    class=\"nofoto animate fadeIn\" \r\n    src=\"./assets/nophoto.jpg\" \r\n    >\r\n  </div> \r\n\r\n \r\n   <div class=\"block\" *ngIf=\"fotopersona.imagen\">\r\n    <img \r\n    class=\"perfildetalle animate fadeIn\" \r\n    src=\"./assets/loader.gif\" \r\n    jpPreload=\"{{fotopersona.imagen}}\">\r\n  </div>\r\n  \r\n\r\n\r\n\r\n\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12 text-center mt-4\">\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" novalidate>\r\n  <input type=\"hidden\" class=\"form-control\"  name=\"id_persona\"  formControlName=\"id_persona\"  />\r\n  <label class=\"fileContainer\"><i class=\"fa fa-camera\"></i>\r\n\r\n  <input \r\n         type=\"file\"\r\n         name=\"fotopersona\"  \r\n         formControlName=\"fotopersona\"\r\n         (change)=\"handleInputChange($event)\"\r\n         accept=\"image/*\" \r\n         \r\n         />\r\n\r\n </label>\r\n</form>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../../services/chat.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-lista-usuarios',\n  templateUrl: './lista-usuarios.component.html'\n  \n})\nexport class ListaUsuariosComponent implements OnInit {\n\n\n  usuariosActivosObs: Observable<any>;\n\n\n  constructor(public chatService: ChatService) { }\n\n  ngOnInit() {\n\n    this.usuariosActivosObs = this.chatService.getUsuariosActivos();\n\n\n    //emitir obtener usuarios\n    this.chatService.emitirUsuariosActivos();\n  }\n\n}\n","<h1>usuarios</h1>\n\n<hr />\n<ul class=\"list-group\">\n    <li class=\"list-group-item\"\n    *ngFor=\"let usuario of usuariosActivosObs | async\">\n    {{ usuario.nombre}}\n    <span class=\"badge badge-primary\">{{ usuario.sala}}</span>\n    <span  class=\"badge badge-info\">{{ usuario.id}}</span>\n    </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\r\nimport { HAMMER_LOADER } from '@angular/platform-browser';\r\n\r\n\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { DataserviceService } from '../../services/dataservice.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Usermodule } from '../../models/usuario.model';\r\n\r\nimport { Personas } from '../../models/personas';\r\nimport { Roles } from '../../models/roles';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SharedService } from '../../services/serviciocompartido.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n    selector: 'app-menu',\r\n    templateUrl: './menu.component.html',\r\n    styleUrls: ['./menu.component.css']\r\n})\r\n\r\n\r\n\r\n\r\nexport class MenuComponent implements OnInit{\r\n\r\nclickEventsubscription:Subscription;\r\nuser:Personas = new Personas();\r\n\r\nPHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\nconstructor(private httpClient: HttpClient,private servicioCompartido: SharedService, private dataService: DataserviceService,private router:Router){\r\n\r\n    this.clickEventsubscription=this.servicioCompartido.getClickEvent().subscribe(()=>{\r\n        this.incrementCount();\r\n        })\r\n\r\n }\r\n public show:boolean = false;\r\n\r\n        ngOnInit(){\r\n            const id_persona = localStorage.getItem('id_persona');\r\n            this.dataService.getUserId ( localStorage.getItem('id_persona') )\r\n              .subscribe( (respuesta:Personas) => {\r\n                 this.user = respuesta;\r\n                this.user.id_persona=localStorage.getItem('id_persona');\r\n              });\r\n        }\r\n\r\n        \r\n\r\n        incrementCount(){\r\n            this.show = !this.show;\r\n        }\r\n\r\n\r\n}\r\n","<!-- Vertical navbar -->\r\n<div class=\"vertical-nav bg-white\" id=\"sidebar\">\r\n  <div class=\"py-4 px-3 mb-4 bg-light\">\r\n    <div class=\"media d-flex align-items-center\">\r\n\r\n\r\n\r\n\r\n      <div  *ngIf=\"user.imagen==null \">\r\n        <img \r\n        src=\"./assets/nophoto.jpg\" \r\n        width=\"75\"\r\n        class=\"mr-3 rounded-circle img-thumbnail shadow-sm\"\r\n        >\r\n      </div> \r\n    \r\n     \r\n       <div  *ngIf=\"user.imagen\">\r\n        <img \r\n        width=\"75\"\r\n        class=\"mr-3 rounded-circle img-thumbnail shadow-sm\"\r\n        src=\"./assets/loader.gif\" \r\n        jpPreload=\"{{user.imagen}}\">\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"media-body\" >\r\n        <h5 class=\"minnom m-0\">{{ user.nombres }}</h5>\r\n        <p class=\"font-weight-light roledef mt-2 mb-2\">\r\n          <em>{{ user.rol_name }}</em>\r\n        </p>\r\n        \r\n        <a [routerLink]=\"['/', 'perfil', user.id_persona]\" class=\"text-light\">\r\n          <i class=\"fa fa-user mr-1  fa-1g\"></i> <small>{{ \"txtProfile\" | translate }}</small>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n<app-buscador></app-buscador>\r\n\r\n<hr />\r\n\r\n  <p class=\"text-gray font-weight-bold text-uppercase px-3 small mt-2 pb-4 mb-0\">\r\n    {{ \"txtNavegacion\" | translate }}\r\n  </p>\r\n\r\n  <ul class=\"nav flex-column bg-white mb-0\">\r\n\r\n\r\n\r\n\r\n    <!-- <ng-container *ngIf=\"show\"> -->\r\n    <li class=\"nav-item\" routerLinkActive=\"active\" >\r\n      <a [routerLink]=\"['/', 'home']\" class=\"nav-link  \">\r\n        <i class=\"fa fa-home mr-3  fa-fw\"></i>\r\n        Tareas \r\n      </a>\r\n    </li>\r\n  <!-- </ng-container> -->\r\n  <!-- <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a  class=\"nav-link  \">\r\n      <i class=\"fa fa-home mr-3  fa-fw\"></i>\r\n      Turnos anteriores\r\n    </a>\r\n  </li> -->\r\n\r\n\r\n  <ng-container *ngIf=\"user.level_rol === '8'\"> \r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'personas']\" class=\"nav-link \">\r\n        <i class=\"fa fa-users mr-3  fa-fw\"></i>\r\n        {{ \"txtPersonas\" | translate }}\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'historico']\" class=\"nav-link \">\r\n        <i class=\"fa fa-history mr-3  fa-fw\"></i>\r\n        {{ \"txtConsultahistorica\" | translate }}\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a href =\"http://joraco.site:8081/b/ajax/exportar_registros_tareas_csv.php\" class=\"nav-link \">\r\n        <i class=\"fa fa-download mr-3  fa-fw\"></i>\r\n        {{ \"txtDescargaInformacion\" | translate }}\r\n      </a>\r\n    </li>\r\n  </ng-container>\r\n  </ul>\r\n\r\n  <hr />\r\n\r\n\r\n<ng-container *ngIf=\"user.level_rol === '8'\"> \r\n  <p class=\"text-gray font-weight-bold text-uppercase px-3 small mt-2  pb-4 mb-0\">\r\n   {{ \"txtRolAdministrador\" | translate }}\r\n  </p>\r\n  <ul class=\"nav flex-column bg-white mb-0\">\r\n\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'formlistados']\" class=\"nav-link \">\r\n        <i class=\"fa fa-cog mr-3  fa-fw\"></i>\r\n        Listado de componentes\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'incidencias']\" class=\"nav-link \">\r\n        <i class=\"fa fa-cog mr-3  fa-fw\"></i>\r\n        Incidencias\r\n      </a>\r\n    </li>\r\n\r\n\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'configuracion']\" class=\"nav-link \">\r\n        <i class=\"fa fa-cog mr-3  fa-fw\"></i>\r\n        {{ \"txtConfiguracion\" | translate }}\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</ng-container>\r\n\r\n\r\n</div>\r\n<!-- End vertical navbar -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DiasMes } from '../../models/diasdelmes';\r\nimport { ModeloAccionPuntual } from '../../models/accionpuntual';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModeloPeriodicidad } from '../../models/periodicidad';\r\nimport { TramosSemana } from '../../models/tramossemana';\r\nimport { TramosMes } from '../../models/tramosmes';\r\nimport { TramosDias } from '../../models/tramosdias';\r\nimport Swal from 'sweetalert2';\r\nimport { PeriodicidadMadre } from '../../models/periodicidadmadre';\r\nimport { NoopScrollStrategy } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-accion',\r\n  templateUrl: './accion.component.html'\r\n})\r\n\r\nexport class AccionComponent implements OnInit {\r\n\r\n\r\n  registro: ModeloAccionPuntual = new ModeloAccionPuntual();\r\n  registroRetorno: ModeloPeriodicidad = new ModeloPeriodicidad();\r\n  periodicidades: ModeloPeriodicidad[] = [];\r\n\r\n  datoregistro = {\r\n    id_seguimiento: null,\r\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n    id_persona: null\r\n  }\r\n  madre: PeriodicidadMadre;\r\n\r\n  mad:PeriodicidadMadre = new PeriodicidadMadre();\r\n\r\n  mesActual: number = Date.now();\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  diasMes: DiasMes[] = [];\r\n  tramosSemana: TramosSemana[] = [];\r\n  tramosMes: TramosMes[] = [];\r\n  diasSemana: TramosDias[] = [];\r\n\r\n  datosRecibidos: string;\r\n  dias: any;\r\n  accionForm: FormGroup;\r\n\r\n  selectedHobbiesNames: [string];\r\n\r\n  mesVigente = new Date().getMonth() + 1;\r\n  datosborrado: string;\r\n  repeticiones: PeriodicidadMadre;\r\n  fechafin: any;\r\n  selectedAll: any;\r\n  names: any;\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private httpClient: HttpClient, private perioService: PeriodicidadService) {\r\n\r\n    //cargo los dias del mes en curso\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_dias_mes_actual.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos mes\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_mes.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos dias de la semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_dias_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo el listado de personas para esta ID tarea\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.periodicidades = result;\r\n    }, error => console.error(error));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionForm = this.fb.group({\r\n      checkArrayt: this.fb.array([]),\r\n      fechafin: new FormControl(''),\r\n    //   repeticiones: new FormControl(this.madre),\r\n      repeticiones: ['', Validators.required],\r\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n      id_categoria: '3', //id de accion puntual\r\n      id_persona: localStorage.getItem('id_persona')\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.cargaMadre();\r\n  }\r\n\r\n\r\n\r\n \r\n  selectAll(e) {\r\n    if (this.diasSemana.every(val => val.checked == true)){\r\n      this.diasSemana.forEach(val => { val.checked = null });\r\n    } else {\r\n      this.diasSemana.forEach(val => { val.checked = true });\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  cargaMadre(){\r\n\r\n\r\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id_tarea');\r\n\r\n    this.perioService.getDatosMadre(id_tarea).subscribe( (respuesta: PeriodicidadMadre) => {\r\n    this.madre = respuesta;\r\n    this.mad = respuesta;\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //eliminar registro\r\n  borrarRegistro(identificacion) {\r\n    this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n    this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  }\r\n\r\n  onCheckboxChange(e) {\r\n    const checkArrayt: FormArray = this.accionForm.get('checkArrayt') as FormArray;\r\n    if (e.target.checked) {\r\n\r\n      checkArrayt.push(new FormControl(e.target.value));\r\n\r\n    } else {\r\n\r\n      let i: number = 0;\r\n      checkArrayt.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          checkArrayt.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n\r\n      //quito el check y borro el registro 8no se aprecia porqu eno recarga la pagina)\r\n      this.borrarRegistro(e.target.value);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n  submitForm() {\r\n    const valormes = this.mesVigente;\r\n    // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    const id_tarea: FormControl = this.accionForm.get('id_tarea') as FormControl;\r\n\r\n    this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    Swal.fire({\r\n      text: 'Periodicidad actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: true\r\n    })\r\n    //, this.recarga()\r\n    ;\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card bg-default\">\r\n        <h5 class=\"card-header\">\r\n          Acción puntual\r\n        </h5>\r\n        <div class=\"card-body\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div class=\"row\">\r\n          \r\n            <div class=\"col-md-7\">\r\n          <div [formGroup]=\"accionForm\">\r\n          <input type=\"hidden\" class=\"form-control\"  name=\"id_tarea\"  formControlName=\"id_tarea\"  />\r\n          </div>\r\n\r\n          <div [formGroup]=\"accionForm\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_categoria\"  formControlName=\"id_categoria\"  />\r\n          </div>\r\n\r\n          <div [formGroup]=\"accionForm\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_persona\"  formControlName=\"id_persona\"  />\r\n          </div>\r\n\r\n             <div class=\"row\">\r\n            <div class=\"col-md-7\"><h5 class=\"titolpetit\">Posición en la semana</h5>\r\n            <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-6  minitext\">\r\n\r\n                  <!-- <li> \r\n                     <input type=\"checkbox\" formControlMode=\"selectedAll\" (change)=\"selectAll();\"/> \r\n                  </li> -->\r\n\r\n                  <div *ngFor=\"let dias of diasSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{dias.name}}</div><div class=\"col-4\">\r\n                      <input type=\"checkbox\"  name=\"dias.name{{dias.value}}\" [value]=\"dias.value\" \r\n                      checked=\"{{dias.checked}}\"  \r\n                      (change)=\"onCheckboxChange($event)\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n            \r\n                </div>\r\n                <div class=\"col-6  minitext\">\r\n                  <div *ngFor=\"let tramos of tramosSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{tramos.name}}</div><div class=\"col-4\">\r\n                      \r\n                      <input type=\"checkbox\" [value]=\"tramos.value\" checked=\"{{tramos.checked}}\" (change)=\"onCheckboxChange($event)\" />\r\n                    \r\n                      \r\n                    \r\n                    \r\n                    </div></div>\r\n                  </div>\r\n                </div>\r\n            </div>      \r\n            </div>\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Posición en el mes</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3  minitext\">\r\n                <div class=\"col-12\">\r\n                  <div *ngFor=\"let trames of tramosMes; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{trames.name}}</div><div class=\"col-4 text-right\">\r\n                      <input type=\"checkbox\" [value]=\"trames.value\" checked=\"{{trames.checked}}\" (change)=\"onCheckboxChange($event)\" /></div></div>\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div>\r\n           </div> \r\n\r\n\r\n           <div class=\"row\">\r\n            <div class=\"col-md-12\"><h5 class=\"titolpetit\"></h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12\">\r\n                 \r\n                 \r\n                 \r\n                  <div class=\"row\" [formGroup]=\"accionForm\">\r\n                    <div class=\"col-6\"> \r\n                      <label for=\"dp\">Fecha fin</label>\r\n                      <div class=\"input-group\">\r\n                        <input\r\n                          class=\"form-control\"\r\n                          ngbDatepicker\r\n                          #d=\"ngbDatepicker\"\r\n                          name=\"fechafin\"\r\n                          formControlName=\"fechafin\"\r\n                           placeholder =  {{mad.fechafin}} \r\n                          readonly\r\n                        />\r\n                        <div class=\"input-group-append\">\r\n                          <button\r\n                            class=\"btn btn-outline-secondary calendar\"\r\n                            (click)=\"d.toggle()\"\r\n                            type=\"button\"\r\n                          ></button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"col-6\" [formGroup]=\"accionForm\"><label for=\"repeticiones\">Número de repeticiones</label> \r\n                    \r\n                      <input type=\"number\" class=\"form-control\"  \r\n                      name=\"repeticiones\" \r\n                      value=  {{mad.repeticiones}} \r\n                      formControlName=\"repeticiones\"  \r\n  \r\n                      />\r\n                    \r\n                  \r\n                    </div>\r\n\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div> \r\n          </div>\r\n          </div>\r\n\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Selección de días</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12 m-0 p-0\">\r\n                  <div class=\"row mb-3 p-0 text-center\">\r\n                    <!-- <div class=\"col-12\">\r\n                      <h5 class=\"titolpetit\">{{mesActual | date: 'LLLL'}}</h5>\r\n                    </div> -->\r\n                  </div>\r\n                  <div class=\"row m-0 p-0 checkbox\">\r\n                      <div class=\"col-2  text-center p-0 m-0\" *ngFor=\"let diam of diasMes; let i=index\">\r\n\r\n                          <input type=\"checkbox\" \r\n                          [value]=\"diam.value\" name=\"checkbox{{diam.value}}\" id=\"checkbox{{diam.value}}\" \r\n                         \r\n                          checked=\"{{diam.checked}}\"  \r\n                          (change)=\"onCheckboxChange($event)\"\r\n                          />\r\n                        \r\n\r\n                        <label for=\"checkbox{{diam.value}}\">{{diam.name}}</label>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>      \r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-12 text-center\"><hr class=\"bdott\" />\r\n              <button type=\"submit\" class=\"btn btn-info mt-3\">\r\n                Guardar periodicidad\r\n              </button>\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </form>\r\n\r\n  <script>\r\n    CKEDITOR.replace(\"ibmeditor\", { \r\n    on : {\r\n      // maximize the editor on startup\r\n      'instanceReady' : function( evt ) {\r\n        evt.editor.resize(\"100%\");\r\n      }\r\n    }\r\n  });\r\n  </script>\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DiasMes } from '../../models/diasdelmes';\r\nimport { ModeloAccionPuntual } from '../../models/accionpuntual';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModeloPeriodicidad } from '../../models/periodicidad';\r\nimport { TramosSemana } from '../../models/tramossemana';\r\nimport { TramosMes } from '../../models/tramosmes';\r\nimport { TramosDias } from '../../models/tramosdias';\r\nimport Swal from 'sweetalert2';\r\nimport { PeriodicidadMadre } from '../../models/periodicidadmadre';\r\nimport { NoopScrollStrategy } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-accionhistorico',\r\n  templateUrl: './accionhistorico.component.html'\r\n})\r\n\r\nexport class AccionHistoricoComponent implements OnInit {\r\n\r\n\r\n  registro: ModeloAccionPuntual = new ModeloAccionPuntual();\r\n  registroRetorno: ModeloPeriodicidad = new ModeloPeriodicidad();\r\n  periodicidades: ModeloPeriodicidad[] = [];\r\n\r\n  datoregistro = {\r\n    id_seguimiento: null,\r\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\r\n    id_persona: null\r\n  }\r\n  madre: any;\r\n\r\n  \r\n  mesActual: number = Date.now();\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  diasMes: DiasMes[] = [];\r\n  tramosSemana: TramosSemana[] = [];\r\n  tramosMes: TramosMes[] = [];\r\n  diasSemana: TramosDias[] = [];\r\n  mad:PeriodicidadMadre = new PeriodicidadMadre();\r\n\r\n  datosRecibidos: string;\r\n  dias: any;\r\n  accionForm: FormGroup;\r\n\r\n  selectedHobbiesNames: [string];\r\n\r\n  mesVigente = new Date().getMonth() + 1;\r\n  datosborrado: string;\r\n\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private httpClient: HttpClient, private perioService: PeriodicidadService) {\r\n\r\n    //cargo los dias del mes en curso\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_dias_mes_actual.php').subscribe(result => {\r\n      this.diasMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos mes\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_mes.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos dias de la semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_dias_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo el listado de personas para esta ID tarea\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.periodicidades = result;\r\n    }, error => console.error(error));\r\n\r\n  \r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionForm = this.fb.group({\r\n      checkArrayt: this.fb.array([]),\r\n      fechafin: new FormControl(''),\r\n    //   repeticiones: new FormControl(this.madre),\r\n      repeticiones: ['', Validators.required],\r\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\r\n      id_categoria: '3' //id de accion puntual\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n this.cargaMadre();\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  cargaMadre(){\r\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id')\r\n    this.perioService.getDatosMadre(id_tarea).subscribe( (respuesta: PeriodicidadMadre) => {\r\n    this.madre = respuesta;\r\n    this.mad = respuesta[0];\r\n    this.accionForm.controls['fechafin'].setValue(this.madre[0]['fechafin']);\r\n    this.accionForm.controls['repeticiones'].setValue(this.madre[0]['repeticiones']);\r\n    console.log(this.mad.fechafin);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  //   this.perioService.getDatosMadre (this.datoregistro.id_tarea)\r\n  //     .subscribe( (\r\n  //       respuesta:PeriodicidadMadre) => {\r\n  //        this.madre = respuesta;\r\n  //        console.log(this.madre);\r\n  //     });\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //eliminar registro      \r\n  borrarRegistro(identificacion) {\r\n    this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n    this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  }\r\n\r\n  onCheckboxChange(e) {\r\n    const checkArrayt: FormArray = this.accionForm.get('checkArrayt') as FormArray;\r\n    if (e.target.checked) {\r\n      checkArrayt.push(new FormControl(e.target.value));\r\n    } else {\r\n      let i: number = 0;\r\n      checkArrayt.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          checkArrayt.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n      //quito el check y borro el registro 8no se aprecia porqu eno recarga la pagina)\r\n      this.borrarRegistro(e.target.value);\r\n    }\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n  submitForm() {\r\n    const valormes = this.mesVigente;\r\n    // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    const id_tarea: FormControl = this.accionForm.get('id_tarea') as FormControl;\r\n\r\n    this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    Swal.fire({\r\n      text: 'Periodicidad actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    //, this.recarga()\r\n    ;\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card bg-default\">\r\n        <h5 class=\"card-header\">\r\n          Acción puntual\r\n        </h5>\r\n        <div class=\"card-body\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div class=\"row\">\r\n          \r\n            <div class=\"col-md-7\">\r\n          <div [formGroup]=\"accionForm\">\r\n          <input type=\"hidden\" class=\"form-control\"  name=\"id_tarea\"  formControlName=\"id_tarea\"  />\r\n          </div>\r\n\r\n          <div [formGroup]=\"accionForm\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_categoria\"  formControlName=\"id_categoria\"  />\r\n          </div>\r\n\r\n             <div class=\"row\">\r\n            <div class=\"col-md-7\"><h5 class=\"titolpetit\">Posición en la semana</h5>\r\n            <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-6  minitext\">\r\n\r\n\r\n\r\n                  <div *ngFor=\"let dias of diasSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{dias.name}}</div><div class=\"col-4\">\r\n                      <input type=\"checkbox\"  name=\"dias.name{{dias.value}}\" [value]=\"dias.value\" \r\n                      checked=\"{{dias.checked}}\"  \r\n                      (change)=\"onCheckboxChange($event)\"\r\n                      disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n\r\n               \r\n                </div>\r\n                <div class=\"col-6  minitext\">\r\n                  <div *ngFor=\"let tramos of tramosSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{tramos.name}}</div><div class=\"col-4\">\r\n                      \r\n                      <input type=\"checkbox\" \r\n                      disabled\r\n                      [value]=\"tramos.value\" checked=\"{{tramos.checked}}\" (change)=\"onCheckboxChange($event)\" />\r\n                    \r\n                      \r\n                    \r\n                    \r\n                    </div></div>\r\n                  </div>\r\n                </div>\r\n            </div>      \r\n            </div>\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Posición en el mes</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3  minitext\">\r\n                <div class=\"col-12\">\r\n                  <div *ngFor=\"let trames of tramosMes; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{trames.name}}</div><div class=\"col-4 text-right\">\r\n                      <input type=\"checkbox\" \r\n                      disabled\r\n                      [value]=\"trames.value\" checked=\"{{trames.checked}}\" (change)=\"onCheckboxChange($event)\" /></div></div>\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div>\r\n           </div> \r\n\r\n\r\n           <div class=\"row\">\r\n            <div class=\"col-md-12\"><h5 class=\"titolpetit\"></h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"row\" [formGroup]=\"accionForm\">\r\n                    <div class=\"col-6\">\r\n                      \r\n                      <label for=\"dp\">Fecha fin</label>\r\n                      <div class=\"input-group\">\r\n                        <input\r\n                          class=\"form-control\"\r\n                          ngbDatepicker\r\n                          #d=\"ngbDatepicker\"\r\n                          name=\"fechafin\"\r\n                          formControlName=\"fechafin\"\r\n                          disabled\r\n                          placeholder =  {{mad.fechafin}} \r\n                          readonly\r\n                        />\r\n                        <div class=\"input-group-append\">\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"col-6\" [formGroup]=\"accionForm\"><label for=\"repeticiones\">Número de repeticiones</label> \r\n                    \r\n                      <input type=\"number\" class=\"form-control\"  \r\n                      name=\"repeticiones\" \r\n                      formControlName=\"repeticiones\"  \r\n                      disabled\r\n                      />\r\n                    \r\n                  \r\n                    </div>\r\n\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div> \r\n          </div>\r\n          </div>\r\n\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Selección de días</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12 m-0 p-0\">\r\n                  <div class=\"row mb-3 p-0 text-center\">\r\n                    <!-- <div class=\"col-12\">\r\n                      <h5 class=\"titolpetit\">{{mesActual | date: 'LLLL'}}</h5>\r\n                    </div> -->\r\n                  </div>\r\n                  <div class=\"row m-0 p-0 checkbox\">\r\n                      <div class=\"col-2  text-center p-0 m-0\" *ngFor=\"let diam of diasMes; let i=index\">\r\n\r\n                          <input type=\"checkbox\" \r\n                          [value]=\"diam.value\" name=\"checkbox{{diam.value}}\" id=\"checkbox{{diam.value}}\" \r\n                         \r\n                          checked=\"{{diam.checked}}\"  \r\n                          (change)=\"onCheckboxChange($event)\"\r\n                          disabled\r\n                          />\r\n                        \r\n\r\n                        <label for=\"checkbox{{diam.value}}\">{{diam.name}}</label>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>      \r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-12 text-center\"><hr class=\"bdott\" />\r\n              <!-- <button type=\"submit\" class=\"btn btn-info mt-3\">\r\n                Guardar periodicidad\r\n              </button> -->\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </form>\r\n\r\n  <script>\r\n    CKEDITOR.replace(\"ibmeditor\", { \r\n    on : {\r\n      // maximize the editor on startup\r\n      'instanceReady' : function( evt ) {\r\n        evt.editor.resize(\"100%\");\r\n      }\r\n    }\r\n  });\r\n  </script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DiasMes } from '../../models/diasdelmes';\r\nimport { ModeloAccionPuntual } from '../../models/accionpuntual';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModeloPeriodicidad } from '../../models/periodicidad';\r\nimport { TramosSemana } from '../../models/tramossemana';\r\nimport { TramosMes } from '../../models/tramosmes';\r\nimport { TramosDias } from '../../models/tramosdias';\r\nimport Swal from 'sweetalert2';\r\nimport { PeriodicidadMadre } from '../../models/periodicidadmadre';\r\nimport { NoopScrollStrategy } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-check',\r\n  templateUrl: './check.component.html'\r\n})\r\n\r\nexport class CheckComponent implements OnInit {\r\n\r\n\r\n  registro: ModeloAccionPuntual = new ModeloAccionPuntual();\r\n  registroRetorno: ModeloPeriodicidad = new ModeloPeriodicidad();\r\n  periodicidades: ModeloPeriodicidad[] = [];\r\n\r\n  datoregistro = {\r\n    id_seguimiento: null,\r\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n    id_persona: null\r\n  }\r\n  madre: PeriodicidadMadre;\r\n\r\n  mad:PeriodicidadMadre = new PeriodicidadMadre();\r\n\r\n  mesActual: number = Date.now();\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  diasMes: DiasMes[] = [];\r\n  tramosSemana: TramosSemana[] = [];\r\n  tramosMes: TramosMes[] = [];\r\n  diasSemana: TramosDias[] = [];\r\n\r\n  datosRecibidos: string;\r\n  dias: any;\r\n  accionFormCheck: FormGroup;\r\n\r\n  selectedHobbiesNames: [string];\r\n\r\n  mesVigente = new Date().getMonth() + 1;\r\n  datosborrado: string;\r\n  repeticiones: PeriodicidadMadre;\r\n  fechafin: any;\r\n\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private httpClient: HttpClient, private perioService: PeriodicidadService) {\r\n\r\n    //cargo los dias del mes en curso\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_dias_mes_actual.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos mes\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_mes.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos dias de la semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_dias_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo el listado de personas para esta ID tarea\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.periodicidades = result;\r\n    }, error => console.error(error));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionFormCheck = this.fb.group({\r\n      checkArrayt: this.fb.array([]),\r\n      fechafin: new FormControl(''),\r\n    //   repeticiones: new FormControl(this.madre),\r\n      repeticiones: ['', Validators.required],\r\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n      id_categoria: '1', //id de accion puntual\r\n      id_persona: localStorage.getItem('id_persona')\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n this.cargaMadre();\r\n\r\n  }\r\n\r\n\r\n  cargaMadre(){\r\n\r\n\r\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id_tarea');\r\n\r\n    this.perioService.getDatosMadre(id_tarea).subscribe( (respuesta: PeriodicidadMadre) => {\r\n    this.madre = respuesta;\r\n    this.mad = respuesta;\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //eliminar registro\r\n  borrarRegistro(identificacion) {\r\n    this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n    this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  }\r\n\r\n  onCheckboxChange(e) {\r\n    const checkArrayt: FormArray = this.accionFormCheck.get('checkArrayt') as FormArray;\r\n    if (e.target.checked) {\r\n      checkArrayt.push(new FormControl(e.target.value));\r\n    } else {\r\n      let i: number = 0;\r\n      checkArrayt.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          checkArrayt.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n      //quito el check y borro el registro 8no se aprecia porqu eno recarga la pagina)\r\n      this.borrarRegistro(e.target.value);\r\n    }\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n  submitForm() {\r\n    const valormes = this.mesVigente;\r\n    // const fechafin: FormControl = this.accionFormCheck.get('fechafin') as FormControl;\r\n    // const repeticiones: FormControl = this.accionFormCheck.get('repeticiones') as FormControl;\r\n    const id_tarea: FormControl = this.accionFormCheck.get('id_tarea') as FormControl;\r\n\r\n    this.perioService.altaRegistrochecks(this.accionFormCheck.value).subscribe();\r\n    Swal.fire({\r\n      text: 'Periodicidad actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    //, this.recarga()\r\n    ;\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<form [formGroup]=\"accionFormCheck\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n  <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card bg-default\">\r\n          <h5 class=\"card-header\">\r\n            Check\r\n          </h5>\r\n          <div class=\"card-body\">\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n            <div class=\"row\">\r\n            \r\n              <div class=\"col-md-7\">\r\n            <div [formGroup]=\"accionFormCheck\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_tarea\"  formControlName=\"id_tarea\"  />\r\n            </div>\r\n  \r\n            <div [formGroup]=\"accionFormCheck\">\r\n              <input type=\"hidden\" class=\"form-control\"  name=\"id_categoria\"  formControlName=\"id_categoria\"  />\r\n            </div>\r\n\r\n            \r\n          <div [formGroup]=\"accionFormCheck\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_persona\"  formControlName=\"id_persona\"  />\r\n          </div>\r\n  \r\n               <div class=\"row\">\r\n              <div class=\"col-md-7\"><h5 class=\"titolpetit\">Posición en la semana</h5>\r\n              <hr class=\"bdott\" />\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-6  minitext\">\r\n  \r\n  \r\n  \r\n                    <div *ngFor=\"let dias of diasSemana; let i=index\">\r\n                      <div class=\"row\"><div class=\"col-8\">{{dias.name}}</div><div class=\"col-4\">\r\n                        <input type=\"checkbox\"  name=\"dias.name{{dias.value}}\" [value]=\"dias.value\" \r\n                        checked=\"{{dias.checked}}\"  \r\n                        (change)=\"onCheckboxChange($event)\"\r\n                       \r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    </div>\r\n  \r\n                 \r\n                  </div>\r\n                  <div class=\"col-6  minitext\">\r\n                    <div *ngFor=\"let tramos of tramosSemana; let i=index\">\r\n                      <div class=\"row\"><div class=\"col-8\">{{tramos.name}}</div><div class=\"col-4\">\r\n                        \r\n                        <input type=\"checkbox\" \r\n                        \r\n                        [value]=\"tramos.value\" checked=\"{{tramos.checked}}\" (change)=\"onCheckboxChange($event)\" />\r\n                      \r\n                        \r\n                      \r\n                      \r\n                      </div></div>\r\n                    </div>\r\n                  </div>\r\n              </div>      \r\n              </div>\r\n              <div class=\"col-md-5\"><h5 class=\"titolpetit\">Posición en el mes</h5>\r\n                <hr class=\"bdott\" />\r\n                <div class=\"row mt-3  minitext\">\r\n                  <div class=\"col-12\">\r\n                    <div *ngFor=\"let trames of tramosMes; let i=index\">\r\n                      <div class=\"row\"><div class=\"col-8\">{{trames.name}}</div><div class=\"col-4 text-right\">\r\n                        <input type=\"checkbox\" \r\n                        \r\n                        [value]=\"trames.value\" checked=\"{{trames.checked}}\" (change)=\"onCheckboxChange($event)\" /></div></div>\r\n                    </div>\r\n                  </div>\r\n                </div>      \r\n              </div>\r\n             </div> \r\n  \r\n  \r\n             <div class=\"row\">\r\n              <div class=\"col-md-12\"><h5 class=\"titolpetit\"></h5>\r\n                <hr class=\"bdott\" />\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-12\">\r\n                    <div class=\"row\" [formGroup]=\"accionFormCheck\">\r\n                      <div class=\"col-6\">\r\n                        \r\n                        <!-- <label for=\"dp\">Fecha fin</label>\r\n                        <div class=\"input-group\">\r\n                          <input\r\n                            class=\"form-control\"\r\n                            ngbDatepicker\r\n                            #d=\"ngbDatepicker\"\r\n                            name=\"fechafin\"\r\n                            formControlName=\"fechafin\"\r\n                            disabled\r\n                            placeholder =  {{mad.fechafin}} \r\n                            readonly\r\n                          />\r\n                          <div class=\"input-group-append\">\r\n                            \r\n                          </div>\r\n                        </div> -->\r\n                      </div>\r\n  \r\n  \r\n  \r\n  \r\n                      <div class=\"col-6\" [formGroup]=\"accionFormCheck\">\r\n                        \r\n                        <!-- <label for=\"repeticiones\">Número de repeticiones</label> \r\n                      \r\n                        <input type=\"number\" class=\"form-control\"  \r\n                        name=\"repeticiones\" \r\n                        formControlName=\"repeticiones\"  \r\n                        disabled\r\n                        />\r\n                       -->\r\n                    \r\n                      </div>\r\n  \r\n  \r\n  \r\n  \r\n                    </div>\r\n                  </div>\r\n                </div>      \r\n              </div> \r\n            </div>\r\n            </div>\r\n  \r\n              <div class=\"col-md-5\"><h5 class=\"titolpetit\">Selección de días</h5>\r\n                <hr class=\"bdott\" />\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-12 m-0 p-0\">\r\n                    <div class=\"row mb-3 p-0 text-center\">\r\n                      <!-- <div class=\"col-12\">\r\n                        <h5 class=\"titolpetit\">{{mesActual | date: 'LLLL'}}</h5>\r\n                      </div> -->\r\n                    </div>\r\n                    <div class=\"row m-0 p-0 checkbox\">\r\n                        <div class=\"col-2  text-center p-0 m-0\" *ngFor=\"let diam of diasMes; let i=index\">\r\n  \r\n                            <input type=\"checkbox\" \r\n                            [value]=\"diam.value\" name=\"checkbox{{diam.value}}\" id=\"checkbox{{diam.value}}\" \r\n                           \r\n                            checked=\"{{diam.checked}}\"  \r\n                            (change)=\"onCheckboxChange($event)\"\r\n                            \r\n                            />\r\n                          \r\n  \r\n                          <label for=\"checkbox{{diam.value}}\">{{diam.name}}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>      \r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12 text-center\"><hr class=\"bdott\" />\r\n                 <button type=\"submit\" class=\"btn btn-info mt-3\">\r\n                  Guardar periodicidad\r\n                </button> \r\n               \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </form>\r\n  \r\n    <script>\r\n      CKEDITOR.replace(\"ibmeditor\", { \r\n      on : {\r\n        // maximize the editor on startup\r\n        'instanceReady' : function( evt ) {\r\n          evt.editor.resize(\"100%\");\r\n        }\r\n      }\r\n    });\r\n    </script>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  ","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router } from '@angular/router';\nimport { DataserviceService } from '../services/dataservice.service';\n\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardGuard implements CanActivate  {\n \n  constructor(private dataService: DataserviceService,private router: Router  ) {}\n \n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    const routeurl: string = state.url;\n    return this.isLogin(routeurl);\n  }\n  isLogin(routeurl: string) {\n    if (this.dataService.isLoggedIn()) {\n      return true;\n    }\n    this.dataService.redirectUrl = routeurl;\n    this.router.navigate(['/login'], {queryParams: { returnUrl: routeurl }} );\n  }\n}\n ","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { WebsocketService } from '../services/websocket.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioGuardService implements CanActivate{\n\n  constructor(public wsService: WebsocketService,\n    private router: Router) { }\n\n\n\n  canActivate(){\n    if( this.wsService.getUsuario() ) {\n      return true;\n    } else {\n      this.router.navigateByUrl('/');\n      return false;\n    }\n  }\n\n\n\n\n\n\n}\n","export class ModeloAccionPuntual {\n  id_periodicidad: string;\n  id_categoria: string;\n  id_period_madre: string;\n  fecha: string;\n  id_accion: string;\n  fechafin: string;\n  repeticiones: string;\n  name: string;\n  value: string;\n  id_tarea: string;\n  checked: string;\n  id_persona: string;\n}\n","export class Ayuda {\n  id_ayuda: string;\n  id_persona_log: string;\n  ayudatitulo: string;\n  ayudatexto: string;\n  numauto: string;\n}\n","\r\n\r\nexport class Constantes {\r\n\r\n  //public static SERVER_API:string;\r\n    public static API_SERVER = 'http://joraco.site:8081/b';\r\n    //public static API_SERVER = 'http://localhost/b';\r\n    public static nombreTurnos = 'turnos';\r\n    public static ARND =  Math.floor(100000000 + Math.random() * 900000000);\r\n    public static BRND =  Math.floor(100000000 + Math.random() * 900000000);\r\n    public static CRND =  Math.floor(100000000000 + Math.random() * 900000000000);\r\n    public static DRND =  Math.floor(100000000000 + Math.random() * 900000000000);\r\n\r\n\r\n  }\r\n  \r\n \r\n","export class Incidencia {\n  id_persona_log: string;\n  nombres: string;\n  fecha:string;\n  resuelta:string;\n  fecharesuelta:string;\n  id_incidencias: string;\n  enunciado: string;\n  textoincidencia: string;\n  imagenincidencia:string;\n  token_incidencia:string;\n}\n","export class Issue {\n  id_tarea: string;\n  tarea: string;\n  hora: string;\n  estatus: string;\n  observaciones: string;\n  fecha: string;\n  fechamodi: string;\n  id_categoria: string;\n  id_persona: string;\n  flag_visibilidad: string;\n  prioridad: string;\n  decidecategoria: string;\nid_rol: string;\n}\n","export class IssueHistorico {\n\nid_log: string;\nid_tarea: string;\nfecha: string;\nnombres: string;\ndescripcion: string;\ntarea: string;\nid_persona: string;             \n\n}\n","export class ModeloPeriodicidad {\n\n\n  id_periodicidad: string;\n  id_categoria: string;\n  id_period_madre: string;\n  id_tarea: string;\n  value: string;\n  fecha: string;\n  fechafin: string;\n  repeticiones: string;\n  name: string;\n  checked: string;\n\n\n}\n\n","export class PeriodicidadMadre {\n\n    id_period_madre: string;\n    fecha: string;\n    id_tarea: string;\n    value: string;\n    fechafin: string;\n    repeticiones: string;\n\n\n}\n\n","export class Personas {\n  id_persona: string;\n  id_persona_log: string;\n  nombres: string;\n  telefono: string;\n  public email: string;\n  direccion: string;\n  registrado: string;\n  id_rol: string;\n  rol_name: string;\n  level_rol: string;\n  password: string;\n  imagen: string;\n\n\n\n  // constructor( email: string ){\n  //     this.email = email;\n  // }\n\n\n}\n","export class Seguimiento {\n  id_seguimiento: string;\n  id_persona: string;\n  id_tarea: string;\n\n}\n","export class Turnos {\n    horainicio: string;\n    horafin: string;\n    id_turno: string;\n    turno: string;\n    tipo_turno: string;\n    turno_horario: string;\n    id_persona: string;\n    id_rol: string;\n}\n","export class Usuario {\r\npublic id_persona: string;\r\n    public nombre: string;\r\n\r\n    constructor( nombre: string ){\r\n        this.nombre = nombre;\r\n    }\r\n\r\n}","\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport Swal from 'sweetalert2';\nimport { Observable } from 'rxjs';\nimport { FormControl, Validators, FormGroup, FormBuilder, NgForm } from '@angular/forms';\nimport { Constantes } from '../models/constantes.model';\nimport { AdminServicioService } from '../services/admin-servicio.service';\nimport { Personas } from '../models/personas';\nimport { Incidencia } from '../models/incidencia';\n\n\n\n@Component({\n  selector: 'app-abririncidencia',\n  templateUrl: './abririncidencia.component.html',\n  styles: [\n  ],\n})\n\nexport class AbririncidenciaComponent implements OnInit {\n\n  personas: Personas[] = [];\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  personasdatos: Personas = new Personas();\n  incidenciadatos: Incidencia = new Incidencia();\n\n  public imagePath;\n  imgURL: any;\n  public message: string;\n  private imageSrc: string = '';\n  datosFoto: string;\n  incidenciaForm = new FormGroup({\n      id_persona_log: new FormControl(),\n      nombres: new FormControl(),\n      enunciado: new FormControl(),\n      textoincidencia: new FormControl(),\n      imagenincidencia: new FormControl(),\n      tokenIncidencia: new FormControl()\n  });\n  base64textString: string;\n\n  constructor(private httpClient: HttpClient,private formBuilder: FormBuilder,private adminService: AdminServicioService) {\n\n\n    const id_persona = localStorage.getItem('id_persona');\n    this.adminService.getPersonas(id_persona)\n      .subscribe((respuesta: Personas) => {\n        this.personasdatos = respuesta;\n\n        this.incidenciaForm = formBuilder.group({\n          id_persona_log: id_persona,\n          nombres: this.personasdatos.nombres,\n          imagenincidencia: [''],\n          tokenIncidencia: [''],\n          enunciado: \n              ['',\n                  [\n                    Validators.minLength(10),\n                    Validators.maxLength(140),\n                    Validators.required\n                  ]\n              ],\n          textoincidencia: \n              ['',\n                  [\n                    Validators.minLength(10),\n                    Validators.maxLength(2440),\n                    Validators.required\n                  ]\n              ]\n        });\n      \n      });\n\n\n\n\n\n\n   }\n\n  ngOnInit(){\n\n\n\n\n\n  }\n\n  recarga() {\n    location.reload();\n  }\n\n\n\n\n  preview(e) {\n    var files = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    if (files.length === 0)\n      return;\n \n      var pattern = /image-*/;\n      if (!files.type.match(pattern)) {\n        alert('invalid format');\n        return;\n      }\n \n    var reader = new FileReader();\n    this.imagePath = files;\n    reader.readAsDataURL(files); \n    reader.onload = (_event) => { \n      this.imgURL = reader.result; \n      if (this.imgURL.length * 2  > 2**21) {  \n          Swal.fire({\n            title: 'ERROR en la imagen',\n            text: 'La imagen es mayor de 2Mb',\n            icon: 'success',\n            showConfirmButton: false\n          })\n       }\n    }\n  }\n\n makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n }\n \n\n  \n  guardaryenviarIncidencia(form: NgForm) { \n\n      if (this.incidenciaForm.valid) {\n        this.incidenciaForm.value.imagenincidencia = this.imgURL;\n        this.incidenciaForm.value.tokenIncidencia = this.makeid(15);\n        let peticion: Observable<any>;\n        peticion = this.adminService.guardarNuevancidencia(this.incidenciaForm.value);\n        peticion.subscribe(respuesta => {\n          Swal.fire({\n            title: this.incidenciadatos.enunciado,\n            text: `La incidencia ha sido abiertacon el token ${this.incidenciaForm.value.tokenIncidencia}`,\n            icon: 'success',\n            showConfirmButton: false\n          })\n           , this.recarga()\n         ;\n        });\n    \n\n      } \n    \n   }\n\n\n\n\n\n\n\n}\n","<div class=\"page-content\" id=\"content\">\n    <app-header></app-header>\n    <app-menu></app-menu>\n  \n    <div class=\"row m-2\">\n      <div class=\"col-md-12 mt-4\">\n        <h3>{{ \"txtRegistros\" | translate }}</h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n              <a [routerLink]=\"['/', 'home']\">Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\n              Abrir incidencia\n            </li>\n          </ol>\n        </nav>\n      </div>\n    </div>\n    <form #f=\"ngForm\" (ngSubmit)=\"guardaryenviarIncidencia( f )\" [formGroup]=\"incidenciaForm\">\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-6 alturaminima mb-5\">\n        <p>Si tiene alguna sugerencia o incidencia que comunicarnos con respecto al funcionamiento de esta aplicación, por favor, haga uso del siguiente formulario.</p>\n        \n        <hr class=\"mb-3 mt-2\" />\n\n      \n                <label>Enunciado</label>\n                <input type=\"text\"\n                placeholder=\"Escriba un enunciado\" \n                autocomplete=\"off\" \n                class=\"form-control input-sm mb-3\"\n                value=\"\"\n                formControlName=\"enunciado\">\n\n                <label>Texto</label>\n                <textarea rows=\"10\"\n                placeholder=\"Escriba un texto\" \n                class=\"form-control  input-sm mb-3\"\n                formControlName=\"textoincidencia\"></textarea>\n\n\n            <button  \n            [disabled]=\"incidenciaForm.invalid\" \n            class=\"btn btn-info\">\n              Enviar incidencia\n          </button>\n\n  \n        \n\n\n      </div>\n      <div class=\"col-md-6 alturaminima mb-5\">\n        <div class=\"row\">\n            <div class=\"col-12 text-center\"><img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\"></div>\n        </div>\n        <div class=\"row\">\n        <div class=\"col-12 text-center mt-4\">\n\n\n\n                        <label for=\"imagenincidencia\" class=\"fileContainer\"><i class=\"fa fa-camera\"></i>\n                        <input \n                               type=\"file\"\n                               id=\"imagenincidencia\"\n                               name=\"imagenincidencia\"  \n                               formControlName=\"imagenincidencia\"\n                  \n                               accept=\"image/*\" \n                               (change)=\"preview($event)\"\n                               />\n                      \n                       </label>\n                       <hr />\n                       <p class=\"mt-2\">Si desea adjuntar una captura de pantalla, por favor pulse aquí</p>\n                    </div>\n                \n                </div>\n  \n\n      </div>\n    </div>\n</form> \n    <app-footer></app-footer>\n  </div>\n  ","import {Component, ViewChild} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { ApiService } from '../services/apiregistros.service';\nimport { Issue } from  '../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../models/constantes.model';\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { Router } from '@angular/router';\nimport { Roles } from '../models/roles';\n\nimport { Estados } from '../models/estados';\nimport { Categorias } from '../models/categorias';\nimport { FullCalendarOptions, EventObject } from 'ngx-fullcalendar';\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\n\n\n\n@Component({\n  selector: 'app-alta',\n  templateUrl: './alta.component.html'\n  \n})\n\nexport class AltaComponent {\n\n    model: NgbDateStruct;\n    registro: Issue = new Issue();\n    options: FullCalendarOptions;\n   events: EventObject[];\n\n    public Editor = ClassicEditor;\n    public onReady( editor ) {\n        editor.ui.getEditableElement().parentElement.insertBefore(\n            editor.ui.view.toolbar.element,\n            editor.ui.getEditableElement()\n        );\n    }\n    roles: Roles[] = [];\n   // recurrencias: Recurrencias[] = [];\n    estados: Estados [] = [];\n    categorias: Categorias [] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n    personas:Issue[] = [];\n    issue: Issue = new Issue();\n    editing = {};\n    rows = [];\n    temp = [];\n\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n    datoregistro = {\n        id_tarea: null,\n        tarea: null,\n        id_persona: localStorage.getItem('id_persona'),\n        hora: null,\n        estatus: null,\n        observaciones: null,\n        id_categoria:  null,\n        flag_visibilidad:  null,\n        prioridad:  null,\n        id_rol:null\n    }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id: any;\n  valor: any;\n  ever: any;\n  datos: string;\n\n  \n  constructor(private httpClient: HttpClient, private apiService: ApiService, private router: Router) {\n\n\n        //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read_noadmin.php').subscribe(result => {\n            this.roles = result;\n          }, error => console.error(error));\n \n\n        //cargo las categorias para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/categorias_read.php').subscribe(result => {\n            this.categorias = result;\n          }, error => console.error(error));                   \n\n\n\n  }\n\n  ngOnInit(){\n\n\n\n\n\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n    this.router.navigate(['/home']);\n  }\n\n\n  //alta de registro\n  altaRegistro() {\n\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.tarea==null || this.datoregistro.hora==null ){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n\n          console.log(this.datoregistro);\n          Swal.fire({\n            title: this.datoregistro.tarea,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : true\n          });\n\n          //una vez creada la tarea, obtenemos el lastId para abrir la tarea creada.\n          this.apiService.getLastId()\n          .subscribe((respuesta: any) => {\n            this.registro = respuesta;\n            const identif = JSON.stringify(this.registro).slice(1, -1);\n            const identificador = Constantes.ARND+identif+Constantes.BRND;\n            this.router.navigateByUrl(`/detalle/${identificador}`);\n          });\n\n          // ,this.recarga()\n          // ;      \n        });\n    }\n  }\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ \"txtNuevoRegistro\" | translate }} \n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-6 pt-5\">\n      <div class=\"form-group\">\n\n\n\n        <input\n        #id_persona=\"ngModel\"\n        name=\"id_persona\"\n        type=\"hidden\"\n        [(ngModel)]=\"datoregistro.id_persona\"\n      />\n\n        <label for=\"tarea\">{{ \"txtTarea\" | translate }}</label>\n        <input\n          required\n          style=\"background-color: white;\"\n          placeholder=\"Resumen tarea\"\n          class=\"form-control form-control-sm\"\n          [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n          #tarea=\"ngModel\"\n          required\n          minlength=\"4\"\n          name=\"tarea\"\n          type=\"text\"\n          [(ngModel)]=\"datoregistro.tarea\"\n        />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <div class=\"form-group 24hr-example\">\n            <label for=\"hora\">{{ \"txtHora\" | translate }}</label>\n            <input\n              required\n              aria-label=\"24hr format\"\n              style=\"background-color: white;\"\n              placeholder=\"00:00\"\n              class=\"form-control form-control-sm reloj\"\n              [class.is-invalid]=\"hora.invalid && hora.touched\"\n              #hora=\"ngModel\"\n              minlength=\"5\"\n              maxlength=\"5\"\n              type=\"text\"\n              [(ngModel)]=\"datoregistro.hora\"\n              [ngxTimepicker]=\"fullTime\"\n              [format]=\"24\"\n              readonly\n            />\n            <ngx-material-timepicker\n              #fullTime\n              [minutesGap]=\"15\"\n            ></ngx-material-timepicker>\n          </div>\n        </div>\n\n        \n    \n<div class=\"form-group\">\n         \n            <label for=\"id_rol\">Rol</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"id_rol\"\n              placeholder=\"Seleccione categoria\"\n              #id_rol=\"ngModel\"\n              [(ngModel)]=\"datoregistro.id_rol\"\n            >\n              <option [ngValue]=\"null\">Seleccione Rol</option>\n              <option\n                *ngFor=\"let rol of roles\"\n                value=\"{{ rol.id_rol }}\"\n              >\n                {{ rol.rol_name }}\n              </option>\n            </select>\n</div> \n\n<!-- <div class=\"form-group\">\n         \n            <label for=\"id_categoria\">Categoría</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"id_categoria\"\n              placeholder=\"Seleccione categoria\"\n              #id_categoria=\"ngModel\"\n              [(ngModel)]=\"datoregistro.id_categoria\"\n            >\n              <option [ngValue]=\"null\">Seleccione Categoría</option>\n              <option\n                *ngFor=\"let categoria of categorias\"\n                value=\"{{ categoria.id_categoria }}\"\n              >\n                {{ categoria.categoria_name }}\n              </option>\n            </select>\n</div> -->\n\n\n    \n        <div class=\"col-md-6\">\n            <label for=\"prioridad\">Prioridad</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"prioridad\"\n              placeholder=\"Seleccione prioridad\"\n              #prioridad=\"ngModel\"\n              [(ngModel)]=\"datoregistro.prioridad\"\n            >\n              <option [ngValue]=\"null\" selected>Seleccione prioridad</option>\n              <option value=\"alta\">Alta</option>\n              <option value=\"media\">Media</option>\n              <option value=\"baja\">Baja</option>\n            </select>\n        </div>\n        <div class=\"col-md-2\"></div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <!-- <div class=\"form-group\">\n            <label for=\"tarea\">Asignar persona</label>\n            <input\n              required\n              style=\"background-color: white;\"\n              placeholder=\"Resumen tarea\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n              #tarea=\"ngModel\"\n              required\n              minlength=\"4\"\n              name=\"tarea\"\n              type=\"text\"\n              [(ngModel)]=\"datoregistro.tarea\"\n            />\n          </div> -->\n        </div>\n        <div class=\"col-md-4\">\n\n            \n<!-- \n\n            <div class=\"form-group\">\n                <label for=\"id_recurrencia\">Recurrencia</label>\n                <select\n                  required\n                  style=\"background-color: white;\"\n                  class=\"form-control form-control-sm\"\n                  name=\"id_recurrencia\"\n                  #estatus=\"ngModel\"\n                  [(ngModel)]=\"datoregistro.id_recurrencia\"\n                >\n                  <option [ngValue]=\"null\">Seleccione recurrencia</option>\n                  <option\n                    *ngFor=\"let recurrencia of recurrencias\"\n                    value=\"{{ recurrencia.id_recurrencia }}\"\n                  >\n                    {{ recurrencia.recurrencia_name }}\n                  </option>\n                </select>\n              </div>\n\n -->\n\n\n\n\n\n        </div>\n        <div class=\"col-md-4\">\n          <div *ngIf=\"datoregistro.id_categoria === '3'\">\n            <label for=\"dp\">Fecha fin acción</label>\n            <div class=\"input-group\">\n              <input\n                class=\"form-control\"\n                placeholder=\"yyyy-mm-dd\"\n                name=\"dp\"\n                [(ngModel)]=\"model\"\n                ngbDatepicker\n                #d=\"ngbDatepicker\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  class=\"btn btn-outline-secondary calendar\"\n                  (click)=\"d.toggle()\"\n                  type=\"button\"\n                ></button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-4\">\n\n        </div>\n        <div class=\"col-4\"></div>\n        <div class=\"col-4\"></div>\n      </div>\n    </div>\n    <div class=\"col-md-6 pt-5\">\n      <div class=\"form-group\">\n        <label for=\"observaciones\">{{ \"txtObservaciones\" | translate }}</label>\n\n        <ckeditor\n          (ready)=\"onReady($event)\"\n          rows=\"10\"\n          placeholder=\"Observaciones\"\n          #observaciones=\"ngModel\"\n          maxlength=\"2000\"\n          name=\"observaciones\"\n          [(ngModel)]=\"datoregistro.observaciones\"\n          [editor]=\"Editor\"\n          data=\"\"\n        ></ckeditor>\n      </div>\n\n      <div class=\"form-group text-center\">\n        <button (click)=\"altaRegistro()\" class=\"btn btn-primary colortopacio\">\n          {{ \"txtAgregar\" | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-configuracion',\r\n    templateUrl: './configuracion.pages.html'\r\n})\r\n\r\nexport class ConfiguracionPage {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"page-content\" id=\"content\">\r\n  <app-header></app-header>\r\n  <app-menu></app-menu>\r\n\r\n  \r\n  <div class=\"row m-2\">\r\n    <div class=\"col-md-12 mt-4\">\r\n      <h3>Configuración</h3>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\"><a [routerLink]=\"['/', 'home']\">Home</a></li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">Configuración</li>\r\n        </ol>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n  <div class=\"row m-2 mt-4\">\r\n    <div class=\"col-md-12 \">\r\n      <table class=\"table table-hover table-sm \">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Acciones\r\n            </th>\r\n            <th>\r\n              categoria\r\n            </th>\r\n            <th>\r\n              recurrencia\r\n            </th>\r\n            <th>\r\n              Status\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr class=\"table-active\">\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-descarga',\r\n    templateUrl: './descarga.pages.html'\r\n})\r\n\r\nexport class DescargaPage {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"page-content\" id=\"content\">\r\n  <app-header></app-header>\r\n  <app-menu></app-menu>\r\n\r\n  \r\n  <div class=\"row m-2\">\r\n    <div class=\"col-md-12 mt-4\">\r\n      <h3>Descarga</h3>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\"><a [routerLink]=\"['/', 'home']\">Home</a></li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">Descarga</li>\r\n        </ol>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n  <div class=\"row m-2 mt-4\">\r\n    <div class=\"col-md-12 \">\r\n      <table class=\"table table-hover table-sm \">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Acciones\r\n            </th>\r\n            <th>\r\n              categoria\r\n            </th>\r\n            <th>\r\n              recurrencia\r\n            </th>\r\n            <th>\r\n              Status\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr class=\"table-active\">\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Issue } from '../models/issue';\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Roles } from '../models/roles';\nimport { Recurrencias } from '../models/recurrencias';\nimport { Estados } from '../models/estados';\nimport { Categorias } from '../models/categorias';\nimport { Constantes } from '../models/constantes.model';\n\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\n@Component({\n  selector: 'app-detalle',\n  templateUrl: './detalle.component.html'\n\n})\n\n\n\nexport class DetalleComponent implements OnInit {\n  closeResult = '';\n  model: NgbDateStruct;\n  registro: Issue = new Issue();\n  dregistroa: Issue = new Issue();\n  registropersona: Seguimiento = new Seguimiento();\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  id_categoria: string;\n  periodetalle: any[];\n  categoperiod: any;\n  periodcate: any;\n\n  public onReady(editor) {\n    editor.ui.getEditableElement().parentElement.insertBefore(\n      editor.ui.view.toolbar.element,\n      editor.ui.getEditableElement()\n    );\n  }\n\n  roles: Roles[] = [];\n  recurrencias: Recurrencias[] = [];\n  estados: Estados[] = [];\n  categorias: Categorias[] = [];\n  personas: Personas[] = [];\n  suscripcion: Seguimiento[] = [];\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  datosborrado: string;\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_seguimiento: null,\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\n    id_persona: null,\n    id_persona_log: localStorage.getItem('id_persona')\n  }\n  constructor(private httpClient: HttpClient, private registroService: DetalleService,\n    private activatedRoute: ActivatedRoute, private router: Router,\n    private modalService: NgbModal) {\n\n\n    this.dias = [\n      { name: 'OptionA', value: 'first_opt', checked: true },\n      { name: 'OptionB', value: 'second_opt', checked: false },\n      { name: 'OptionC', value: 'third_opt', checked: true }\n    ];\n\n\n\n\n    //cargo los roles para los combos select\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n      this.roles = result;\n    }, error => console.error(error));\n    //cargo los estados para los combos select\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/estados_read.php').subscribe(result => {\n      this.estados = result;\n    }, error => console.error(error));\n    //cargo las recurrencias para los combos select\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/recurrencias_read.php').subscribe(result => {\n      this.recurrencias = result;\n    }, error => console.error(error));\n    //cargo las categorias para los combos select\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/categorias_read.php').subscribe(result => {\n      this.categorias = result;\n    }, error => console.error(error));\n    //cargo las personas para los combos select\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n      this.personas = result;\n    }, error => console.error(error));\n    //cargo el listado de personas para esta ID tarea\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_suscritas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n      this.suscripcion = result;\n    }, error => console.error(error));\n\n\n\n\n\n\n\n  }\n\n  ngOnInit() {\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id_tarea');\n    this.registroService.getPerson(id_tarea)\n      .subscribe((respuesta: Issue) => {\n        this.registro = respuesta;\n        this.registro.id_tarea = id_tarea;\n        this.registro.id_persona = localStorage.getItem('id_persona');\n\n\n        //cargo el listado periodicidades de esta tarea para verificar a que categoria pertenecen y mostrar un combo u otro\n        this.httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n          this.periodetalle = result[0];\n          if (undefined == this.periodetalle) {\n            this.registro.decidecategoria = '0';\n          } else {\n            this.periodcate = this.periodetalle['id_categoria'];\n            this.registro.decidecategoria = this.periodcate;\n          }\n        }, error => console.error(error));\n\n      });\n\n  }\n\n\n  recarga() {\n    location.reload();\n  }\n\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  guardarregistro(form: NgForm) {\n    if (this.registro.tarea == '' || this.registro.hora == '' || this.registro.estatus == '') {\n      Swal.fire({\n        text: 'Los campos obligatorios no pueden quedar vacíos',\n        icon: 'error',\n        showConfirmButton: true\n      });\n    } else {\n      var patronHora = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n      var horaResult = patronHora.test(this.registro.hora);\n\n      if (horaResult == false) {\n        Swal.fire({\n          text: 'El campo Hora debe cumplir con el formato adecuado',\n          icon: 'error',\n          showConfirmButton: true\n        });\n      } else {\n        let peticion: Observable<any>;\n        peticion = this.registroService.actualizarRegistro(this.registro);\n        peticion.subscribe(respuesta => {\n          Swal.fire({\n            title: this.registro.tarea,\n            text: 'Registro modificado',\n            icon: 'success',\n            showConfirmButton: true\n          }), this.recarga();\n\n        });\n\n      }\n\n    }\n\n  }\n\n\n\n\n\n  guardarseguimiento() {\n    if (this.datoregistro.id_persona == null) {\n      Swal.fire({\n        text: 'Debe seleccionar a alguien!',\n        icon: 'error',\n        showConfirmButton: true\n      });\n    } else {\n      let peticion: Observable<any>;\n      peticion = this.registroService.actualizarRegistroSeguimiento(this.datoregistro);\n      peticion.subscribe(respuesta => {\n        Swal.fire({\n          title: this.datoregistro.id_persona,\n          text: 'Persona asignada',\n          icon: 'success',\n          showConfirmButton: false\n        }), this.recarga();\n      });\n    }\n  }\n\n\n\n  \n\n\n\n\n  //eliminar registro      \n  eliminarpersona(registro: Seguimiento, i: string) {\n\n    Swal.fire({\n      title: `¿Desea elimina a esta persona del seguimiento?`,\n      text: 'Confirme si desea borrar el registro',\n      icon: 'question',\n      showConfirmButton: true,\n      showCancelButton: true\n\n    }).then(respuesta => {\n\n      if (respuesta.value) {\n        this.datosborrado = JSON.stringify({ \"id_seguimiento\": registro.id_seguimiento });\n        this.registroService.delete(this.datosborrado).subscribe();\n\n        Swal.fire({\n          title: registro.id_seguimiento,\n          text: 'Registro eliminado',\n          icon: 'success',\n          showConfirmButton: false\n        }), this.recarga();\n\n      }\n    });\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // registro: any = {};\n\n\n  //   constructor( private activatedRoute: ActivatedRoute, \n  //                private _registroService: registrosService \n  //                ) {\n\n  //     this.activatedRoute.params.subscribe ( params => {\n  //       this.registro = this._registroService.getPerson( params['id'] );\n  //     })\n\n  //    }\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.tarea }} - #{{ registro.id_tarea }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  \n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n\n\n\n\n<div class=\"row\">\n  <div class=\"col-12\">\n    {{ \"txtCreado\" | translate }}:\n    <em class=\"text-muted\">{{\n      registro.fecha | date: \"dd/MM/y HH:mm\"\n    }}</em>\n    | {{ \"txtUltimaModificacion\" | translate }}:\n    <em class=\"text-muted\" *ngIf=\"registro.fechamodi == null\"\n      >nunca modificado</em\n    >\n    <em class=\"text-muted\">{{\n      registro.fechamodi | date: \"dd/MM/y HH:mm\"\n    }}</em>\n  </div>\n\n</div>\n\n        \n        \n        \n        \n        </div>\n      </div>\n    </div>\n    <form (ngSubmit)=\"guardarregistro(f)\" #f=\"ngForm\">\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-7 alturaminima mb-5\">\n        <input\n          type=\"hidden\"\n          class=\"form-control\"\n          name=\"id_tarea\"\n          readonly\n          [(ngModel)]=\"registro.id_tarea\"\n        />\n\n\n        <input\n        #id_persona=\"ngModel\"\n        name=\"id_persona\"\n        type=\"hidden\"\n        [(ngModel)]=\"registro.id_persona\"\n      />\n\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group\">\n              <label for=\"tarea\">\n                {{ \"txtTarea\" | translate }}\n              </label>\n              <input\n                name=\"tarea\"\n                required\n                class=\"form-control form-control-sm\"\n                [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n                #tarea=\"ngModel\"\n                minlength=\"4\"\n                type=\"text\"\n                [(ngModel)]=\"registro.tarea\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"hora\">\n                {{ \"txtHora\" | translate }}\n              </label>\n              <input\n                name=\"hora\"\n                required\n                id=\"reloj\"\n                style=\"background-color: white;\"\n                placeholder=\"00:00\"\n                class=\"form-control form-control-sm hora\"\n                [class.is-invalid]=\"hora.invalid && hora.touched\"\n                #hora=\"ngModel\"\n                pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n                minlength=\"5\"\n                maxlength=\"5\"\n                type=\"text\"\n                [(ngModel)]=\"registro.hora\"\n                [ngxTimepicker]=\"fullTime\"\n                [format]=\"24\"\n                readonly\n              />\n\n              <ngx-material-timepicker\n                #fullTime\n                [minutesGap]=\"15\"\n              ></ngx-material-timepicker>\n            </div>\n          </div>\n          <!-- <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"estatus\">\n                {{ \"txtStatus\" | translate }}\n              </label>\n\n              <select\n                required\n                class=\"form-control form-control-sm\"\n                name=\"estatus\"\n                [class.is-invalid]=\"estatus.invalid && estatus.touched\"\n                #estatus=\"ngModel\"\n                [(ngModel)]=\"registro.estatus\"\n                ><option value=\"{{ registro.estatus }}\" selected>{{\n                  registro.estatus\n                }}</option>\n                <option value=\"OK\">OK</option>\n                <option value=\"KO\">KO</option>\n                <option value=\"OK-INC\">OK-INC</option>\n                <option value=\"PENDIENTE\">PENDIENTE</option>\n              </select>\n            </div>\n          </div> -->\n          <div class=\"col-md-8\">\n            <div class=\"form-group\">\n              <label for=\"id_categoria\">Categoría</label>\n              <select\n                required\n                style=\"background-color: white;\"\n                class=\"form-control form-control-sm\"\n                name=\"id_categoria\"\n                #id_categoria=\"ngModel\"\n                [(ngModel)]=\"registro.id_categoria\"\n              >\n\n              <option\n              *ngFor=\"let categoria of categorias\"\n              value=\"{{ categoria.id_categoria }}\"\n              >\n              {{ categoria.categoria_name }}\n              </option>\n\n              </select>\n            </div>\n          </div>\n        </div>\n<!--acciones variables-->\n        <div class=\"row\">\n          <div class=\"col-md-12 mb-3\">\n\n          <div *ngIf=\"registro.decidecategoria != ''\">\n                      <!--accion puntual-->\n                      <div *ngIf=\"registro.id_categoria === '3'\">\n                        <div *ngIf=\"registro.decidecategoria === '3'\"><app-accion></app-accion></div>\n                      </div>\n                      <!--/end accion puntual-->\n                      <!--check-->\n                      <div *ngIf=\"registro.id_categoria === '1'\">\n                        <div *ngIf=\"registro.decidecategoria === '1'\"><app-check></app-check></div>\n                      </div>\n                      <!--end check-->\n          </div>\n          <div *ngIf=\"registro.decidecategoria === '0' \">\n                      <!--accion puntual-->\n                      <div *ngIf=\"registro.id_categoria === '3'\">\n                        <app-accion></app-accion>\n                      </div>\n                      <!--/end accion puntual-->\n                      <!--check-->\n                      <div *ngIf=\"registro.id_categoria === '1'\">\n                        <app-check></app-check>\n                      </div>\n                      <!--end check-->\n          </div>\n\n\n          </div>  \n        </div>\n<!--/end acciones variables-->\n        <div class=\"row\">\n          <div class=\"col-4\">\n            <label for=\"prioridad\">Prioridad</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"prioridad\"\n              placeholder=\"Seleccione prioridad\"\n              #prioridad=\"ngModel\"\n              [(ngModel)]=\"registro.prioridad\"\n            >\n              <option [ngValue]=\"null\" selected>Seleccione prioridad</option>\n              <option value=\"alta\">Alta</option>\n              <option value=\"media\">Media</option>\n              <option value=\"baja\">Baja</option>\n            </select>\n          </div>\n          <div class=\"col-4\"></div>\n          <div class=\"col-4\"></div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12 mt-3 mb-3\">\n            <hr />\n\n            <div class=\"row\">\n              <div class=\"col-10 mt-2 mb-2 pt3 pb3\">\n                <h5 class=\"titolpetit\">\n                  Personas que participan en el seguimiento\n                </h5>\n              </div>\n              <div class=\"col-2 mt-2 mb-2 text-right\">\n                <a\n                  alt=\"Asignar nueva persona de seguimiento\"\n                  title=\"Asignar nueva persona de seguimiento\"\n                  (click)=\"open(content)\"\n                  class=\"altaseguimiento\"\n                  ><i class=\"fa fa-plus fa-1\"></i\n                ></a>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div\n                class=\"col-12 mt-1 mb-1 pb1 pt1\"\n                *ngFor=\"let suscripcio of suscripcion\"\n              >\n                <div class=\"row\">\n                  <div class=\"col-4\">\n                    {{ suscripcio.id_seguimiento }} - {{ suscripcio.nombres }}\n                  </div>\n                  <div class=\"col-4\">{{ suscripcio.email }}</div>\n                  <div class=\"col-2\">{{ suscripcio.rol_name }}</div>\n                  <div class=\"col-2 text-right\">\n                    <a\n                      alt=\"Eliminar persona de seguimiento\"\n                      title=\"Eliminar persona de seguimiento\"\n                      (click)=\"eliminarpersona(suscripcio, i)\"\n                      class=\"altaseguimiento\"\n                      ><i class=\"fa fa-trash\"></i\n                    ></a>\n                  </div>\n                </div>\n\n                <hr class=\"bdott\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group text-center\">\n              <button type=\"submit\" class=\"btn btn-info mr-2\">\n                {{ \"txtModificar\" | translate }}\n              </button>\n              <button [routerLink]=\"['/home']\" class=\"btn btn-warning\">\n                {{ \"txtVolver\" | translate }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-5 alturaminima mb-5\">\n        <div class=\"form-group\">\n          <label for=\"observaciones\">{{\n            \"txtObservaciones\" | translate\n          }}</label>\n          <ckeditor\n          [config]=\"{ toolbar: [ 'link', '|', 'bold', 'italic' ] }\"\n            (ready)=\"onReady($event)\"\n            id=\"ibmeditor\"\n            placeholder=\"Observaciones\"\n            #observaciones=\"ngModel\"\n            maxlength=\"2000\"\n            name=\"observaciones\"\n            [(ngModel)]=\"registro.observaciones\"\n            [editor]=\"Editor\"\n            data=\"\"\n          ></ckeditor>\n        </div>\n      </div>\n    </div>\n  </form>\n\n  <ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Seguimiento de la issue\n      </h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <input\n          name=\"id_tarea\"\n          type=\"hidden\"\n          #id_tarea=\"ngModel\"\n          [(ngModel)]=\"datoregistro.id_tarea\"\n        />\n        <input\n          name=\"id_persona_log\"\n          type=\"hidden\"\n          #id_persona_log=\"ngModel\"\n          [(ngModel)]=\"datoregistro.id_persona_log\"\n        />\n\n        \n        <label for=\"id_persona\"\n          >Seleccione la persona para designarle el seguimiento</label\n        >\n        <div class=\"input-group\">\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm\"\n            name=\"id_persona\"\n            placeholder=\"Seleccione persona\"\n            #id_persona=\"ngModel\"\n            [(ngModel)]=\"datoregistro.id_persona\"\n          >\n            <option [ngValue]=\"null\">Seleccione persona</option>\n            <option\n              *ngFor=\"let persona of personas\"\n              value=\"{{ persona.id_persona }}\"\n            >\n              {{ persona.nombres }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button (click)=\"guardarseguimiento()\" class=\"btn btn-info\">\n        Añadir persona\n      </button>\n    </div>\n  </ng-template>\n\n  <app-footer></app-footer>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../models/issue';\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Roles } from '../models/roles';\nimport { Recurrencias } from '../models/recurrencias';\nimport { Estados } from '../models/estados';\nimport { Categorias } from '../models/categorias';\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\nimport { DetalleHistoricoService } from '../services/detallehistorico.service';\nimport { IssueHistorico } from '../models/issuehistorico';\n@Component({\n  selector: 'app-detallehistorico',\n  templateUrl: './detallehistorico.component.html'\n  \n})\n\n\n\nexport class DetalleHistoricoComponent implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:IssueHistorico = new IssueHistorico();\n  registropersona:Seguimiento = new Seguimiento();\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n  roles: Roles[] = [];\n    recurrencias: Recurrencias[] = [];\n    estados: Estados [] = [];\n    categorias: Categorias [] = [];\n    personas: Personas [] = [];\n    suscripcion: Seguimiento[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n    datoregistro = {\n      id_seguimiento: null,\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\n      id_persona: null\n    }\n  constructor(private httpClient: HttpClient,private registroService: DetalleHistoricoService,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n\n\n        //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n      //cargo los estados para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/estados_read.php').subscribe(result => {\n          this.estados = result;\n        }, error => console.error(error));\n       //cargo las recurrencias para los combos select\n       httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/recurrencias_read.php').subscribe(result => {\n          this.recurrencias = result;\n        }, error => console.error(error));\n      //cargo las categorias para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/categorias_read.php').subscribe(result => {\n          this.categorias = result;\n        }, error => console.error(error));        \n      //cargo las personas para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n        this.personas = result;\n      }, error => console.error(error));   \n     //cargo el listado de personas para esta ID tarea\n     httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_suscritas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n      this.suscripcion = result;\n     }, error => console.error(error));\n\n\n\n\n              }\n\n  ngOnInit(){\n    const id_log = this.activatedRoute.snapshot.paramMap.get('id_log');\n    this.registroService.getDetalleHistorico ( id_log )\n      .subscribe( (respuesta:IssueHistorico) => {\n         this.registro = respuesta;\n         this.registro.id_log =   id_log;\n    \n      });\n\n  }\n\n\n  recarga(){ \n    location.reload();\n  }\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n   //eliminar registro      \n   eliminarpersona ( registro: Seguimiento, i:string){\n\n    Swal.fire({\n        title: `¿Desea elimina a esta persona del seguimiento?`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n      console.log(\"id seguimiento: \",registro.id_seguimiento);\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"id_seguimiento\": registro.id_seguimiento });\n            this.registroService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.id_seguimiento,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>Histórico de Logs</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.tarea }} - #{{ registro.id_log }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.fecha | date: \"dd/MM/y HH:mm\"\n          }}</em>\n          \n         \n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-7 alturaminima mb-5\">\n        <input\n          type=\"hidden\"\n          class=\"form-control\"\n          name=\"id_log\"\n          readonly\n          [(ngModel)]=\"registro.id_log\"\n        />\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group\">\n              <label for=\"tarea\">\n                {{ \"txtTarea\" | translate }}\n              </label>\n              <input\n                name=\"tarea\"\n                required\n                class=\"form-control form-control-sm\"\n                [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n                #tarea=\"ngModel\"\n                minlength=\"4\"\n                type=\"text\"\n                [(ngModel)]=\"registro.tarea\"\n                disabled\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"nombres\">\n                Usuario\n              </label>\n              <input\n                name=\"nombres\"\n                required\n              \n                style=\"background-color: white;\"\n        \n                class=\"form-control form-control-sm\"\n              \n                #nombres=\"ngModel\"\n    \n                type=\"text\"\n                [(ngModel)]=\"registro.nombres\"\n             readonly\n                disabled\n              />\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"id_persona\">\n                Usuario creado\n              </label>\n              <input\n                name=\"id_persona\"\n                required\n              \n                style=\"background-color: white;\"\n        \n                class=\"form-control form-control-sm\"\n              \n                #id_persona=\"ngModel\"\n    \n                type=\"text\"\n                [(ngModel)]=\"registro.id_persona\"\n             readonly\n                disabled\n              />\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n       \n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-12 mb-3\" >\n \n          </div>  \n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-4\"></div>\n          <div class=\"col-4\"></div>\n          <div class=\"col-4\"></div>\n        </div>\n\n  \n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group text-center\">\n              <!-- <button type=\"submit\" class=\"btn btn-info mr-2\">\n                {{ \"txtModificar\" | translate }}\n              </button> -->\n              <button [routerLink]=\"['/historico']\" class=\"btn btn-warning\">\n                {{ \"txtVolver\" | translate }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-5 alturaminima mb-5\">\n        <div class=\"form-group\">\n          <label for=\"observaciones\">{{\n            \"txtObservaciones\" | translate\n          }}</label>\n          <textarea\n            #descripcion=\"ngModel\"\n    class=\"form-control\"\n    rows=\"10\"\n            name=\"observaciones\"\n            [(ngModel)]=\"registro.descripcion\"\n\n            disabled\n          ></textarea>\n        </div>\n      </div>\n    </div>\n \n\n \n\n  <app-footer></app-footer>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\nimport { DetalleHistoricoService } from '../services/detallehistorico.service';\nimport { ApiPersonas } from '../services/apipersonas.service';\nimport { Roles } from '../models/roles';\n@Component({\n  selector: 'app-detallepersona',\n  templateUrl: './detallepersona.component.html'\n  \n})\n\n\n\nexport class DetallePersona implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:Personas = new Personas();\n\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n\n    personas: Personas [] = [];\n    roles: Roles[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n\n    fieldTextType: boolean;\n    datoregistro = {\n      id_persona: this.activatedRoute.snapshot.paramMap.get('id_persona'),\n      id_persona_log: localStorage.getItem('id_persona'),\n      nombres: null,\n      telefono: null,\n      email:  null,\n      direccion: null,\n      registrado: null,\n      id_rol: null,\n      password:  null,\n      imagen:  null\n    }\n\n    \n\n  constructor(private httpClient: HttpClient,private registroService: ApiPersonas,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n       //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n\n              }\n\n\n\n  ngOnInit(){\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona');\n \n    this.registroService.getPerson ( id_persona )\n      .subscribe( (respuesta:Personas) => {\n         this.registro = respuesta;\n         this.registro.id_persona =   id_persona;\n\n      });\n\n  }\n\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  recarga(){ \n    location.reload();\n  }\n\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  \n\n\n\n  //alta de registro\n  altaRegistro() {\n\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.nombres==null || this.datoregistro.email==null || this.datoregistro.id_rol==null || this.datoregistro.password==null){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos obligatorios no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.registroService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.nombres,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : false\n          }),this.recarga();      \n        });\n    }\n  }\n\n  \n\n\n  guardarregistro( ){\n    console.log(this.registro);\n    if(\n      this.registro.nombres=='' || \n      this.registro.telefono=='' || \n      this.registro.email=='' || \n      this.registro.password=='' ||\n      this.registro.direccion=='' ||\n      this.registro.id_rol=='' \n      ){\n     Swal.fire({\n       text: 'Los campos obligatorios no pueden quedar vacíos',\n       icon: 'error',  \n       showConfirmButton : true\n     }); \n    }  else {\n            //validacion email      \n            var patronEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/;\n            var emailResult = patronEmail.test(this.registro.email);\n            if(emailResult==false){\n              Swal.fire({\n                text: 'El campo E-mail debe cumplir con el formato adecuado',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else \n            // validacion password\n            // al menos 1 número, una minúscula y una mayuscula\n            // al menos 6 carácteres\n            var patronPassword = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/;\n            var passwordResult = patronPassword.test(this.registro.password);\n            if(passwordResult==false){\n              Swal.fire({\n                text: 'El campo Password debe tener al menos 1 número, una minúscula y una mayúscula y como mínimo 6 carácteres',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else {\n              let peticion: Observable<any>;\n              peticion = this.registroService.actualizarRegistro(this.registro);\n              peticion.subscribe( respuesta => {\n                Swal.fire({\n                  title: this.registro.nombres,\n                  text: 'Registro modificado',\n                  icon: 'success',  \n                  showConfirmButton : false\n                }),this.recarga();  \n              });\n            }\n\n   }\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.nombres }} - #{{ registro.id_persona }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.registrado | date: \"dd/MM/y HH:mm\"\n          }}</em>\n         \n          \n          \n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-2 alturaminima mb-5\">\n       \n\n\n\n\n<app-modimagen></app-modimagen>\n\n\n\n\n\n\n\n      </div>\n\n        <div class=\"col-md-10 alturaminima mb-5\">\n\n\n\n        <div class=\"form-group\">\n          <label for=\"nombres\">{{ \"txtNombres\" | translate }}</label>\n          <input\n            required\n            style=\"background-color: white;\"\n            placeholder=\"{{ 'txtNombres' | translate }}\"\n            class=\"form-control form-control-sm\"\n            [class.is-invalid]=\"nombres.invalid && nombres.touched\"\n            #nombres=\"ngModel\"\n            required\n            minlength=\"4\"\n            name=\"nombres\"\n            type=\"text\"\n            [(ngModel)]=\"registro.nombres\"\n          />\n        </div>\n  \n\n\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"txtEmail\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtEmail' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"email.invalid && email.touched\"\n              #email=\"ngModel\"\n              required\n              [email]=\"true\"\n              name=\"email\"\n              type=\"email\"\n              [(ngModel)]=\"registro.email\"\n            />\n          </div>\n  </div>\n  <div class=\"col-md-4\">       \n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"txtPassword\" | translate }}</label>\n            <div class=\"input-group\">\n            <input\n              required\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtPassword' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"password.invalid && password.touched\"\n              #password=\"ngModel\"\n              required\n              name=\"password\"\n              type=\"password\"\n              [(ngModel)]=\"registro.password\"\n              [type]=\"fieldTextType ? 'text' : 'password'\"\n            />\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\">\n                <i\n                class=\"fa\"\n                [ngClass]=\"{\n                  'fa-eye-slash': !fieldTextType,\n                  'fa-eye': fieldTextType\n                }\"\n                (click)=\"toggleFieldTextType()\"\n              ></i>\n              </span>\n           </div>\n          </div>\n</div>\n</div>    \n<div class=\"col-md-4\">\n  <div class=\"form-group\">\n    <label for=\"telefono\">{{ \"txtTelefono\" | translate }}</label>\n    <input\n      style=\"background-color: white;\"\n      placeholder=\"{{ 'txt9digitos' | translate }}\"\n      class=\"form-control form-control-sm\"\n      #telefono=\"ngModel\"\n      minlength=\"9\"\n      name=\"telefono\"\n      type=\"text\"\n      [(ngModel)]=\"registro.telefono\"\n    />\n  </div>\n</div>\n\n\n</div>\n<div class=\"row\">\n<div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"direccion\">{{ \"txtDireccion\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtDireccion' | translate }}\"\n              class=\"form-control form-control-sm\"\n              #direccion=\"ngModel\"\n              name=\"direccion\"\n              type=\"text\"\n              [(ngModel)]=\"registro.direccion\"\n            />\n          </div>\n\n</div>\n<div class=\"col-md-6\">\n\n\n        <div class=\"form-group\">\n          <label for=\"id_rol\">{{ \"txtRol\" | translate }}</label>\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm\"\n            name=\"id_rol\"\n           \n            [class.is-invalid]=\"id_rol.invalid && id_rol.touched\"\n            #id_rol=\"ngModel\"\n            [(ngModel)]=\"registro.id_rol\"\n          >\n          <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\n            {{rol.rol_name}}\n          </option>\n          </select>\n        </div>\n</div>\n</div>\n        <div class=\"form-group text-center\">\n           <button (click)=\"guardarregistro()\" class=\"btn btn-primary colortopacio\">\n            {{ \"txtModificar\" | translate }}\n          </button> \n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    </div>\n \n\n \n\n  <app-footer></app-footer>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Roles } from '../../models/roles';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../../models/constantes.model';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport Swal from 'sweetalert2';\nimport { Observable } from 'rxjs';\nimport { AdminServicioService } from '../../services/admin-servicio.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Ayuda } from '../../models/ayuda';\n\n@Component({\n  selector: 'app-formayuda',\n  templateUrl: './ayuda.component.html',\n  styles: [\n  ],\n})\n\nexport class AyudaFormComponent implements OnInit {\n\n  ayudas: Ayuda[] = [];\n  \n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  closeResult = '';\n\n  datosformularioayuda = {\n    id_persona_log: localStorage.getItem('id_persona'),\n    ayudatitulo: null,\n    ayudatexto: null\n  }\n\n  datosformulariomodi: Ayuda = new Ayuda();\n\n  datosborrado: string;\n  datosborradoAyuda: string;\n  constructor(private httpClient: HttpClient,private modalService: NgbModal,private adminService: AdminServicioService) {\n     \n    ayudatitulo: new FormControl('', Validators.maxLength(10)) \n\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_ayuda.php').subscribe(result => {\n        this.ayudas = result;\n      }, error => console.error(error));\n\n   }\n\n  ngOnInit(){\n\n  }\n\n  recarga() {\n    location.reload();\n  }\n\n  //abrir modal\n  openayuda(content) {\n        this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n          this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReasonA(reason)}`;\n        });\n  }\n  private getDismissReasonA(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n}\n\n  //abrir modal\n  openayudaModi(contentmodi, id_ayuda: string, id_persona_log: string) {\n      this.modalService.open(contentmodi, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n        this.closeResult = `Closed with: ${result}`;\n      }, (reason) => {\n        this.closeResult = `Dismissed ${this.getDismissReasonB(reason)}`;\n      });\n      this.edicionAyuda(id_ayuda);\n  }\n\n  private getDismissReasonB(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n          return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n          return 'by clicking on a backdrop';\n        } else {\n          return `with: ${reason}`;\n        }\n  }\n\n\n\nedicionAyuda(id_ayuda){\n\n  this.adminService.getAyuda(id_ayuda)\n    .subscribe((respuesta: Ayuda) => {\n      this.datosformulariomodi = respuesta;\n      this.datosformulariomodi.id_ayuda = id_ayuda;\n      this.datosformulariomodi.id_persona_log = localStorage.getItem('id_persona');\n    });\n\n}\n\n\n  \n  guardarNuevaAyuda() {\n    if (this.datosformularioayuda.ayudatitulo == null || this.datosformularioayuda.ayudatexto == null) {\n      Swal.fire({\n        text: 'Debe Escribir un titulo y un texto!',\n        icon: 'error',\n        showConfirmButton: true\n      });\n\n    } else {\n      let peticion: Observable<any>;\n      peticion = this.adminService.guardarNewAyuda(this.datosformularioayuda);\n      peticion.subscribe(respuesta => {\n        Swal.fire({\n          title: this.datosformularioayuda.ayudatitulo,\n          text: 'Nueva entrada de FAQs creada',\n          icon: 'success',\n          showConfirmButton: false\n        }), this.recarga();\n      });\n    }\n   }\n\n\n   guardarModificarAyuda() {\n    if (this.datosformulariomodi.ayudatitulo == null || this.datosformulariomodi.ayudatexto == null) {\n      Swal.fire({\n        text: 'Debe Escribir un titulo y un texto!',\n        icon: 'error',\n        showConfirmButton: true\n      });\n    } else {\n      let peticion: Observable<any>;\n      peticion = this.adminService.guardarAyudaModificado(this.datosformulariomodi);\n      peticion.subscribe(respuesta => {\n        Swal.fire({\n          title: this.datosformulariomodi.ayudatitulo,\n          text: 'Entrada modificada',\n          icon: 'success',\n          showConfirmButton: false\n        }), this.recarga();\n      });\n    }\n   }\n\n   \neliminarAyuda(registro: Ayuda, i: string) {\n  Swal.fire({\n    title: `WARNING!! ¿Desea elimina esta FAQ?`,\n    text: 'Confirme si desea borrar el registro',\n    icon: 'question',\n    showConfirmButton: true,\n    showCancelButton: true\n  }).then(respuesta => {\n    if (respuesta.value) {\n      const id_persona_log = localStorage.getItem('id_persona');\n      this.datosborradoAyuda = JSON.stringify({ \"id_ayuda\": registro.id_ayuda, \"id_persona_log\": id_persona_log });\n      this.adminService.deleteAyuda(this.datosborradoAyuda).subscribe();\n      Swal.fire({\n        title: registro.id_ayuda,\n        text: 'Registro eliminado',\n        icon: 'success',\n        showConfirmButton: false\n      }), this.recarga();\n    }\n  });\n}\n\n\n\n}\n","<div class=\"rol\">\n    <div class=\"col-12 alert bg-dark text-white\">\n        <div class=\"row\">\n            <div class=\"col-9\"><h4>Ayuda - Añada o edite elementos FAQ a la página de Ayuda</h4></div>\n            <div class=\"col-3 text-right\"><a (click)=\"openayuda(content)\" class=\"altaseguimientow\" alt=\"Añadir Ayuda\" title=\"Añadir Ayuda\"><i class=\"fa fa-plus fa-1\"></i></a></div>\n        </div>\n    </div>\n</div>\n<div class=\"rol\">\n    <div class=\"col-12 alert p-0 m-0 ovefr\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                    <th>Título</th>\n                    <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let ayuda of ayudas\">\n                        <td>{{ ayuda.ayudatitulo }}</td>\n                        <td class=\"text-right\"> \n                            \n                        <a \n                        (click)=\"openayudaModi(contentmodi,ayuda.id_ayuda)\" \n                        class=\"altaseguimiento mr-2\" \n                        alt=\"Modificar Ayuda\" \n                        title=\"Modificar Ayuda\"><i class=\"fa fa-edit\"></i></a>\n\n                        <a\n                            alt=\"Eliminar Ayuda\"\n                            title=\"Eliminar Ayuda\"\n                            (click)=\"eliminarAyuda(ayuda, i)\"\n                            class=\"altaseguimiento\"\n                            ><i class=\"fa fa-trash\"></i\n                        ></a>\n \n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n    </div>\n</div>\n\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Nueva entrada de FAQs\n      </h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <input\n          name=\"id_persona_log\"\n          type=\"hidden\"\n          #id_persona_log=\"ngModel\"\n          [(ngModel)]=\"datosformularioayuda.id_persona_log\"\n        />\n        <label for=\"ayudatitulo\">Escriba un título</label>\n        <input\n        name=\"ayudatitulo\"\n        type=\"text\"\n        maxlength=\"100\"\n        #ayudatitulo=\"ngModel\"\n        class=\"form-control  mb-2\"\n        [(ngModel)]=\"datosformularioayuda.ayudatitulo\"\n        />\n\n        <p>Texto (máx 650 carácteres)</p>\n        <div class=\"input-group\">\n            <textarea rows=\"10\" \n            required \n            class=\"form-control  mb-2\" \n            maxlength=\"650\"\n            name=\"ayudatexto\" \n            #ayudatexto=\"ngModel\" \n            [(ngModel)]=\"datosformularioayuda.ayudatexto\"></textarea>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button (click)=\"guardarNuevaAyuda()\" class=\"btn btn-info\">\n        Guardar registro\n      </button>\n    </div>\n  </ng-template>\n\n\n  <!--MODIFICAR-->\n  <ng-template #contentmodi let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Modificar entrada de FAQs\n      </h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <input\n          name=\"id_persona_log\"\n          type=\"hidden\"\n          #id_persona_log=\"ngModel\"\n          [(ngModel)]=\"datosformulariomodi.id_persona_log\"\n        />\n\n        <input\n        name=\"id_ayuda\"\n        type=\"hidden\"\n        #id_ayuda=\"ngModel\"\n        [(ngModel)]=\"datosformulariomodi.id_ayuda\"\n      />\n\n        <label for=\"ayudatitulo\">Escriba un título</label>\n        <input\n        name=\"ayudatitulo\"\n        type=\"text\"\n        maxlength=\"100\"\n        #ayudatitulo=\"ngModel\"\n        class=\"form-control  mb-2\"\n        [(ngModel)]=\"datosformulariomodi.ayudatitulo\"\n        />\n\n        <p>Texto (máx 650 carácteres)</p>\n        <div class=\"input-group\">\n            <textarea rows=\"10\" \n            required \n            class=\"form-control  mb-2\" \n            maxlength=\"650\"\n            name=\"ayudatexto\" \n            #ayudatexto=\"ngModel\" \n            [(ngModel)]=\"datosformulariomodi.ayudatexto\"></textarea>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button (click)=\"guardarModificarAyuda()\" class=\"btn btn-info\">\n        Guardar registro\n      </button>\n    </div>\n  </ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuracion-general',\n  templateUrl: './configuracion-general.component.html',\n  styles: [\n  ],\n})\nexport class ConfiguracionGeneralComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>configuracion-general works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { Incidencia } from '../../models/incidencia';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { Constantes } from '../../models/constantes.model';\nimport { Observable } from 'rxjs';\nimport { IncidenciasService } from '../../services/incidencias.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm, FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-incidenciadetalle',\n  templateUrl: './incidenciadetalle.component.html'\n})\n\nexport class IncidenciadetalleComponent implements OnInit {\n\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:Incidencia = new Incidencia();\n  isSubmitted = false;\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n\n\n  resolverSubmit = new FormGroup({\n    id_incidencias: new FormControl(''),\n    token_incidencia: new FormControl(''),\n  });\n\n\n\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n    datoregistro = {\n      id_seguimiento: null,\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\n      id_persona: null\n    }\n  constructor(private httpClient: HttpClient,private incidenciasService: IncidenciasService,\n              private activatedRoute: ActivatedRoute,private router: Router,private fb: FormBuilder\n              ){\n\n\n\n              }\n\n  ngOnInit(){\n    const token_incidencia = this.activatedRoute.snapshot.paramMap.get('token_incidencia');\n    this.incidenciasService.getDetalleIncidencia ( token_incidencia )\n      .subscribe( (respuesta:Incidencia) => {\n         this.registro = respuesta;\n         this.registro.token_incidencia =   token_incidencia;\n         this.resolverSubmit = this.fb.group({\n          id_incidencias: [this.registro.id_incidencias,Validators.required],\n          token_incidencia: [this.registro.token_incidencia,Validators.required]\n        });\n\n      });\n\n  }\n\n\n\n\n  recarga(){ \n    location.reload();\n  }\n\n\n  onSubmit() { \n    this.isSubmitted = true;\n    const valor = JSON.stringify(this.resolverSubmit.value);\n    \n    this.incidenciasService.guardarIncidencia( valor ).subscribe( respuesta => {\n      Swal.fire({\n        title: 'Incidencia resuelta',\n        text: 'la incidencia ha quedado como resuelta',\n        icon: 'success',  \n        showConfirmButton : true\n      }), this.recarga();\n      \n    });   \n}\n\nget id_incidencias() { return this.resolverSubmit.get('id_incidencias'); }\nget token_incidencia() { return this.resolverSubmit.get('token_incidencia'); }\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n    <app-header></app-header>\n    <app-menu></app-menu>\n  \n    <div class=\"row m-2\">\n      <div class=\"col-md-12 mt-4 tituloseccion\">\n        <h3>Histórico de Logs</h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n              <a [routerLink]=\"['/', 'home']\">Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\n              {{ registro.enunciado }} - #{{ registro.token_incidencia }}\n            </li>\n          </ol>\n        </nav>\n      </div>\n    </div>\n  \n  \n      <div class=\"row m-2 mt-4\">\n        <div class=\"col-md-12\">\n          <div class=\"alert linealbase\">\n           Creada:\n            <em class=\"text-muted\">{{\n              registro.fecha | date: \"dd/MM/y HH:mm\"\n            }}</em>\n            \n           \n          </div>\n        </div>\n      </div>\n  \n      <div class=\"row m-2 mt-4\">\n        <div class=\"col-md-12 alturaminima mb-5\">\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                \n                 <h2 class=\"hachedosgrande\"> {{ registro.enunciado }}              \n               <span *ngIf=\"registro.resuelta==='SI'\" class=\"badge badge-success\">\n                    \n                      Resuelta\n                    \n                </span>\n            </h2>\n                <h5 class=\"mb-2\">Emitida por: <b>{{registro.nombres}}</b></h5>\n                <hr />\n                <p class=\"mt-3 mb-3\">{{registro.textoincidencia}}</p>\n                 <hr />\n                <div *ngIf=\"registro.imagenincidencia!=''\">\n                    <h5 class=\"mt-4 mb-2\">Imagen adjunta</h5>\n                                    <img \n                                    class=\"animate fadeIn mb-3\" \n                                    src=\"{{registro.imagenincidencia}}\" \n                                    jpPreload=\"{{registro.imagenincidencia}}\"\n                                    alt=\"\" />\n                    <hr /> \n                </div>               \n              </div>\n            </div>\n          </div>\n\n  \n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-group text-center\">\n<form [formGroup]=\"resolverSubmit\" (ngSubmit)=\"onSubmit()\" >  \n                <input\n                type=\"hidden\"\n                class=\"form-control\"\n                formControlName=\"id_incidencias\"\n                />\n                <input\n                type=\"hidden\"\n                class=\"form-control\"\n                formControlName=\"token_incidencia\"\n                />\n            <span *ngIf=\"registro.resuelta==='SI'\">\n                <button disabled class=\"btn btn-success mr-2\">\n                  Resuelta\n                </button> \n            </span>\n            <span *ngIf=\"registro.resuelta!='SI'\">\n                <button [disabled]=\"!resolverSubmit.valid\" type=\"submit\" class=\"btn btn-info mr-2\">\n                  Resolver\n                </button> \n            </span>\n                <button [routerLink]=\"['/incidencias']\" class=\"btn btn-warning\">\n                  {{ \"txtVolver\" | translate }}\n                </button>\n</form>             \n            </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n   \n  \n   \n  \n    <app-footer></app-footer>\n  </div>\n  ","import {Component, ViewChild, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../../models/constantes.model';\nimport { IncidenciasService } from '../../services/incidencias.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-incidencias',\n  templateUrl: './incidencias.component.html'\n})\nexport class IncidenciasComponent implements OnInit {\n\n\n\n   \n  personas:Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_log: null,\n    fecha: null,\n    tarea: null,\n    issueg: null,\n    descripcion_accion: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_log: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  \n  constructor(private spinner: NgxSpinnerService,private httpClient: HttpClient, private incidenciasService: IncidenciasService) {\n        this.fetch(data => {\n          // cache\n            this.temp = [...data];\n            this.rows = data;\n        });\n\n\n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit(){\n\n    /** spinner starts on init */\n    this.spinner.show();\n \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.spinner.hide();\n    }, 2000);\n\n\n\n    this.fetch(data => {\n        this.temp = [...data];\n        this.rows = data;\n      });\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n      location.reload();\n  }\n\n  //cargamos el listado\n  fetch(cb) {\n    if(cb){\n      const req = new XMLHttpRequest();\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/read_incidencias.php`);\n      req.onload = () => {\n        cb(JSON.parse(req.response));\n        console.log(JSON.parse(req.response));\n      };\n      req.send();\n    }\n  }\n\n\n\n\n   //eliminar registro      \n   borrarRegistro ( registro: Issue, i:string){\n\n    Swal.fire({\n        title: `¿Desea borrar el registro histórico ${registro.tarea}`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"tarea\": registro.tarea, \"id_tarea\": registro.id_tarea });\n            this.incidenciasService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.tarea,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function(d) {\n      return  d.fecha.toLowerCase().indexOf(val) !== -1 || d.resuelta.toLowerCase().indexOf(val) !== -1|| d.fecharesuelta.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","<div class=\"page-content\" id=\"content\">\n    <app-header></app-header>\n    <app-menu></app-menu>\n  \n    <div class=\"row m-2\">\n      <div class=\"col-md-12 mt-4\">\n        <h3>{{ \"txtRegistros\" | translate }}</h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n              <a [routerLink]=\"['/', 'home']\">Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\n              Incidencias\n            </li>\n          </ol>\n        </nav>\n      </div>\n    </div>\n  \n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12 alturaminima mb-5\">\n  \n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form\">\n        <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n          <input\n            matInput\n            #filter\n            placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\n            (keyup)=\"updateFilter($event)\"\n          />\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"col-6 text-right\">\n    </div>\n  </div>\n  <ngx-spinner></ngx-spinner>\n        <ngx-datatable\n          #mydatatable\n          class=\"material striped\"\n          headerHeight=\"50\"\n          [limit]=\"15\"\n          [columnMode]=\"'force'\"\n          footerHeight=\"50\"\n          rowHeight=\"auto\"\n          [rows]=\"rows\"\n        >\n          <ngx-datatable-column name=\"id_incidencias\" [maxWidth]=\"90\">\n            <ng-template\n              class=\"mat-column-id\"\n              ngx-datatable-cell-template\n              let-rowIndex=\"rowIndex\"\n              let-value=\"value\"\n              let-row=\"row\"\n            >\n              <div class=\"text-center\">{{ row.id_incidencias }}</div>\n            </ng-template>\n          </ngx-datatable-column>\n          <ngx-datatable-column name=\"Fecha\" [maxWidth]=\"200\">\n\n            <ng-template ngx-datatable-header-template>\n                <span>Fecha</span>\n              </ng-template>\n\n            <ng-template\n              ngx-datatable-cell-template\n              let-rowIndex=\"rowIndex\"\n              let-value=\"value\"\n              let-row=\"row\"\n            >\n                {{ value | slice: 0:90 }}\n  \n            </ng-template>\n          </ngx-datatable-column>\n          <ngx-datatable-column name=\"Enunciado\" [maxWidth]=\"1010\">\n            <ng-template ngx-datatable-header-template>\n                <span>Incidencia</span>\n              </ng-template>\n            <ng-template\n              ngx-datatable-cell-template\n              let-rowIndex=\"rowIndex\"\n              let-value=\"value\"\n              let-row=\"row\"\n            >\n  \n                {{ row.enunciado | slice: 0:90 }}\n             \n            \n            </ng-template>\n          </ngx-datatable-column>\n  \n          <ngx-datatable-column name=\"Nombres\" [maxWidth]=\"210\">\n            <ng-template ngx-datatable-header-template>\n                <span>Emitida por</span>\n              </ng-template>\n            <ng-template\n              ngx-datatable-cell-template\n              let-rowIndex=\"rowIndex\"\n              let-value=\"value\"\n              let-row=\"row\"\n            >\n             \n                {{ value }}\n              \n            </ng-template>\n          </ngx-datatable-column>\n  \n          <ngx-datatable-column name=\"Resuelta\" [maxWidth]=\"80\">\n            <ng-template ngx-datatable-header-template>\n                <span>Resuelta</span>\n              </ng-template>\n            <ng-template\n              ngx-datatable-cell-template\n              let-rowIndex=\"rowIndex\"\n              let-value=\"value\"\n              let-row=\"row\"\n            >\n            <div\n            [ngClass]=\"{\n              positive: row.resuelta == 'SI',\n              negative: row.resuelta == 'NO',\n              posnegtive: row.resuelta == 'STANDBY'\n            }\"\n          >\n                {{ row.resuelta }}\n              </div>\n            </ng-template>\n          </ngx-datatable-column>\n  \n\n          <ngx-datatable-column name=\"Fecharesuelta\" [maxWidth]=\"210\">\n            <ng-template ngx-datatable-header-template>\n                <span>Fecha resolución</span>\n              </ng-template>\n            <ng-template\n              ngx-datatable-cell-template\n              let-rowIndex=\"rowIndex\"\n              let-value=\"value\"\n              let-row=\"row\"\n            >\n             \n             <div class=\"text-center\">  {{ row.fecharesuelta }}</div> \n              \n            </ng-template>\n          </ngx-datatable-column>\n\n\n          <ngx-datatable-column name=\"ver\" [maxWidth]=\"80\">\n            <ng-template\n              class=\"mat-column-id\"\n              ngx-datatable-cell-template\n              let-row=\"row\"\n            >\n              <div class=\"text-center\">\n                <div class=\"row\">\n                  <div class=\"col-12 p0 m0\">\n                    <a\n                      [routerLink]=\"['/incidenciadetalle', row.token_incidencia]\"\n                      class=\"btn btn-warning botonsizes mr-1\"\n                      ><i class=\"fa fa-eye\"></i\n                    ></a>\n                \n                  </div>\n                </div>\n              </div>\n            </ng-template>\n          </ngx-datatable-column>\n        </ngx-datatable>\n      </div>\n  \n  \n    </div>\n  \n    <app-footer></app-footer>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-listados',\n  templateUrl: './listados.component.html',\n  styles: [\n  ],\n})\nexport class ListadosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page-content\" id=\"content\">\n    <app-header></app-header>\n    <app-menu></app-menu>\n  \n    <div class=\"row m-2\">\n      <div class=\"col-md-12 mt-4\">\n        <h3>{{ \"txtRegistros\" | translate }}</h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n              <a [routerLink]=\"['/', 'home']\">Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\n              Listado de componentes\n            </li>\n          </ol>\n        </nav>\n      </div>\n    </div>\n  \n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12 alturaminima mb-5\">\n  \n            <div class=\"row\">\n                <div class=\"col-6\">\n                    <app-formroles></app-formroles>\n                </div>\n           \n                <div class=\"col-6\">\n                    <app-formayuda></app-formayuda>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\"><app-formturnos></app-formturnos>\n                    \n                </div>\n            </div> \n       \n      </div>\n    </div>\n    <app-footer></app-footer>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Roles } from '../../models/roles';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../../models/constantes.model';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport Swal from 'sweetalert2';\nimport { Observable } from 'rxjs';\nimport { AdminServicioService } from '../../services/admin-servicio.service';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-formroles',\n  templateUrl: './roles.component.html',\n  styles: [\n  ],\n})\n\nexport class RolesFormComponent implements OnInit {\n\n  roles: Roles[] = [];\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  closeResult = '';\n\n  datosformulario = {\n    id_persona_log: localStorage.getItem('id_persona'),\n    rol_level: null,\n    rol_name: null,\n    roldescripcion: null\n  }\n  datosborrado: string;\n  constructor(private httpClient: HttpClient,private modalService: NgbModal,private adminService: AdminServicioService) {\n     \n    roldescripcion: new FormControl('', Validators.maxLength(10)) \n\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n        this.roles = result;\n      }, error => console.error(error));\n\n   }\n\n  ngOnInit(){\n  }\n\n  recarga() {\n    location.reload();\n  }\n\n  //abrir modal\n  openroles(content) {\n        this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n          this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n  }\n  private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n          return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n          return 'by clicking on a backdrop';\n        } else {\n          return `with: ${reason}`;\n        }\n  }\n\n\n\n  guardarNuevoRol() {\n    if (this.datosformulario.rol_name == null || this.datosformulario.rol_level == null || this.datosformulario.roldescripcion == null) {\n      Swal.fire({\n        text: 'Debe seleccionar un rol, describirlo brevemente y nombrarlo!',\n        icon: 'error',\n        showConfirmButton: true\n      });\n\n    } else {\n      let peticion: Observable<any>;\n      peticion = this.adminService.guardarRol(this.datosformulario);\n      peticion.subscribe(respuesta => {\n        Swal.fire({\n          title: this.datosformulario.rol_name,\n          text: 'Nuevo rol creado',\n          icon: 'success',\n          showConfirmButton: false\n        }), this.recarga();\n      });\n    }\n   }\n\n\n \neliminarrol(registro: Roles, i: string) {\n  Swal.fire({\n    title: `WARNING!! ¿Desea elimina este rol?`,\n    text: 'Confirme si desea borrar el rol. Tenga en cuenta que todas las tareas o registros que haya creado bajo este rol quedarán sin rol asignado',\n    icon: 'question',\n    showConfirmButton: true,\n    showCancelButton: true\n  }).then(respuesta => {\n    if (respuesta.value) {\n      this.datosborrado = JSON.stringify({ \"id_rol\": registro.id_rol });\n      this.adminService.deleteRol(this.datosborrado).subscribe();\n      Swal.fire({\n        title: registro.id_rol,\n        text: 'Registro eliminado',\n        icon: 'success',\n        showConfirmButton: false\n      }), this.recarga();\n    }\n  });\n}\n\n\n\n}\n","\n<div class=\"rol\">\n    <div class=\"col-12 alert bg-dark text-white\">\n        <div class=\"row\">\n            <div class=\"col-9\"><h4>Roles - Cree o edite roles con nivel de acceso</h4></div>\n            <div class=\"col-3 text-right\"><a (click)=\"openroles(content)\" class=\"altaseguimientow\" alt=\"Añadir rol\" title=\"Añadir rol\"><i class=\"fa fa-plus fa-1\"></i></a></div>\n        </div>\n    </div>\n</div>\n<div class=\"rol\">\n    <div class=\"col-12 alert p-0 m-0\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                    <th>Nivel</th>\n                    <th>Nombre Rol</th>\n                    <th>Descripción</th>\n                    <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let rol of roles\">\n                        <td>{{ rol.rol_level }}</td>\n                        <td>{{rol.rol_name}}</td>\n                        <td>{{ rol.roldescripcion }}</td>\n                        <td>              \n                        <span *ngIf=\"rol.id_rol != 8 &&  rol.id_rol != 7 &&  rol.id_rol != 6 && rol.id_rol != 5 &&  rol.id_rol != 4 && rol.id_rol != 3 && rol.id_rol != 2 && rol.id_rol != 1 \">\n                        <a\n                            alt=\"Eliminar rol\"\n                            title=\"Eliminar rol\"\n                            (click)=\"eliminarrol(rol, i)\"\n                            class=\"altaseguimiento\"\n                            ><i class=\"fa fa-trash\"></i\n                        ></a>\n                        </span>  \n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n    </div>\n</div>\n\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Nuevo Rol\n      </h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <input\n          name=\"id_persona_log\"\n          type=\"hidden\"\n          #id_persona_log=\"ngModel\"\n          [(ngModel)]=\"datosformulario.id_persona_log\"\n        />\n        <label for=\"rol_name\">Asigne un nombre al Rol</label>\n        <input\n        name=\"rol_name\"\n        type=\"text\"\n        #rol_name=\"ngModel\"\n        class=\"form-control  mb-2\"\n        [(ngModel)]=\"datosformulario.rol_name\"\n        />\n        <p>Seleccione el nivel de acceso de este nuevo rol</p>\n        <div class=\"input-group\">\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm mb-2\"\n            name=\"rol_level\"\n            placeholder=\"Seleccione nivel\"\n            #rol_level=\"ngModel\"\n            [(ngModel)]=\"datosformulario.rol_level\"\n          >\n            <option [ngValue]=\"null\">Seleccione nivel</option>\n            <option\n              *ngFor=\"let rolarray of roles\"\n              value=\"{{ rolarray.rol_level }}\">\n            {{ rolarray.rol_level }} - {{ rolarray.roldescripcion }}\n            </option>\n          </select>\n        </div>\n        <p\n        >Breve descripción</p>\n        <div class=\"input-group\">\n            <textarea rows=\"2\" \n            required \n            class=\"form-control  mb-2\" \n            maxlength=\"45\"\n            name=\"roldescripcion\" \n            #roldescripcion=\"ngModel\" \n            [(ngModel)]=\"datosformulario.roldescripcion\"></textarea>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button (click)=\"guardarNuevoRol()\" class=\"btn btn-info\">\n        Añadir Rol\n      </button>\n    </div>\n  </ng-template>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../../models/constantes.model';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport Swal from 'sweetalert2';\nimport { Observable } from 'rxjs';\nimport { AdminServicioService } from '../../services/admin-servicio.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Turnos } from '../../models/turnos';\nimport { Roles } from '../../models/roles';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-formturnos',\n  templateUrl: './turnos.component.html',\n  styles: [\n  ],\n})\n\nexport class TurnosFormComponent implements OnInit {\n  model: NgbDateStruct;\n  turnos: Turnos[] = [];\n  roles: Roles[] = [];\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  closeResult = '';\n\n  datosformularioturno = {\n    id_persona_log: localStorage.getItem('id_persona'),\n    horainicio: null,\n    horafin: null,\n    turno:  null,\n    tipo_turno:  null,\n    turno_horario:  null,\n    id_rol: null,\n    rol_name: null\n  }\n  datosborradoturno: string;\n  constructor(private httpClient: HttpClient,private modalService: NgbModal,private adminService: AdminServicioService) {\n\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/turnos_read.php').subscribe(result => {\n        this.turnos = result;\n      }, error => console.error(error));\n\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n        this.roles = result;\n      }, error => console.error(error));\n\n   }\n\n  ngOnInit(){\n  }\n\n  recarga() {\n    location.reload();\n  }\n\n  //abrir modal\n  openturnos(content) {\n        this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n          this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n  }\n  private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n          return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n          return 'by clicking on a backdrop';\n        } else {\n          return `with: ${reason}`;\n        }\n  }\n\n\n  guardarNuevoTurno() {\n\n    if (\n        this.datosformularioturno.tipo_turno == null || \n        this.datosformularioturno.turno == null || \n        this.datosformularioturno.horafin == null || \n        this.datosformularioturno.horainicio == null || \n        this.datosformularioturno.id_rol == null \n      ) {\n      Swal.fire({\n        text: 'Debe completar los campos!',\n        icon: 'error',\n        showConfirmButton: true\n      });\n\n    } else {\n            //si el campo que recibo es hora...\n            //...valido su formato\n              var patronHora = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n              var horaResulinicio = patronHora.test(this.datosformularioturno.horainicio);\n              var horaResultfin = patronHora.test(this.datosformularioturno.horafin);\n\n              var hoy = formatDate(new Date(), 'yyyy-MM-dd ', 'es');\n              var int = hoy + \" \" + this.datosformularioturno.horainicio;\n              var inicio = Date.parse(int);\n              var fnt = hoy + \" \" + this.datosformularioturno.horafin;\n              var fin = Date.parse(fnt);\n\n              if(horaResulinicio==false){\n\n                Swal.fire({\n                  title: 'Revise los datos',\n                  text: 'El campo \"hora inicio\" debe de cumplir con los requerimientos!!',\n                  icon: 'error',\n                }); \n                this.ngOnInit();  \n\n              } else if(horaResultfin==false){\n                  Swal.fire({\n                    title: 'Revise los datos',\n                    text: 'El campo \"hora fin\" debe de cumplir con los requerimientos!!',\n                    icon: 'error',\n                  }); \n                  this.ngOnInit();  \n              }\n              else if(inicio > fin){\n                Swal.fire({\n                  title: 'Revise los datos',\n                  text: 'La hora de inicio n opuede ser posterior a la hora final',\n                  icon: 'error',\n                }); \n                this.ngOnInit();  \n            }\n\n                else {\n                  let peticion: Observable<any>;\n                  peticion = this.adminService.guardarTurno(this.datosformularioturno);\n                  peticion.subscribe(respuesta => {\n                    Swal.fire({\n                      title: this.datosformularioturno.turno,\n                      text: 'Nuevo turno creado',\n                      icon: 'success',\n                      showConfirmButton: false\n                    }), this.recarga();\n                  });\n              }\n             \n     }\n    }\n\n \neliminarturno(registro: Turnos, i: string) {\n  Swal.fire({\n    title: `WARNING!! ¿Desea elimina este rol?`,\n    text: 'Confirme si desea borrar el turno. Tenga en cuenta que todas las tareas o registros que haya creado bajo este turno quedarán sin turno asignado',\n    icon: 'question',\n    showConfirmButton: true,\n    showCancelButton: true\n  }).then(respuesta => {\n    if (respuesta.value) {\n      this.datosborradoturno = JSON.stringify({ \"id_turno\": registro.id_turno });\n      this.adminService.deleteTurno(this.datosborradoturno).subscribe();\n      Swal.fire({\n        title: registro.id_turno,\n        text: 'Registro eliminado',\n        icon: 'success',\n        showConfirmButton: false\n      }), this.recarga();\n    }\n  });\n}\n\n\n\n}\n","\n<div class=\"rol\">\n    <div class=\"col-12 alert bg-dark text-white\">\n        <div class=\"row\">\n            <div class=\"col-9\"><h4>Turnos - Añada o edite componentes de turnos para determinados roles</h4></div>\n            <div class=\"col-3 text-right\"><a (click)=\"openturnos(content)\" class=\"altaseguimientow\" alt=\"Añadir turno\" title=\"Añadir turno\"><i class=\"fa fa-plus fa-1\"></i></a></div>\n        </div>\n    </div>\n</div>\n<div class=\"rol\">\n    <div class=\"col-12 alert p-0 m-0\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                    <th>Rol</th>\n                    <th>Nombre Turno</th>\n                    <th>Tipo</th>\n                    <th>Hora inicio</th>\n                    <th>Hora fin</th>\n                    <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let turno of turnos\">\n                        <td>{{ turno.rol_name }}</td>\n                        <td>{{turno.turno}}</td>\n                        <td>{{turno.tipo_turno}}</td>\n                        <td>{{ turno.horainicio }}</td>\n                        <td>{{ turno.horafin }}</td>\n                        <td>              \n                        <span *ngIf=\"turno.id_turno > 34\">\n                        <a\n                            alt=\"Eliminar Turno\"\n                            title=\"Eliminar Turno\"\n                            (click)=\"eliminarturno(turno, i)\"\n                            class=\"altaseguimiento\"\n                            ><i class=\"fa fa-trash\"></i\n                        ></a>\n                        </span>  \n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n    </div>\n</div>\n<div class=\"comod\">\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Nuevo Rol\n      </h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body \">\n      <div class=\"form-group\">\n        <input\n          name=\"id_persona_log\"\n          type=\"hidden\"\n          #id_persona_log=\"ngModel\"\n          [(ngModel)]=\"datosformularioturno.id_persona_log\"\n        />\n        <p>Asigne un nombre al Turno</p>\n        <input\n        name=\"turno\"\n        type=\"text\"\n        #turno=\"ngModel\"\n        class=\"form-control  mb-2\"\n        [(ngModel)]=\"datosformularioturno.turno\"\n        />\n        <p>Asigne un rol al turno</p>\n        <div class=\"input-group\">\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm mb-2\"\n            name=\"id_rol\"\n            placeholder=\"Seleccione rol\"\n            #id_rol=\"ngModel\"\n            [(ngModel)]=\"datosformularioturno.id_rol\"\n          >\n            <option [ngValue]=\"null\">Seleccione rol</option>\n            <option\n              *ngFor=\"let rolarray of roles\"\n              value=\"{{ rolarray.id_rol }}\">\n               {{ rolarray.rol_name }}\n            </option>\n          </select>\n        </div>\n        <p>Asigne un tipo de turno</p>\n        <div class=\"input-group\">\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm mb-2\"\n            name=\"tipo_turno\"\n            placeholder=\"Seleccione tipo de turno\"\n            #tipo_turno=\"ngModel\"\n            [(ngModel)]=\"datosformularioturno.tipo_turno\"\n          >\n            <option [ngValue]=\"null\">Seleccione tipo turno</option>\n            <option value=\"entre semana\">entre semana</option>\n            <option value=\"fin semana\">fin semana</option>\n          </select>\n        </div>\n        <p>Hora inicio</p>\n        <input\n            name=\"horainicio\"\n            type=\"text\"\n            id=\"reloj\"\n            placeholder=\"00:00\"\n            #horainicio=\"ngModel\"\n            class=\"form-control  mb-2\"\n            [(ngModel)]=\"datosformularioturno.horainicio\"\n            pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n            minlength=\"5\"\n            maxlength=\"5\"\n            [ngxTimepicker]=\"fullTime\"\n            [format]=\"24\"\n            readonly\n        />    <ngx-material-timepicker\n        #fullTime\n        [minutesGap]=\"30\"\n      ></ngx-material-timepicker>\n        <p>Hora fin</p>\n        <input\n            name=\"horafin\"\n            type=\"text\"\n            id=\"reloj\"\n            placeholder=\"00:00\"\n            #horafin=\"ngModel\"\n            class=\"form-control  mb-2\"\n            [(ngModel)]=\"datosformularioturno.horafin\"\n            pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n            minlength=\"5\"\n            maxlength=\"5\"\n            [ngxTimepicker]=\"fullTimeFin\"\n            [format]=\"24\"\n            readonly\n        />\n        <ngx-material-timepicker\n        #fullTimeFin\n        [minutesGap]=\"15\"\n      ></ngx-material-timepicker>\n       \n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button (click)=\"guardarNuevoTurno()\" class=\"btn btn-info\">\n        Añadir Turno\n      </button>\n    </div>\n  </ng-template>\n</div>","import {Component, ViewChild} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../models/constantes.model';\nimport { HistoricoService } from '../services/historico.service';\n\n@Component({\n  selector: 'app-historico',\n  templateUrl: './historico.component.html'\n  \n})\n\nexport class HistoricoComponent {\n   \n  personas:Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_log: null,\n    fecha: null,\n    tarea: null,\n    issueg: null,\n    descripcion_accion: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_log: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  \n  constructor(private httpClient: HttpClient, private historicoService: HistoricoService) {\n        this.fetch(data => {\n          // cache\n            this.temp = [...data];\n            this.rows = data;\n        });\n\n\n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit(){\n    this.fetch(data => {\n        this.temp = [...data];\n        this.rows = data;\n      });\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n      location.reload();\n  }\n\n  //cargamos el listado\n  fetch(cb) {\n    if(cb){\n      const req = new XMLHttpRequest();\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/read_historico.php`);\n      req.onload = () => {\n        cb(JSON.parse(req.response));\n        console.log(JSON.parse(req.response));\n      };\n      req.send();\n    }\n  }\n\n\n\n\n   //eliminar registro      \n   borrarRegistro ( registro: Issue, i:string){\n\n    Swal.fire({\n        title: `¿Desea borrar el registro histórico ${registro.tarea}`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"tarea\": registro.tarea, \"id_tarea\": registro.id_tarea });\n            this.historicoService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.tarea,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function(d) {\n      return  d.tarea.toLowerCase().indexOf(val) !== -1 || d.fecha.toLowerCase().indexOf(val) !== -1|| d.nombres.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Historial {{ \"txtRegistros\" | translate }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2 mt-4\">\n    <div class=\"col-md-12 alturaminima mb-5\">\n\n<div class=\"row\">\n  <div class=\"col-6\">\n    <div class=\"form\">\n      <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n        <input\n          matInput\n          #filter\n          placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\n          (keyup)=\"updateFilter($event)\"\n        />\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"col-6 text-right\">\n  </div>\n</div>\n\n      <ngx-datatable\n        #mydatatable\n        class=\"material striped\"\n        headerHeight=\"50\"\n        [limit]=\"15\"\n        [columnMode]=\"'force'\"\n        footerHeight=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"id_log\" [maxWidth]=\"90\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <div class=\"text-center\">{{ row.id_log }}</div>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Fecha\" [maxWidth]=\"200\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n              {{ value | slice: 0:90 }}\n\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Tarea\" [maxWidth]=\"1010\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n\n              {{ value | slice: 0:90 }}\n           \n          \n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Nombres\" [maxWidth]=\"210\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n           \n              {{ value }}\n            \n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Descripcion\" [maxWidth]=\"390\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-row=\"row\"\n            let-value=\"value\"\n          >\n\n                {{ value }}\n\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"ver\" [maxWidth]=\"80\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-row=\"row\"\n          >\n            <div class=\"text-center\">\n              <div class=\"row\">\n                <div class=\"col-12 p0 m0\">\n                  <a\n                    [routerLink]=\"['/detallehistorico', row.id_log]\"\n                    class=\"btn btn-warning botonsizes mr-1\"\n                    ><i class=\"fa fa-eye\"></i\n                  ></a>\n              \n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n\n\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","import {Component, ViewChild} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../models/constantes.model';\nimport { HistoricoService } from '../services/historico.service';\n\n@Component({\n  selector: 'app-historicomini',\n  templateUrl: './historicomini.component.html'\n  \n})\n\nexport class HistoricoMiniComponent {\n   \n  personas:Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_log: null,\n    fecha: null,\n    tarea: null,\n    issueg: null,\n    descripcion_accion: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_log: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  \n  constructor(private httpClient: HttpClient, private historicoService: HistoricoService) {\n        this.fetch(data => {\n          // cache\n            this.temp = [...data];\n            this.rows = data;\n        });\n\n\n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit(){\n    this.fetch(data => {\n        this.temp = [...data];\n        this.rows = data;\n      });\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n      location.reload();\n  }\n\n  //cargamos el listado\n  fetch(cb) {\n    if(cb){\n      const req = new XMLHttpRequest();\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/read_historico.php`);\n      req.onload = () => {\n        cb(JSON.parse(req.response));\n \n      };\n      req.send();\n    }\n  }\n\n\n\n\n   //eliminar registro      \n   borrarRegistro ( registro: Issue, i:string){\n\n    Swal.fire({\n        title: `¿Desea borrar el registro histórico ${registro.tarea}`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"tarea\": registro.tarea, \"id_tarea\": registro.id_tarea });\n            this.historicoService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.tarea,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function(d) {\n      return  d.tarea.toLowerCase().indexOf(val) !== -1 || d.fecha.toLowerCase().indexOf(val) !== -1|| d.nombres.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","\n <li class=\"list-group-item\" *ngFor=\"let row of rows\" >\n{{ row.id_log }}\n{{ row.fecha }}\n{{ row.tarea }}\n{{ row.nombres }}\n{{ row.descripcion }}\n</li>\n        \n\n\n\n","import { Component, ViewChild } from '@angular/core';\nimport { ApiPersonas } from '../services/apipersonas.service';\nimport { Personas } from '../models/personas';\n\n\n@Component({\n  selector: 'app-app',\n  templateUrl: './home.component.html'\n\n})\n\nexport class HomeComponent {\n\n  registroroleperson: Personas = new Personas();\n\n  constructor(private registroRoleService: ApiPersonas ) {\n\n  }\n\n  ngOnInit() {\n\n    //verificar  id_usuario y id_rol\n    const id_persona = localStorage.getItem('id_persona');\n    this.registroRoleService.getPerson(id_persona)\n      .subscribe((respuesta: Personas) => {\n        this.registroroleperson = respuesta;\n        this.registroroleperson.id_persona = id_persona;\n      });\n\n\n  }\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ \"txtRegistros\" | translate }} \n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2 mt-4\">\n    <div class=\"col-md-12 alturaminima mb-5\">\n        <div *ngIf=\"registroroleperson.id_rol==='8'\">\n          <app-apphome></app-apphome>\n        </div>\n        <div *ngIf=\"registroroleperson.id_rol!='8'\">\n          <app-elegirturno></app-elegirturno>\n        </div>\n    </div>\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { WebsocketService } from '../../services/websocket.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-identificacion',\n  templateUrl: './identificacion.component.html'\n})\nexport class IdentificacionComponent implements OnInit {\n\n\n  nombre='';\n\n  constructor(public wsService: WebsocketService, private router: Router ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  ingresar(){\n    this.wsService.loginWS( this.nombre )\n    .then( () =>{\n        this.router.navigateByUrl('/mensajes');\n    });\n  }\n}\n","<h1>Login></h1>\n<hr />\n<div class=\"row justify-content-center\">\n\n<div class=\"col-9\">\n     <form class=\"p-4\" (ngSubmit)=\"ingresar()\">\n<input type=\"text\" [(ngModel)]=\"nombre\"\nname=\"nombre\" class=\"form-control\"\nplaceholder=\"nombre usuario\"\nautofocus>\n<button [disabled]=\"nombre.trim().length === 0\"\nclass=\"btn btn-primary btn-block mt-3\">Ingresar</button>\n     </form>\n</div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, NgForm, NgModel } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { DataserviceService } from '../../services/dataservice.service';\nimport Swal from 'sweetalert2';\nimport { WebsocketService } from '../../services/websocket.service';\n\n \n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  angForm: FormGroup;\n  datosphp: string;\n  mail='';\n  constructor(public wsService: WebsocketService, private fb: FormBuilder,private dataService: DataserviceService,private router:Router) {\n    this.angForm = this.fb.group({\n \n      email: ['', [Validators.required,Validators.minLength(1), Validators.email]],\n      password: ['', Validators.required]\n \n    });\n\n    \n    this.wsService.loginWS( this.mail )\n    .then( () =>{\n       // this.router.navigateByUrl('/mensajes');\n    });\n\n\n   }\n \n  ngOnInit() {\n      if(localStorage.removeItem('id_persona') != null){\n\n        const keysToRemove = [\"token\", \"id_persona\", \"usuario\", \"id_rol\"];\n        for (const key of keysToRemove) {\n            localStorage.removeItem(key);\n        }\n        \n        this.router.navigateByUrl('');\n\n      }\n  }\n\n\n\n\n\n\n\n\n  postdata(angForm:FormGroup)\n  {\n\n    var patronEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/;\n    var emailResult = patronEmail.test(angForm.value.email);\n        if(emailResult==false){\n              Swal.fire({\n                text: 'El campo E-mail debe cumplir con el formato adecuado',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n        } else {\n\n\n            // this.datosphp = JSON.stringify({ \"email\": angForm.value.email, \"password\": angForm.value.password });\n            this.dataService.userlogin(angForm.value.email,angForm.value.password)\n              .pipe(first())\n              .subscribe(\n                  data => {\n                        const redirect = this.dataService.redirectUrl ? this.dataService.redirectUrl : '/home';\n                        this.router.navigate([redirect]);\n                  },\n                  error => {\n                    Swal.fire({\n                      text: 'El campo E-mail o el password son erróneos. revise los datos.',\n                      icon: 'error',  \n                      showConfirmButton : true\n                    });\n                  });\n        }\n\n  }\n  get email() { return this.angForm.get('email'); }\n  get password() { return this.angForm.get('password'); }\n}","<div class=\"limiter animated fadeInLeft\">\n    <div class=\"container-login100\">\n        <div class=\"wrap-login100 p-t-50 p-b-90\">\n           \n\n\n            <form \n            [formGroup]=\"angForm\" \n            (ngSubmit)=\"postdata(angForm)\" \n            autocomplete=\"off\" \n            class=\"login100-form validate-form flex-sb flex-w\"\n            >\n\n\n\n            <span class=\"login100-form-title p-b-51\">\n                Login\n            </span>\n            <div class=\"wrap-input100 m-b-16\">\n               \n                <input \n                type=\"email\" \n                name=\"email\" \n                formControlName=\"email\" \n                autocomplete=\"off\" \n                class=\"input100\" \n                required\n               \n                placeholder=\"E-mail\">\n                <span class=\"focus-input100\"></span>\n            </div>\n            <div class=\"wrap-input100 m-b-16\">\n                <input \n                type=\"password\" \n                name=\"Password\" \n                formControlName=\"password\"  \n                autocomplete=\"off\" \n                class=\"input100\" \n                placeholder=\"Password\"\n                required\n                minlength=\"6\">\n                <span class=\"focus-input100\"></span>\n            </div>\n                \n                <!-- <div class=\"flex-sb-m w-full p-t-3 p-b-24\">\n                    <div class=\"contact100-form-checkbox\">\n                        <input [(ngModel)]=\"recordarme\"\n                        class=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\">\n                        <label class=\"label-checkbox100\" for=\"ckb1\">\n                            Recordar mi usuario\n                        </label>\n                    </div>\n\n                    <div>\n                        \n                    </div>\n                </div> -->\n\n                <div class=\"container-login100-form-btn m-t-17\">\n                    <button \n                    type=\"submit\" \n                    class=\"login100-form-btn\" \n                 \n                    >Ingresar</button>\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { WebsocketService } from '../../services/websocket.service';\n\n@Component({\n  selector: 'app-mensajes',\n  templateUrl: './mensajes.component.html'\n  \n})\nexport class MensajesComponent implements OnInit {\n\n  constructor(public wsService: WebsocketService) { }\n\n  ngOnInit() {\n  }\n\n\n}\n","\n<div class=\"row\">\n    <div class=\"col-12\">\n        <app-chat></app-chat>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\nimport { DetalleHistoricoService } from '../services/detallehistorico.service';\nimport { ApiPersonas } from '../services/apipersonas.service';\nimport { Roles } from '../models/roles';\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html'\n  \n})\n\n\n\nexport class PerfilPersona implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:Personas = new Personas();\n\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n\n    personas: Personas [] = [];\n    roles: Roles[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n\n    fieldTextType: boolean;\n    datoregistro = {\n      id_persona: this.activatedRoute.snapshot.paramMap.get('id_persona'),\n      id_persona_log: localStorage.getItem('id_persona'),\n      nombres: null,\n      telefono: null,\n      email:  null,\n      direccion: null,\n      registrado: null,\n      id_rol: null,\n      password:  null,\n      imagen:  null\n    }\n\n    \n\n  constructor(private httpClient: HttpClient,private registroService: ApiPersonas,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n       //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n\n              }\n\n\n\n  ngOnInit(){\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona');\n \n    this.registroService.getPerson ( id_persona )\n      .subscribe( (respuesta:Personas) => {\n         this.registro = respuesta;\n         this.registro.id_persona =   id_persona;\n\n      });\n\n  }\n\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  recarga(){ \n    location.reload();\n  }\n\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  \n\n\n\n  //alta de registro\n  altaRegistro() {\n\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.nombres==null || this.datoregistro.email==null || this.datoregistro.id_rol==null || this.datoregistro.password==null){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos obligatorios no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.registroService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.nombres,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : false\n          }),this.recarga();      \n        });\n    }\n  }\n\n  \n\n\n  guardarregistro( ){\n    console.log(this.registro);\n    //eliminamos del local storage el id_rol siempre y cuando lo hayamos cambiado\n    //y lo volvemos a cambiar por el nuevo\n    // if(this.registro.id_rol!=''){\n    //   localStorage.removeItem('id_rol');\n    //   localStorage.setItem('id_rol',this.registro.id_rol);\n    // }\n\n    if(\n      this.registro.nombres=='' || \n      this.registro.telefono=='' || \n      this.registro.email=='' || \n\n      this.registro.direccion=='' ||\n      this.registro.id_rol=='' \n      ){\n     Swal.fire({\n       text: 'Los campos obligatorios no pueden quedar vacíos',\n       icon: 'error',  \n       showConfirmButton : true\n     }); \n    }  else {\n            //validacion email      \n            var patronEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/;\n            var emailResult = patronEmail.test(this.registro.email);\n            if(emailResult==false){\n              Swal.fire({\n                text: 'El campo E-mail debe cumplir con el formato adecuado',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else \n            // validacion password\n            // al menos 1 número, una minúscula y una mayuscula\n            // al menos 6 carácteres\n            var patronPassword = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/;\n            var passwordResult = patronPassword.test(this.registro.password);\n            if(passwordResult==false){\n              Swal.fire({\n                text: 'El campo Password debe tener al menos 1 número, una minúscula y una mayúscula y como mínimo 6 carácteres',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else {\n              let peticion: Observable<any>;\n              peticion = this.registroService.actualizarRegistro(this.registro);\n              peticion.subscribe( respuesta => {\n                Swal.fire({\n                  title: this.registro.nombres,\n                  text: 'Registro modificado',\n                  icon: 'success',  \n                  showConfirmButton : false\n                }),this.recarga();  \n              });\n            }\n\n   }\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.nombres }} - #{{ registro.id_persona }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.registrado | date: \"dd/MM/y HH:mm\"\n          }}</em>\n         \n          \n          \n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-2 alturaminima mb-5\">\n       \n\n\n\n\n<app-modimagen></app-modimagen>\n\n\n\n\n\n\n\n      </div>\n\n        <div class=\"col-md-10 alturaminima mb-5\">\n\n\n\n        <div class=\"form-group\">\n          <label for=\"nombres\">{{ \"txtNombres\" | translate }}</label>\n          <input\n            required\n            style=\"background-color: white;\"\n            placeholder=\"{{ 'txtNombres' | translate }}\"\n            class=\"form-control form-control-sm\"\n            [class.is-invalid]=\"nombres.invalid && nombres.touched\"\n            #nombres=\"ngModel\"\n            required\n            minlength=\"4\"\n            name=\"nombres\"\n            type=\"text\"\n            [(ngModel)]=\"registro.nombres\"\n          />\n        </div>\n  \n\n\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"txtEmail\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtEmail' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"email.invalid && email.touched\"\n              #email=\"ngModel\"\n              required\n              [email]=\"true\"\n              name=\"email\"\n              type=\"email\"\n              [(ngModel)]=\"registro.email\"\n            />\n          </div>\n  </div>\n  <div class=\"col-md-4\">       \n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"txtPassword\" | translate }}</label>\n            <div class=\"input-group\">\n            <input\n              required\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtPassword' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"password.invalid && password.touched\"\n              #password=\"ngModel\"\n              required\n              name=\"password\"\n              type=\"password\"\n              [(ngModel)]=\"registro.password\"\n              [type]=\"fieldTextType ? 'text' : 'password'\"\n            />\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\">\n                <i\n                class=\"fa\"\n                [ngClass]=\"{\n                  'fa-eye-slash': !fieldTextType,\n                  'fa-eye': fieldTextType\n                }\"\n                (click)=\"toggleFieldTextType()\"\n              ></i>\n              </span>\n           </div>\n          </div>\n</div>\n</div>    \n<div class=\"col-md-4\">\n  <div class=\"form-group\">\n    <label for=\"telefono\">{{ \"txtTelefono\" | translate }}</label>\n    <input\n      style=\"background-color: white;\"\n      placeholder=\"{{ 'txt9digitos' | translate }}\"\n      class=\"form-control form-control-sm\"\n      #telefono=\"ngModel\"\n      minlength=\"9\"\n      name=\"telefono\"\n      type=\"text\"\n      [(ngModel)]=\"registro.telefono\"\n    />\n  </div>\n</div>\n\n\n</div>\n<div class=\"row\">\n<div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"direccion\">{{ \"txtDireccion\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtDireccion' | translate }}\"\n              class=\"form-control form-control-sm\"\n              #direccion=\"ngModel\"\n              name=\"direccion\"\n              type=\"text\"\n              [(ngModel)]=\"registro.direccion\"\n            />\n          </div>\n\n</div>\n<div class=\"col-md-6\">\n\n\n        <div class=\"form-group\">\n          <label for=\"id_rol\">{{ \"txtRol\" | translate }}</label>\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm\"\n            name=\"id_rol\"\n           disabled\n           readonly\n            [class.is-invalid]=\"id_rol.invalid && id_rol.touched\"\n            #id_rol=\"ngModel\"\n            [(ngModel)]=\"registro.id_rol\"\n          >\n          <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\n            {{rol.rol_name}}\n          </option>\n          </select>\n        </div>\n</div>\n</div>\n        <div class=\"form-group text-center\">\n           <button (click)=\"guardarregistro()\" class=\"btn btn-primary colortopacio\">\n            {{ \"txtModificar\" | translate }}\n          </button> \n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    </div>\n \n\n \n\n  <app-footer></app-footer>\n</div>\n","import {Component, ViewChild} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { ColumnMode } from '@swimlane/ngx-datatable';\r\nimport Swal from 'sweetalert2';\r\nimport { Constantes } from '../models/constantes.model';\r\nimport { ApiPersonas } from '../services/apipersonas.service';\r\nimport { Roles } from '../models/roles';\r\nimport { Personas } from '../models/personas';\r\n\r\n@Component({\r\n  selector: 'app-personas',\r\n  templateUrl: './personas.pages.html'\r\n  \r\n})\r\n\r\nexport class PersonasPage {\r\n  roles: Roles[] = [];\r\n  personas:Personas[] = [];\r\n  issue: Personas = new Personas();\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n\r\n  final: Observable<Object>;\r\n  dregistro = null;\r\n  datoregistro = {\r\n    id_persona: null,\r\n    nombres: null,\r\n    telefono: null,\r\n    email:  null,\r\n    direccion: null,\r\n    id_rol: null,\r\n    password:  null,\r\n    imagen:  null,\r\n    id_persona_log: localStorage.getItem('id_persona')\r\n  }\r\n  emailvalida = {\r\n    mailexiste: null\r\n  }\r\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\r\n  ColumnMode = ColumnMode;\r\n  campo: any;\r\n  id_persona: any;\r\n  valor: any;\r\n  ever: any;\r\n  datos: string;\r\n  datosborrado: string;\r\n\r\n\r\n  \r\n  constructor(private httpClient: HttpClient, private apiService: ApiPersonas) {\r\n        this.fetch(data => {\r\n          // cache\r\n            this.temp = [...data];\r\n            this.rows = data;\r\n        });\r\n\r\n        //cargo los roles para los combos select\r\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\r\n            this.roles = result;\r\n          }, error => console.error(error));\r\n\r\n  }\r\n\r\n  //el ngoninit nos servira para recargar en caso de error de validacion\r\n  ngOnInit(){\r\n    this.fetch(data => {\r\n        this.temp = [...data];\r\n        this.rows = data;\r\n      });\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga(){ \r\n      location.reload();\r\n  }\r\n\r\n  //cargamos el listado\r\n  fetch(cb) {\r\n    if(cb){\r\n      const req = new XMLHttpRequest();\r\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/personas_read.php`);\r\n      req.onload = () => {\r\n        cb(JSON.parse(req.response));\r\n      };\r\n      req.send();\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  //alta de registro\r\n  altaRegistro() {\r\n\r\n    //compruebo que el email no exista (ya se valida también en el servidor en PHP)\r\n    this.apiService.validaEmail(this.datoregistro.email).subscribe(\r\n      (datosMail:any) => {\r\n        this.emailvalida = datosMail;  \r\n        if(this.emailvalida.mailexiste==true) {\r\n              Swal.fire({\r\n                title: this.datoregistro.email,\r\n                text: 'El e-mail indicado ya existe, escoja otro',\r\n                icon: 'error',  \r\n                showConfirmButton : true\r\n              });  \r\n        }\r\n        //si los campos obligatorios nos llegan vacios\r\n        else if(this.datoregistro.nombres==null || this.datoregistro.email==null || this.datoregistro.id_rol==null || this.datoregistro.password==null){\r\n          Swal.fire({\r\n            title: 'Revise los datos',\r\n            text: 'Los campos obligatorios no pueden estar vacíos!!',\r\n            icon: 'error',\r\n          });   \r\n        } else {\r\n\r\n      //enviamos el array a la funcions del server\r\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\r\n        datos => {\r\n          Swal.fire({\r\n            title: this.datoregistro.nombres,\r\n            text: 'Registro añadido',\r\n            icon: 'success',  \r\n            showConfirmButton : false\r\n          }),this.recarga(); \r\n        });\r\n       }\r\n   });\r\n  }\r\n\r\n  //actualización campos inline\r\n  updateValue(event, cell, rowIndex) {\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    this.rows[rowIndex][cell] = event.target.value;\r\n    this.rows = [...this.rows];\r\n    this.campo = cell;\r\n    this.id_persona = event.target.title;\r\n    this.valor = event.target.value;\r\n    this.ever = this.campo,this.id_persona,this.valor;\r\n    this.datos = JSON.stringify({ \"campo\": this.campo, \"id_persona\": this.id_persona, \"valor\": this.valor });\r\n\r\n    //validacion del formato email\r\n     var patronEmail = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/;\r\n     var emailResult = patronEmail.test(this.valor);\r\n\r\n    // //si el campo que recibo es email...\r\n    if(this.campo == \"email\"){\r\n      //...valido su formato\r\n      if(emailResult==false){\r\n        Swal.fire({\r\n          title: 'Revise los datos',\r\n          text: 'El campo \"email\" debe de cumplir con los requerimientos!!',\r\n          icon: 'error',\r\n        }); \r\n        this.ngOnInit();  \r\n      } \r\n      // else {\r\n      //   Swal.fire({\r\n      //     text: 'Registro actualizado',\r\n      //     icon: 'success',  \r\n      //     showConfirmButton : false\r\n      //   })\r\n      // }\r\n    }\r\n    //el campo que recibo es tarea pero es menor de 3 caracteres\r\n    else \r\n    if(this.campo == \"nombres\" && this.valor.length < 3){\r\n       \r\n          Swal.fire({\r\n            title: 'Revise los datos',\r\n            text: 'El campo \"nombres\" debe contener como mínimo tres carácteres!!',\r\n            icon: 'error',\r\n          });   \r\n          this.ngOnInit();  \r\n             \r\n    } \r\n    else \r\n    if(this.campo == \"telefono\" && this.valor.length < 9){       \r\n          Swal.fire({\r\n            title: 'Revise los datos',\r\n            text: 'El campo \"telefono\" debe contener nueve carácteres!!',\r\n            icon: 'error',\r\n          });   \r\n          this.ngOnInit();  \r\n             \r\n    } else {\r\n      //todo Ok llamo al servicio\r\n      this.apiService.modiRegistro(this.datos).subscribe(\r\n        datos => {\r\n          Swal.fire({\r\n            text: 'Registro actualizado',\r\n            icon: 'success',  \r\n            showConfirmButton : true\r\n          })\r\n      \r\n        });\r\n    }\r\n\r\n  }\r\n\r\n\r\n   //eliminar registro      \r\n   borrarRegistro ( registro: Personas, i:string){\r\n    \r\n    Swal.fire({\r\n        title: `¿Desea borrar el registro ${registro.nombres}`,\r\n        text: 'Confirme si desea borrar el registro',\r\n        icon: 'question',\r\n        showConfirmButton: true,\r\n        showCancelButton: true\r\n\r\n    }).then( respuesta => {\r\n         \r\n        if ( respuesta.value ) {\r\n            const id_persona_log = localStorage.getItem('id_persona');\r\n            this.datosborrado = JSON.stringify({ \"id_persona_log\": id_persona_log,\"nombres\": registro.nombres, \"id_persona\": registro.id_persona });\r\n            this.apiService.delete( this.datosborrado ).subscribe();\r\n\r\n            Swal.fire({\r\n              title: registro.nombres,\r\n              text: 'Registro eliminado',\r\n              icon: 'success',  \r\n              showConfirmButton : false\r\n            })\r\n            ,this.recarga();  \r\n\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n\r\n  //actualizacion filtro busqueda\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n    const temp = this.temp.filter(function(d) {\r\n      return  d.nombres.toLowerCase().indexOf(val) !== -1 || d.telefono.toLowerCase().indexOf(val) !== -1 || d.email.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n    // actualizamos las rows\r\n    this.rows = temp;\r\n    // Cuando cambie el filtro, regresa a la primera página.\r\n    this.table.offset = 0;\r\n  }\r\n\r\n}\r\n\r\ninterface Rols {\r\n    rol_name: string;\r\n}","<div class=\"page-content\" id=\"content\">\r\n    <app-header></app-header>\r\n    <app-menu></app-menu>\r\n  \r\n    <div class=\"row m-2\">\r\n      <div class=\"col-md-12 mt-4\">\r\n        <h3>{{ \"txtPersonas\" | translate }}</h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n              <a [routerLink]=\"['/', 'home']\">Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n              {{ \"txtPersonas\" | translate }}\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"row m-2 mt-4\">\r\n      <div class=\"col-md-8 alturaminima mb-5\">\r\n        <div class=\"form\">\r\n          <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\r\n            <input\r\n              matInput\r\n              #filter\r\n              placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\r\n              (keyup)=\"updateFilter($event)\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n        <ngx-datatable\r\n          #mydatatable\r\n          class=\"material striped\"\r\n          headerHeight=\"50\"\r\n          [limit]=\"15\"\r\n          [columnMode]=\"'force'\"\r\n          footerHeight=\"50\"\r\n          rowHeight=\"auto\"\r\n          [rows]=\"rows\"\r\n        >\r\n          <ngx-datatable-column name=\"id_persona\" [maxWidth]=\"90\">\r\n            <ng-template\r\n              class=\"mat-column-id\"\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <div class=\"text-center\">{{ row.id_persona }}</div>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n          <ngx-datatable-column name=\"Nombres\" [maxWidth]=\"1810\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span\r\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                (dblclick)=\"editing[rowIndex + '-nombres'] = true\"\r\n                *ngIf=\"!editing[rowIndex + '-nombres']\"\r\n              >\r\n                {{ value | slice: 0:90 }}\r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'nombres', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-nombres']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id_persona\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n          <ngx-datatable-column name=\"Telefono\" [maxWidth]=\"120\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span\r\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                (dblclick)=\"editing[rowIndex + '-telefono'] = true\"\r\n                *ngIf=\"!editing[rowIndex + '-telefono']\"\r\n              >\r\n           <a href='tel:{{ value }}'>{{ value | slice: 0:90 }}</a> \r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'telefono', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-telefono']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id_persona\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n\r\n\r\n\r\n          <ngx-datatable-column name=\"Email\" [maxWidth]=\"180\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span\r\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                (dblclick)=\"editing[rowIndex + '-email'] = true\"\r\n                *ngIf=\"!editing[rowIndex + '-email']\"\r\n              >\r\n              <a href='mailto:{{ value }}'> {{ value | slice: 0:90 }}</a>\r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'email', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-email']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id_persona\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n\r\n<!-- \r\n\r\n          <ngx-datatable-column name=\"Registrado\" [maxWidth]=\"1810\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span>\r\n                {{ value | slice: 0:10 }}\r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'registrado', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-registrado']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column> -->\r\n\r\n\r\n          <ngx-datatable-column name=\"Rol\" [maxWidth]=\"80\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-row=\"row\"\r\n              let-value=\"value\"\r\n            >\r\n\r\n           \r\n\r\n                <span\r\n                  title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                  (dblclick)=\"editing[rowIndex + '-id_rol'] = true\"\r\n                  *ngIf=\"!editing[rowIndex + '-id_rol']\"\r\n                >\r\n                  {{ value }}\r\n                </span>\r\n                <input type=\"hidden\" #varId [value]=\"row.id_persona\" />\r\n  \r\n                <select\r\n                  class=\"form-control\"\r\n                  name=\"id_rol\"\r\n                  *ngIf=\"editing[rowIndex + '-id_rol']\"\r\n                  (blur)=\"editing[rowIndex + '-id_rol'] = false\"\r\n                  (change)=\"updateValue($event, 'id_rol', rowIndex)\"\r\n                  [value]=\"value\"\r\n                  [title]=\"row.id_persona\"\r\n                >\r\n                <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\r\n                    {{rol.rol_name}}\r\n                  </option>\r\n        \r\n                </select>\r\n             \r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n          <ngx-datatable-column name=\"ver\" [maxWidth]=\"80\">\r\n            <ng-template\r\n              class=\"mat-column-id\"\r\n              ngx-datatable-cell-template\r\n              let-row=\"row\"\r\n            >\r\n              <div class=\"text-center\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 p0 m0\">\r\n                    <a\r\n                      [routerLink]=\"['/detallepersona', row.id_persona]\"\r\n                      class=\"btn btn-warning botonsizes mr-1\"\r\n                      ><i class=\"fa fa-pencil\"></i\r\n                    ></a>\r\n                    <button\r\n                      (click)=\"borrarRegistro(row, i)\"\r\n                      class=\"btn btn-warning botonsizes\"\r\n                    >\r\n                      <i class=\"fa fa-trash\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n      <div class=\"col-md-4 pt-5\">\r\n        <div class=\"form-group\">\r\n        \r\n  \r\n      </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"nombres\">{{ \"txtNombres\" | translate }}</label>\r\n          <input\r\n            required\r\n            style=\"background-color: white;\"\r\n            placeholder=\"{{ 'txtNombres' | translate }}\"\r\n            class=\"form-control form-control-sm\"\r\n            [class.is-invalid]=\"nombres.invalid && nombres.touched\"\r\n            #nombres=\"ngModel\"\r\n            required\r\n            minlength=\"4\"\r\n            name=\"nombres\"\r\n            type=\"text\"\r\n            [(ngModel)]=\"datoregistro.nombres\"\r\n          />\r\n        </div>\r\n  \r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"telefono\">{{ \"txtTelefono\" | translate }}</label>\r\n            <input\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txt9digitos' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              #telefono=\"ngModel\"\r\n              minlength=\"9\"\r\n              name=\"telefono\"\r\n              type=\"text\"\r\n              [(ngModel)]=\"datoregistro.telefono\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">{{ \"txtEmail\" | translate }}</label>\r\n            <input\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txtEmail' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              [class.is-invalid]=\"email.invalid && email.touched\"\r\n              #email=\"ngModel\"\r\n              required\r\n              [email]=\"true\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              [(ngModel)]=\"datoregistro.email\"\r\n            />\r\n          </div>\r\n          \r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"direccion\">{{ \"txtDireccion\" | translate }}</label>\r\n            <input\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txtDireccion' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              #direccion=\"ngModel\"\r\n              name=\"direccion\"\r\n              type=\"text\"\r\n              [(ngModel)]=\"datoregistro.direccion\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">{{ \"txtPassword\" | translate }}</label>\r\n            <input\r\n              required\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txtPassword' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              [class.is-invalid]=\"password.invalid && password.touched\"\r\n              #password=\"ngModel\"\r\n              required\r\n              name=\"password\"\r\n              type=\"password\"\r\n              [(ngModel)]=\"datoregistro.password\"\r\n            />\r\n          </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"id_rol\">{{ \"txtRol\" | translate }}</label>\r\n          <select\r\n            required\r\n            style=\"background-color: white;\"\r\n            class=\"form-control form-control-sm\"\r\n            name=\"id_rol\"\r\n           \r\n            [class.is-invalid]=\"id_rol.invalid && id_rol.touched\"\r\n            #id_rol=\"ngModel\"\r\n            [(ngModel)]=\"datoregistro.id_rol\"\r\n          >\r\n          <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\r\n            {{rol.rol_name}}\r\n          </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center\">\r\n          <button (click)=\"altaRegistro()\" class=\"btn btn-primary colortopacio\">\r\n            {{ \"txtAgregar\" | translate }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n    <app-footer></app-footer>\r\n  </div>\r\n  ","import { Component, ViewChild } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/apiregistros.service';\nimport { Issue } from '../../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../../models/constantes.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DetalleService } from '../../services/detalle.service';\nimport { Turnos } from '../../models/turnos';\nimport { Personas } from '../../models/personas';\nimport { ApiPersonas } from '../../services/apipersonas.service';\nimport { FormGroup, FormControl, NgForm } from '@angular/forms';\nimport { TurnosService } from '../../services/turnos.service';\n\n\n@Component({\n  selector: 'app-elegirturno',\n  templateUrl: './elegir.component.html'\n})\n\n\nexport class ElegirTurno  {\n  isSubmitted = false;\n  // listaturnos: Turnos[] = [];\n public listaturnos: Turnos;\n  turnoValor = localStorage.getItem('valorTurno');\n  personas: Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  //registroroleperson:Personas = new Personas();\n  registroroleperson: Turnos = new Turnos();\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_tarea: null,\n    rol_name: null,\n    tarea: null,\n    issueg: null,\n    hora: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  reactiveFormTurnos = new FormGroup({\n    id_turno: new FormControl(''),\n    id_persona: new FormControl(localStorage.getItem('id_persona')),\n\n  });\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_tarea: any;\n  rol_name: any;\n  id_persona: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  datosclon: string;\n  periodetalle: Turnos = new Turnos();\n  my_messages = {\n    'emptyMessage': '',\n    'totalMessage': ''\n  };\n  req: any;\n\n  turnoestablecido:Turnos = new Turnos();\n\n\n\n  constructor(private turnosService: TurnosService,private registroRoleService: ApiPersonas, private translate: TranslateService, private httpClient: HttpClient, private registroService: DetalleService, private apiService: ApiService) {\n\n    translate.get('Total', { value: 'eeeeeeeeee' })\n      .subscribe((res: string) => this.my_messages.totalMessage = res);\n    translate.get('No hay resultados para mostrar', { value: '' })\n      .subscribe((res: string) => this.my_messages.emptyMessage = res);\n\n   \n\n\n\n\n\n\n\n\n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit() {\n\n    this.fetch(data => {\n      this.temp = [...data];\n      this.rows = data;\n\n    });\n\n    // //verificar  id_usuario y id_rol\n    // const id_persona = localStorage.getItem('id_persona');\n    // this.registroRoleService.getPerson(id_persona)\n    //   .subscribe((respuesta: Personas) => {\n    //     this.registroroleperson = respuesta;\n    //     this.registroroleperson.id_persona = id_persona;\n       \n    //   });\n\n\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga() {\n    location.reload();\n  }\n\n\n\n\n\n  //cargamos el listado\n  fetch(cb) {\n\n\n      const req = new XMLHttpRequest();\n      const id_persona = localStorage.getItem('id_persona');\n\n\n\n      //OBTENER EL ULTIMO TURNO DE ESTE USUARIO\n      this.registroRoleService.getTurnosbyID(id_persona)\n      .subscribe((respuesta: Turnos) => {\n        this.registroroleperson = respuesta;\n        this.registroroleperson.id_persona = id_persona;\n       \n            //leemos los turnos del rol del usuario actual para mostrarlos en el select combo\n            var id_rol:string;\n            if(this.registroroleperson.id_rol==null){\n              var id_rol = localStorage.getItem('id_rol');\n        \n            } else {\n              var id_rol = Constantes.CRND+this.registroroleperson.id_rol+Constantes.DRND;\n\n            }\n\n\n\n            this.registroRoleService.getTurnosReadByRol(id_rol)\n            .subscribe( (respuesta:Turnos) => {\n              this.listaturnos = respuesta;\n            });\n\n\n\n\n\n            req.open('GET', `${this.PHP_API_SERVER}/ajax/registro_read_by_persona.php?id_persona=${id_persona}`);\n            req.onload = () => {\n              cb(JSON.parse(req.response));\n            };\n            req.send();\n          \n      });\n\n\n\n\n\n    }\n\n\n\n\n onSubmit(form: NgForm) { \n    \n      this.isSubmitted = true;\n      const valor = JSON.stringify(this.reactiveFormTurnos.value);\nconsole.log(valor);\n      this.turnosService.guardarTurno( valor ).subscribe( respuesta => {\n        localStorage.removeItem('valorTurno');\n        Swal.fire({\n          title: 'Turno Establecido',\n          text: 'El turno ha sido establecido',\n          icon: 'success',  \n          showConfirmButton : false\n        }), this.recarga();\n        \n      });   \n      \n  }\n\n\n\n\n\n\n  //alta de registro\n  altaRegistro() {\n    //si los campos obligatorios nos llegan vacios\n    if (this.datoregistro.tarea == null || this.datoregistro.hora == null || this.datoregistro.estatus == null) {\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos no pueden estar vacíos!!',\n        icon: 'error',\n      });\n    } else {\n      //enviamos el array a la funcions del server\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.tarea,\n            text: 'Registro añadido',\n            icon: 'success',\n            showConfirmButton: false\n          }), this.recarga();\n        });\n    }\n  }\n\n  //actualización campos inline\n  updateValue(event, cell, rowIndex) {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n    this.campo = cell;\n    this.id_tarea = event.target.title;\n    const id_persona = localStorage.getItem('id_persona');\n    this.valor = event.target.value;\n    this.ever = id_persona, this.campo, this.id_tarea, this.valor;\n    this.datos = JSON.stringify({ \"id_persona\": id_persona, \"campo\": this.campo, \"id_tarea\": this.id_tarea, \"valor\": this.valor });\n\n    //validacion del formato de la hora\n    var patronHora = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n    var horaResult = patronHora.test(this.valor);\n\n    //si el campo que recibo es hora...\n    if (this.campo == \"hora\") {\n      //...valido su formato\n      if (horaResult == false) {\n        Swal.fire({\n          title: 'Revise los datos',\n          text: 'El campo \"hora\" debe de cumplir con los requerimientos!!',\n          icon: 'error',\n        });\n        this.ngOnInit();\n      }\n      // else {\n      //   Swal.fire({\n      //     text: 'Registro actualizado',\n      //     icon: 'success',  \n      //     showConfirmButton : false\n      //   })\n      // }\n    }\n    //el campo que recibo es tarea pero es menor de 3 caracteres\n    else if (this.campo == \"tarea\" && this.valor.length < 3) {\n\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'El campo \"tarea\" debe contener como mínimo tres carácteres!!',\n        icon: 'error',\n      });\n      this.ngOnInit();\n\n    } else {\n      //todo Ok llamo al servicio\n      this.apiService.modiRegistro(this.datos).subscribe(\n        datos => {\n          Swal.fire({\n            text: 'Registro actualizado',\n            icon: 'success',\n            showConfirmButton: false\n          }), this.recarga();\n\n        });\n    }\n\n  }\n\n\n\n  duplicar(registro: Issue, i: string) {\n\n    Swal.fire({\n      title: `¿Desea crear una tarea a partir de esta?`,\n      text: 'Confirme si desea proceder',\n      icon: 'question',\n      showConfirmButton: true,\n      showCancelButton: true\n\n    }).then(orden => {\n      if (orden.value) {\n\n        const id_persona = localStorage.getItem('id_persona');\n        this.datosclon = JSON.stringify({ \"id_persona\": id_persona, \"id_tarea\": registro.id_tarea });\n\n        let peticion: Observable<any>;\n\n        peticion = this.registroService.actualizarRegistroNuevaId(this.datosclon);\n        peticion.subscribe(respuesta => {\n          Swal.fire({\n            title: this.id_tarea,\n            text: 'Registro duplicado',\n            icon: 'success',\n            showConfirmButton: true\n          })\n            , this.recarga();\n\n        });\n      }\n    });\n  }\n\n\n\n\n\n  //eliminar registro      \n  borrarRegistro(registro: Issue, i: string) {\n\n    Swal.fire({\n      title: `¿Desea borrar el registro ${registro.tarea}`,\n      text: 'Confirme si desea borrar el registro',\n      icon: 'question',\n      showConfirmButton: true,\n      showCancelButton: true\n\n    }).then(respuesta => {\n      if (respuesta.value) {\n        const id_persona = localStorage.getItem('id_persona');\n        this.datosborrado = JSON.stringify({ \"id_persona\": id_persona, \"id_tarea\": registro.id_tarea });\n        this.apiService.delete(this.datosborrado).subscribe();\n\n        Swal.fire({\n          title: registro.tarea,\n          text: 'Registro eliminado',\n          icon: 'success',\n          showConfirmButton: false\n        })\n          , this.recarga();\n\n      }\n    });\n  }\n\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function (d) {\n      return d.rol_name.toLowerCase().indexOf(val) !== -1 || d.tarea.toLowerCase().indexOf(val) !== -1 || d.hora.toLowerCase().indexOf(val) !== -1 || d.estatus.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","<div class=\"row\">\n  <div class=\"col-6 text-left\">\n  Turno establecido: <strong><span class=\"upperc\">{{registroroleperson.turno}}</span> {{registroroleperson.tipo_turno}} {{registroroleperson.horainicio}} {{registroroleperson.horafin}}</strong>\n  </div>\n  <div class=\"col-6 text-right\">\n    <form [formGroup]=\"reactiveFormTurnos\" (ngSubmit)=\"onSubmit( f )\" #f=\"ngForm\" class=\"form-inline\">      \n        <input type=\"hidden\" \n        class=\"form-control\"\n        formControlName=\"id_persona\"\n        name=\"id_persona\" \n        >\n        <div class=\"form-group\"><select \n          class=\"form-control\"\n          formControlName=\"id_turno\"\n          name=\"id_turno\" \n          ><option value=\"\">Cambiar turno</option>\n          <option \n            *ngFor=\"let listat of listaturnos; let x = index\" \n            [value]=\"listat.id_turno\" \n            >{{listat.turno}} - {{listat.tipo_turno}} - {{listat.horainicio}} {{listat.horafin}}</option>\n          </select>\n          <button type=\"submit\" class=\"btn btn-info ml-2\">Establecer turno</button>  \n      </div> \n      </form> \n</div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-10\">\n    <div class=\"form\">\n      <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n        <input\n          matInput\n          #filter\n          placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\n          (keyup)=\"updateFilter($event)\"\n        />\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"col-2 text-right\">\n    <div *ngIf=\"registroroleperson.id_rol== '8' || registroroleperson.id_rol== '5' || registroroleperson.id_rol== '6'\">\n      <a alt=\"Nuevo registro\" title=\"nuevo registro\" [routerLink]=\"['/', 'alta']\" class=\"btn btn-info pt4 btn-circle posicionplus\"><i class=\"fa fa-plus fa-3\"></i></a>\n    </div>\n  </div>\n</div>\n\n<!-- <div class=\"row\">\n  <div class=\"col-12 text-left mt-2 mb-2\">\n     El turno establecido es <strong> {{turnoestablecido.turno}} {{turnoestablecido.tipo_turno}} {{turnoestablecido.horainicio}} {{turnoestablecido.horafin}}</strong>\n  </div>\n</div> -->\n\n\n\n      <ngx-datatable\n        #mydatatable\n        class=\"material striped\"\n        headerHeight=\"50\"\n        [limit]=\"15\"\n        [columnMode]=\"'force'\"\n        footerHeight=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n        [messages]=\"my_messages\"\n      >\n\n        <ngx-datatable-column  [maxWidth]=\"90\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <div *ngIf=\"registroroleperson.id_rol=='8'\" class=\"text-center\">{{ row.id_tarea }} </div>\n          </ng-template>\n        </ngx-datatable-column> \n\n\n        <!-- <ngx-datatable-column \n        [sortable]=\"true\"\n        name=\"Rol\" prop=\"rol_name\"\n        [maxWidth]=\"130\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n          <div class=\"text-center\">{{ row.rol_name }} </div> \n        </ng-template>        \n        </ngx-datatable-column>  -->\n\n\n        <ngx-datatable-column name=\"Tarea\" [maxWidth]=\"1810\">\n          <ng-template \n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <span\n              title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n              (dblclick)=\"editing[rowIndex + '-tarea'] = true\"\n              *ngIf=\"!editing[rowIndex + '-tarea']\"\n            >\n              {{ value | slice: 0:90 }}\n            </span>\n            <input\n              required\n              autofocus\n              (keyup.enter)=\"updateValue($event, 'tarea', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-tarea']\"\n              type=\"text\"\n              class=\"form-control\"\n              [value]=\"value\"\n              [title]=\"row.id_tarea\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Hora\" [maxWidth]=\"110\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <span\n              title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n              (dblclick)=\"editing[rowIndex + '-hora'] = true\"\n              *ngIf=\"!editing[rowIndex + '-hora']\"\n            >\n              {{ value }}\n            </span>\n            <input\n              required\n              class=\"form-control\"\n              min=\"5\"\n              max=\"5\"\n              (onError)=\"(myHandleError)\"\n              pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n              \n              autofocus\n              (keyup.enter)=\"updateValue($event, 'hora', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-hora']\"\n              type=\"text\"\n              [value]=\"value\"\n              [title]=\"row.id_tarea\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Estatus\" [maxWidth]=\"90\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-row=\"row\"\n            let-value=\"value\"\n          >\n            <div\n              [ngClass]=\"{\n                positive: row.estatus == 'OK',\n                negative: row.estatus == 'KO',\n                posnegtive: row.estatus == 'OK-INC'\n              }\"\n            >\n              <span\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n                (dblclick)=\"editing[rowIndex + '-estatus'] = true\"\n                *ngIf=\"!editing[rowIndex + '-estatus']\"\n              >\n                {{ value }}\n              </span>\n              <input type=\"hidden\" #varId [value]=\"row.id_tarea\" />\n\n              <select\n                class=\"form-control\"\n                name=\"estatus\"\n                *ngIf=\"editing[rowIndex + '-estatus']\"\n                (blur)=\"editing[rowIndex + '-estatus'] = false\"\n                (change)=\"updateValue($event, 'estatus', rowIndex)\"\n                [value]=\"value\"\n                [title]=\"row.id_tarea\"\n              >\n                <option value=\"OK\">OK</option>\n                <option value=\"KO\">KO</option>\n                <option value=\"OK-INC\">OK-INC</option>\n              </select>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"ver\" [maxWidth]=\"150\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-row=\"row\"\n          >\n\n            <div class=\"text-center\">\n              <div class=\"row\">\n                <div class=\"col-12 p0 m0\">\n\n \n <!-- <div *ngIf=\"row.disabledBotones===turnoValor && registroroleperson.id_rol!= '8'\">\n                  <button (click)=\"duplicar(row, i)\"\n                  class=\"btn btn-warning botonsizes mr-1\">\n                      <i class=\"fa fa-clone\"></i>\n                  </button>\n                  <a\n                    [routerLink]=\"['/detalle', row.tokenid]\"\n                    class=\"btn btn-warning botonsizes mr-1\"\n                    ><i class=\"fa fa-pencil\"></i\n                  ></a>\n                  <button\n                    (click)=\"borrarRegistro(row, i)\"\n                    class=\"btn btn-warning botonsizes\"\n                  >\n                    <i class=\"fa fa-trash\"></i>\n                  </button>\n</div> \n\n<div *ngIf=\"registroroleperson.id_rol== '8'\"> -->\n                <button (click)=\"duplicar(row, i)\"\n                class=\"btn btn-warning botonsizes mr-1\">\n                    <i class=\"fa fa-clone\"></i>\n                </button>\n                <a\n                  [routerLink]=\"['/detalle', row.tokenid]\"\n                  class=\"btn btn-warning botonsizes mr-1\"\n                  ><i class=\"fa fa-pencil\"></i\n                ></a>\n                <button\n                  (click)=\"borrarRegistro(row, i)\"\n                  class=\"btn btn-warning botonsizes\"\n                >\n                  <i class=\"fa fa-trash\"></i>\n                </button>\n<!-- </div> -->\n\n\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    ","import { Component, ViewChild } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/apiregistros.service';\nimport { Issue } from '../../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../../models/constantes.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DetalleService } from '../../services/detalle.service';\nimport { Turnos } from '../../models/turnos';\nimport { Personas } from '../../models/personas';\nimport { ApiPersonas } from '../../services/apipersonas.service';\n\n\n@Component({\n  selector: 'app-apphome',\n  templateUrl: './homeget.component.html'\n\n})\n\nexport class HomeGetComponent {\n\n  turnoValor = localStorage.getItem('valorTurno');\n  personas: Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n  //registroroleperson:Personas = new Personas();\n  registroroleperson: Personas = new Personas();\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_tarea: null,\n    rol_name: null,\n    tarea: null,\n    issueg: null,\n    hora: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_tarea: any;\n  rol_name: any;\n  id_persona: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  datosclon: string;\n  periodetalle: Turnos = new Turnos();\n  my_messages = {\n    'emptyMessage': '',\n    'totalMessage': ''\n  };\n  req: any;\n\n  turnoestablecido:Turnos = new Turnos();\n\ngetmyProp = localStorage.getItem('myProp');\ngetmyNewValue = localStorage.getItem('myNewValue');\n\n\n\n\n\n\n  constructor(private registroRoleService: ApiPersonas, private translate: TranslateService, private httpClient: HttpClient, private registroService: DetalleService, private apiService: ApiService) {\n    // this.fetch(data => {\n    //   // cache\n    //   this.temp = [...data];\n    //   this.rows = data;\n\n    // });\n\n    translate.get('Total', { value: 'eeeeeeeeee' })\n      .subscribe((res: string) => this.my_messages.totalMessage = res);\n    translate.get('No hay resultados para mostrar', { value: '' })\n      .subscribe((res: string) => this.my_messages.emptyMessage = res);\n\n   \n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit() {\n\n    this.fetch(data => {\n      this.temp = [...data];\n      this.rows = data;\n\n\n    });\n\n    //verificar  id_usuario y id_rol\n    const id_persona = localStorage.getItem('id_persona');\n    this.registroRoleService.getPerson(id_persona)\n      .subscribe((respuesta: Personas) => {\n        this.registroroleperson = respuesta;\n        this.registroroleperson.id_persona = id_persona;\n       \n      });\n\n\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga() {\n    location.reload();\n  }\n\n\n\n\n\n  //cargamos el listado\n  fetch(cb) {\n\n\n      const req = new XMLHttpRequest();\n      const id_persona = localStorage.getItem('id_persona');\n      // this.registroRoleService.getPerson(id_persona)\n      // .subscribe((respuesta: Personas) => {\n      //   this.registroroleperson = respuesta;\n      //   this.registroroleperson.id_persona = id_persona;\n       \n\n    req.open('GET', `${this.PHP_API_SERVER}/ajax/registro_read.php?id_persona=${id_persona}`);\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n    req.send();\n\n\n\n          \n      // });\n    }\n\n\n  //alta de registro\n  altaRegistro() {\n    //si los campos obligatorios nos llegan vacios\n    if (this.datoregistro.tarea == null || this.datoregistro.hora == null || this.datoregistro.estatus == null) {\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos no pueden estar vacíos!!',\n        icon: 'error',\n      });\n    } else {\n      //enviamos el array a la funcions del server\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.tarea,\n            text: 'Registro añadido',\n            icon: 'success',\n            showConfirmButton: false\n          }), this.recarga();\n        });\n    }\n  }\n\n  //actualización campos inline\n  updateValue(event, cell, rowIndex) {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n    this.campo = cell;\n    this.id_tarea = event.target.title;\n    const id_persona = localStorage.getItem('id_persona');\n    this.valor = event.target.value;\n    this.ever = id_persona, this.campo, this.id_tarea, this.valor;\n    this.datos = JSON.stringify({ \"id_persona\": id_persona, \"campo\": this.campo, \"id_tarea\": this.id_tarea, \"valor\": this.valor });\n\n    //validacion del formato de la hora\n    var patronHora = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n    var horaResult = patronHora.test(this.valor);\n\n    //si el campo que recibo es hora...\n    if (this.campo == \"hora\") {\n      //...valido su formato\n      if (horaResult == false) {\n        Swal.fire({\n          title: 'Revise los datos',\n          text: 'El campo \"hora\" debe de cumplir con los requerimientos!!',\n          icon: 'error',\n        });\n        this.ngOnInit();\n      }\n      // else {\n      //   Swal.fire({\n      //     text: 'Registro actualizado',\n      //     icon: 'success',  \n      //     showConfirmButton : false\n      //   })\n      // }\n    }\n    //el campo que recibo es tarea pero es menor de 3 caracteres\n    else if (this.campo == \"tarea\" && this.valor.length < 3) {\n\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'El campo \"tarea\" debe contener como mínimo tres carácteres!!',\n        icon: 'error',\n      });\n      this.ngOnInit();\n\n    } else {\n      //todo Ok llamo al servicio\n      this.apiService.modiRegistro(this.datos).subscribe(\n        datos => {\n          Swal.fire({\n            text: 'Registro actualizado',\n            icon: 'success',\n            showConfirmButton: false\n          }), this.recarga();\n\n        });\n    }\n\n  }\n\n\n\n  duplicar(registro: Issue, i: string) {\n\n    Swal.fire({\n      title: `¿Desea crear una tarea a partir de esta?`,\n      text: 'Confirme si desea proceder',\n      icon: 'question',\n      showConfirmButton: true,\n      showCancelButton: true\n\n    }).then(orden => {\n      if (orden.value) {\n\n        const id_persona = localStorage.getItem('id_persona');\n        this.datosclon = JSON.stringify({ \"id_persona\": id_persona, \"id_tarea\": registro.id_tarea });\n\n        let peticion: Observable<any>;\nconsole.log(this.datosclon);\n        peticion = this.registroService.actualizarRegistroNuevaId(this.datosclon);\n        peticion.subscribe(respuesta => {\n          Swal.fire({\n            title: this.id_tarea,\n            text: 'Registro duplicado',\n            icon: 'success',\n            showConfirmButton: true\n          })\n            , this.recarga();\n\n        });\n      }\n    });\n  }\n\n\n\n\n\n  //eliminar registro      \n  borrarRegistro(registro: Issue, i: string) {\n\n    Swal.fire({\n      title: `¿Desea borrar el registro ${registro.tarea}`,\n      text: 'Confirme si desea borrar el registro',\n      icon: 'question',\n      showConfirmButton: true,\n      showCancelButton: true\n\n    }).then(respuesta => {\n      if (respuesta.value) {\n        const id_persona = localStorage.getItem('id_persona');\n        this.datosborrado = JSON.stringify({ \"id_persona\": id_persona, \"id_tarea\": registro.id_tarea });\n        this.apiService.delete(this.datosborrado).subscribe();\n\n        Swal.fire({\n          title: registro.tarea,\n          text: 'Registro eliminado',\n          icon: 'success',\n          showConfirmButton: false\n        })\n          , this.recarga();\n\n      }\n    });\n  }\n\n  onSort(event){\n\nlocalStorage.setItem('myProp',event.column.prop);\nlocalStorage.setItem('myNewValue',event.newValue);\nthis.recarga();\n  }\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function (d) {\n      return d.rol_name.toLowerCase().indexOf(val) !== -1 || d.tarea.toLowerCase().indexOf(val) !== -1 || d.hora.toLowerCase().indexOf(val) !== -1 || d.estatus.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"row\">\n  <div class=\"col-8 text-left\">\n    <!-- <app-elegirturno></app-elegirturno> -->\n  </div>\n  <div class=\"col-2\">\n    <div class=\"form\">\n      <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n        <input\n          matInput\n          #filter\n          placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\n          (keyup)=\"updateFilter($event)\"\n        />\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"col-2 text-right\">\n    <div *ngIf=\"registroroleperson.id_rol== '8' || registroroleperson.id_rol== '5' || registroroleperson.id_rol== '6'\">\n      <a alt=\"Nuevo registro\" title=\"nuevo registro\" [routerLink]=\"['/', 'alta']\" class=\"btn btn-info pt4 btn-circle posicionplus\"><i class=\"fa fa-plus fa-3\"></i></a>\n    </div>\n  </div>\n</div>\n\n<!-- <div class=\"row\">\n  <div class=\"col-12 text-left mt-2 mb-2\">\n     El turno establecido es <strong> {{turnoestablecido.turno}} {{turnoestablecido.tipo_turno}} {{turnoestablecido.horainicio}} {{turnoestablecido.horafin}}</strong>\n  </div>\n</div> -->\n\n\n\n      <ngx-datatable\n        #mydatatable\n        class=\"material striped\"\n        headerHeight=\"50\"\n        [limit]=\"15\"\n        [columnMode]=\"'force'\"\n        footerHeight=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n        [messages]=\"my_messages\"\n        (sort)=\"onSort($event)\"\n        [sorts]=\"[{ prop: getmyProp, dir: getmyProp }]\"\n      >\n\n         <ngx-datatable-column \n         [sortable]=\"true\" \n         name=\"ID\" prop=\"id_tarea\"\n         [maxWidth]=\"90\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n            let-selectedCount=\"selectedCount\"\n          >\n          <div class=\"text-center\">{{ row.id_tarea }} </div>          \n        </ng-template>\n        </ngx-datatable-column> \n\n\n        <ngx-datatable-column \n        [sortable]=\"true\"  \n        name=\"Rol\" prop=\"rol_name\"\n        [maxWidth]=\"130\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n          <div class=\"text-center\">{{ row.rol_name }} </div> \n        </ng-template>        \n        </ngx-datatable-column> \n\n\n\n        <ngx-datatable-column   name=\"Tarea\" [maxWidth]=\"1810\">\n          <ng-template  \n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <span\n              title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n              (dblclick)=\"editing[rowIndex + '-tarea'] = true\"\n              *ngIf=\"!editing[rowIndex + '-tarea']\"\n            >\n              {{ value | slice: 0:90 }}\n            </span>\n            <input\n              required\n              autofocus\n              (keyup.enter)=\"updateValue($event, 'tarea', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-tarea']\"\n              type=\"text\"\n              class=\"form-control\"\n              [value]=\"value\"\n              [title]=\"row.id_tarea\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Hora\" [maxWidth]=\"110\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <span\n              title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n              (dblclick)=\"editing[rowIndex + '-hora'] = true\"\n              *ngIf=\"!editing[rowIndex + '-hora']\"\n            >\n              {{ value }}\n            </span>\n            <input\n              required\n              class=\"form-control\"\n              min=\"5\"\n              max=\"5\"\n              (onError)=\"(myHandleError)\"\n              pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n              \n              autofocus\n              (keyup.enter)=\"updateValue($event, 'hora', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-hora']\"\n              type=\"text\"\n              [value]=\"value\"\n              [title]=\"row.id_tarea\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Estatus\" [maxWidth]=\"90\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-row=\"row\"\n            let-value=\"value\"\n          >\n            <div\n              [ngClass]=\"{\n                positive: row.estatus == 'OK',\n                negative: row.estatus == 'KO',\n                posnegtive: row.estatus == 'OK-INC'\n              }\"\n            >\n              <span\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n                (dblclick)=\"editing[rowIndex + '-estatus'] = true\"\n                *ngIf=\"!editing[rowIndex + '-estatus']\"\n              >\n                {{ value }}\n              </span>\n              <input type=\"hidden\" #varId [value]=\"row.id_tarea\" />\n\n              <select\n                class=\"form-control\"\n                name=\"estatus\"\n                *ngIf=\"editing[rowIndex + '-estatus']\"\n                (blur)=\"editing[rowIndex + '-estatus'] = false\"\n                (change)=\"updateValue($event, 'estatus', rowIndex)\"\n                [value]=\"value\"\n                [title]=\"row.id_tarea\"\n              >\n                <option value=\"OK\">OK</option>\n                <option value=\"KO\">KO</option>\n                <option value=\"OK-INC\">OK-INC</option>\n              </select>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"ver\" [maxWidth]=\"150\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-row=\"row\"\n          >\n\n            <div class=\"text-center\">\n              <div class=\"row\">\n                <div class=\"col-12 p0 m0\">\n\n \n <!-- <div *ngIf=\"row.disabledBotones===turnoValor && registroroleperson.id_rol!= '8'\">\n                  <button (click)=\"duplicar(row, i)\"\n                  class=\"btn btn-warning botonsizes mr-1\">\n                      <i class=\"fa fa-clone\"></i>\n                  </button>\n                  <a\n                    [routerLink]=\"['/detalle', row.tokenid]\"\n                    class=\"btn btn-warning botonsizes mr-1\"\n                    ><i class=\"fa fa-pencil\"></i\n                  ></a>\n                  <button\n                    (click)=\"borrarRegistro(row, i)\"\n                    class=\"btn btn-warning botonsizes\"\n                  >\n                    <i class=\"fa fa-trash\"></i>\n                  </button>\n</div> \n\n<div *ngIf=\"registroroleperson.id_rol== '8'\"> -->\n                <button (click)=\"duplicar(row, i)\"\n                class=\"btn btn-warning botonsizes mr-1\">\n                    <i class=\"fa fa-clone\"></i>\n                </button>\n                <a\n                  [routerLink]=\"['/detalle', row.tokenid]\"\n                  class=\"btn btn-warning botonsizes mr-1\"\n                  ><i class=\"fa fa-pencil\"></i\n                ></a>\n                <button\n                  (click)=\"borrarRegistro(row, i)\"\n                  class=\"btn btn-warning botonsizes\"\n                >\n                  <i class=\"fa fa-trash\"></i>\n                </button>\n<!-- </div> -->\n\n\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    ","import { Injectable } from '@angular/core';\nimport { Constantes } from '../models/constantes.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminServicioService {\n\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private http: HttpClient) { }\n\n\n  altaRegistroFoto(datosFoto) {\n    return this.http.post(`${this.PHP_API_SERVER}/ajax/personas_update_foto.php`, datosFoto);\n  } \n\n\n  guardarRol(datosformulario){\n\n    return this.http.post(`${this.PHP_API_SERVER}/ajax/rol_crear.php`, JSON.stringify(datosformulario));\n  }\n\n  deleteRol(datosborrado){\n  \n    return this.http.post(`${this.PHP_API_SERVER}/ajax/roles_borrado.php`, datosborrado);\n  }\n  \n  guardarTurno(datosformularioturno){\n \n    return this.http.post(`${this.PHP_API_SERVER}/ajax/turno_registro_crear.php`, JSON.stringify(datosformularioturno));\n  }\n  \n  deleteTurno(datosborradoturno){\n \n    return this.http.post(`${this.PHP_API_SERVER}/ajax/turno_registro_borrado.php`, datosborradoturno);\n  }\n\n\n  getPersonas( id_persona:string ){\n\n    return this.http.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  guardarNuevancidencia(incidenciaForm){\n\n    return this.http.post(`${this.PHP_API_SERVER}/ajax/incidencia_crear.php`, JSON.stringify(incidenciaForm));\n  }      \n\n\n  getAyuda( id_ayuda:string ){\n      return this.http.get(`${ this.PHP_API_SERVER}/ajax/ayuda_detalle.php?id_ayuda=${ id_ayuda }`);\n  }\n\n  guardarNewAyuda(datosformularioayuda){\n\n    return this.http.post(`${this.PHP_API_SERVER}/ajax/ayuda_crear.php`, JSON.stringify(datosformularioayuda));\n  }\n\n  guardarAyudaModificado(datosformularioayuda){\n \n    return this.http.post(`${this.PHP_API_SERVER}/ajax/ayuda_update.php`, JSON.stringify(datosformularioayuda));\n  }\n\n  deleteAyuda(datosborradoAyuda){\n  \n    return this.http.post(`${this.PHP_API_SERVER}/ajax/ayuda_borrado.php`, datosborradoAyuda);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Personas } from '../models/personas';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiPersonas {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n  //turnos por rol\n  getTurnosReadByRol( id_rol:string ){\n      return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/turnos_read_by_rol.php?id_rol=${ id_rol }`);\n  }\n\n  //obtener persona por id_tarea\n  getPerson( id_persona ){\n      return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  //obtener foto persona\n  getFotografia( id_persona ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  validaEmail( email ){\n    \n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_validar_email.php?email=${ email }`);\n  }\n\n\n  altaRegistroFoto(datosFoto) {\n  \n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_update_foto.php`, datosFoto);\n  } \n\n\n  altaRegistro(datoregistro) {\n      return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_crear.php`, JSON.stringify(datoregistro));\n  }\n\n  getIdTurnoby( id_persona ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/turnos_read_by__id_persona.php?id_persona=${ id_persona }`);\n }\n\n getTurnosbyID( id_persona ){\n  return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/turno_read_by_persona.php?id_persona=${ id_persona }`);\n }\n \n\n\n\n  actualizarRegistro(persona: Personas){\n    const personaTemp = {\n        ...persona\n    };\n    delete personaTemp.id_persona;\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_update_detalle.php`, persona);  \n  }\n\n  modiRegistro(datos){\n    console.log(datos);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_update_personas.php`, datos);   \n  \n  }\n  \n  delete(datosborrado){\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n  \n  getLastId() {\n  return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/last_id.php`)\n  }\n\n  altaRegistro(datoregistro) {\n     console.log(JSON.stringify(datoregistro));\n      return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_crear.php`, JSON.stringify(datoregistro));\n  }\n\n  modiRegistro(datos){\n    //console.log(JSON.stringify(datos));\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_update.php`, datos);   \n  \n  }\n\n  delete(datosborrado){\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Personas } from '../models/personas';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AyudaService {\n\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n  //obtener persona por id_tarea\n  open(id_persona){\n      return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  \n\n}","import { Injectable } from '@angular/core';\nimport { WebsocketService } from './websocket.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor(public wsService: WebsocketService) { }\n\n  sendMessage( mensaje: string ){\n    const payload = {\n      de: this.wsService.getUsuario().nombre,\n      cuerpo: mensaje\n      };\n      \n      this.wsService.emit('mensaje',payload);\n  }\n  \n  getMessages(){\n    return this.wsService.listen('mensaje-nuevo');\n  }\n\n  getMessagesPrivate(){\n    return this.wsService.listen('mensaje-privado');\n  }\n  \n  getUsuariosActivos(){\n    return this.wsService.listen('usuarios-activos');\n  }\n\n  emitirUsuariosActivos(){\n    this.wsService.emit('obtener-usuarios');\n  }\n}","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {Issue} from '../models/issue';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n@Injectable()\nexport class DataService {\n\n\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n\n  dataChange: BehaviorSubject<Issue[]> = new BehaviorSubject<Issue[]>([]);\n  \n  // Temporarily stores data from dialogs\n  dialogData: any;\n\n  constructor (private httpClient: HttpClient) {}\n\n  get data(): Issue[] {\n    return this.dataChange.value;\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  /** CRUD METHODS */\n  getAllIssues(): void {\n    this.httpClient.get<Issue[]>(`${this.PHP_API_SERVER}/ajax/registro_read.php`).subscribe(data => {\n        this.dataChange.next(data);\n      },\n      (error: HttpErrorResponse) => {\n      console.log (error.name + ' ' + error.message);\n      });\n  }\n\n  // DEMO ONLY, you can find working methods below\n  addIssue (issue: Issue): void {\n    this.dialogData = issue;\n  }\n\n  updateIssue (issue: Issue): void {\n    this.dialogData = issue;\n  }\n\n  deleteIssue (id: number): void {\n    console.log(id);\n  }\n}\n\n\n\n/* REAL LIFE CRUD Methods I've used in my projects. ToasterService uses Material Toasts for displaying messages:\n\n    // ADD, POST METHOD\n    addItem(kanbanItem: KanbanItem): void {\n    this.httpClient.post(this.API_URL, kanbanItem).subscribe(data => {\n      this.dialogData = kanbanItem;\n      this.toasterService.showToaster('Successfully added', 3000);\n      },\n      (err: HttpErrorResponse) => {\n      this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n    });\n   }\n\n    // UPDATE, PUT METHOD\n     updateItem(kanbanItem: KanbanItem): void {\n    this.httpClient.put(this.API_URL + kanbanItem.id, kanbanItem).subscribe(data => {\n        this.dialogData = kanbanItem;\n        this.toasterService.showToaster('Successfully edited', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n\n  // DELETE METHOD\n  deleteItem(id: number): void {\n    this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(data['']);\n        this.toasterService.showToaster('Successfully deleted', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n*/\n\n\n\n\n","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Usermodule } from '../models/usuario.model';\nimport { HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS } from '@angular/cdk/a11y/high-contrast-mode/high-contrast-mode-detector';\nimport { Observable } from 'rxjs';\n\n\n\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class DataserviceService {\n\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  redirectUrl: string;\n\n  leftCypt = Math.random().toString(36).substr(2);\n  rightCypt = Math.random().toString(36).substr(2);\n\n@Output() getLoggedInName: EventEmitter<any> = new EventEmitter();\n\n  constructor(private httpClient : HttpClient) { }\n \n  private aRndm = Constantes.ARND; //URL del servicio\n  private bRndm = Constantes.BRND; //URL del servicio\n  private cRndm = Constantes.CRND; //URL del servicio\n  private dRndm = Constantes.DRND; //URL del servicio\n\n  public userlogin(username,password) {\n    return this.httpClient.post<any>(`${this.PHP_API_SERVER}/ajax/login.php`, {username,password})\n        .pipe(map(Usermodule => {\n            //id mask\n            const id_persona_mask = this.aRndm+Usermodule[0].id_persona+this.bRndm;\n            this.setToken(Usermodule[0].nombres);\n            this.setID(id_persona_mask);\n            this.setIDrol(Usermodule[0].id_rol);\n            this.getLoggedInName.emit(true);\n            \n            return Usermodule;\n        }));\n\n    }\n\n\n    getUserId( id_persona ){\n        return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n    }\n\n\n  \n// public userregistration(name,email,pwd,mobile) {\n//   return this.httpClient.post<any>(this.baseUrl + '/registration.php', { name,email, pwd,mobile })\n//       .pipe(map(Usermodule => {\n//           return Usermodule;\n//       }));\n// }\n\n\nrand = function(token: string) {\n  return Math.random().toString(36).substr(2); // remove `0.`\n};\n\n\nsetIDrol(id_rol: string) {\n  localStorage.setItem('id_rol', this.cRndm+id_rol+this.dRndm);\n}\n\nsetID(id_persona: string) {\n    localStorage.setItem('id_persona', id_persona);\n  }\n   \ngetID() {\n    return localStorage.getItem('id_persona');\n  }\n  \n\n//token\nsetToken(token: string) {\n  localStorage.setItem('token', this.rand(token));\n}\n \ngetToken() {\n  return localStorage.getItem('token');\n}\n \ndeleteToken() {\n  localStorage.removeItem('token');\n}\n \nisLoggedIn() {\n  const usertoken = this.getToken();\n  const idtoken = this.getID();\n  if (usertoken != null || idtoken != null) {\n    return true\n  }\n  return false;\n}\n \n}\n ","\r\n\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Issue } from '../../app/models/issue';\r\nimport { Personas } from '../models/personas';\r\nimport { Seguimiento } from '../models/seguimiento';\r\nimport { Constantes } from '../models/constantes.model';\r\n\r\n@Injectable(\r\n    {\r\n        providedIn:'root'\r\n    }\r\n)\r\n\r\n\r\nexport class DetalleService {\r\n\r\n    private personas:Issue[] = [];\r\n    private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n\r\n\r\n        constructor( private http: HttpClient) {}\r\n\r\n\r\n        //modificar registro\r\n        actualizarRegistro(persona: Issue){\r\n\r\n            const personaTemp = {\r\n                ...persona\r\n            };\r\n            delete personaTemp.id_tarea;\r\n\r\n            return this.http.post(`${this.PHP_API_SERVER}/ajax/registro_update_detalle.php`, persona);  \r\n\r\n        }\r\n\r\n         //duplicar\r\n         actualizarRegistroNuevaId(datosclon){\r\n            return this.http.post(`${this.PHP_API_SERVER}/ajax/registro_duplicar_detalle.php`,datosclon);\r\n          }\r\n\r\n\r\n\r\n        actualizarRegistroSeguimiento(datoregistro) {\r\n            console.log(datoregistro);\r\n            return this.http.post(`${this.PHP_API_SERVER}/ajax/registro_update_seguimiento.php`, JSON.stringify(datoregistro));\r\n        }\r\n\r\n        //obtener persona por id_tarea\r\n        getPerson( id_tarea:string ){\r\n            return this.http.get(`${ this.PHP_API_SERVER}/ajax/registro_detalle.php?id_tarea=${ id_tarea }`);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        delete(datosborrado){\r\n            return this.http.post(`${this.PHP_API_SERVER}/ajax/registro_seguimiento_borrado.php`,datosborrado);\r\n          }\r\n\r\n\r\n   \r\n    \r\n       \r\n \r\n    \r\n}\r\n\r\n","\r\n\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\nimport { Constantes } from '../models/constantes.model';\r\n@Injectable(\r\n    {\r\n        providedIn:'root'\r\n    }\r\n)\r\n\r\n\r\nexport class DetalleHistoricoService {\r\n\r\n     //persons:any[] = [];\r\n \r\n \r\n\r\n        private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n\r\n        constructor( private http: HttpClient) {\r\n\r\n        }\r\n\r\n\r\n\r\n        //obtener persona por id\r\n        getDetalleHistorico( id_log:string ){\r\n            return this.http.get(`${ this.PHP_API_SERVER}/ajax/registro_historico_detalle.php?id_log=${ id_log }`);\r\n        }\r\n\r\n\r\n        delete(datosborrado){\r\n            console.log(datosborrado);\r\n            return this.http.post(`${this.PHP_API_SERVER}/ajax/registro_seguimiento_borrado.php`,datosborrado);\r\n          }\r\n\r\n\r\n \r\n    \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlotanteService {\n\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient : HttpClient) { }\n\n  getUserId( id_persona ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n}\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoricoService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n\n\n  delete(datosborrado){\n    console.log(datosborrado);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_historico_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IncidenciasService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n    //obtener persona por id\n    getDetalleIncidencia( token_incidencia ){\n        return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/incidencia_detalle.php?token_incidencia=${ token_incidencia }`);\n    }\n\n\n    guardarIncidencia(valor){  \n        console.log(valor);\n        return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/incidencia_update.php`, valor);\n      }\n\n      \n\n  delete(datosborrado){\n    console.log(datosborrado);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_historico_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeriodicidadService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n  altaRegistrochecks(datoregistro) {\n      // console.log(JSON.stringify(datoregistro));\n      return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/periodicidad_crear.php`, JSON.stringify(datoregistro));\n  }\n\n  //obtener persona por id\n          getCheckeds( id_tarea:string ){\n            return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/periodicidad_detalle.php?id_tarea=${ id_tarea }`);\n        }\n\n  getDatosMadre( id_tarea ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/periodicidad_madre.php?id_tarea=${ id_tarea }`)\n    \n  }\n  \n\n//   modiRegistro(datos){\n//     console.log(datos);\n//     return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_update.php`, datos);   \n  \n//   }\n\n//   delete(datosborrado){\n//     console.log(datosborrado);\n//     return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_borrado.php`,datosborrado);\n//   }\n\n\ndelete(datosborrado){\n  console.log(datosborrado);\n  return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_diames_borrado.php`,datosborrado);\n}\n\n\n\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Constantes } from '../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\nprovidedIn: 'root'\r\n})\r\n\r\nexport class SharedService {\r\n\r\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n\r\n    private subject = new Subject<any>();\r\n\r\n\r\n    constructor(private httpClient: HttpClient) {}\r\n\r\n\r\n\r\n    sendClickEvent() {\r\n      this.subject.next();\r\n    }\r\n    getClickEvent(): Observable<any>{ \r\n      return this.subject.asObservable();\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Personas } from '../models/personas';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TurnosService {\n\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n  guardarTurnoGhost(datosturnos){  \n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/turno_ghost_crear.php`, datosturnos);\n  }\n\n  guardarTurno(datosturnos){  \n\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/turno_crear.php`, datosturnos);\n  }\n\n  //obtener rol persona \n  getUserId( id_persona ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n  \n\n}","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { Usuario } from '../models/usuario';\nimport { Router } from '@angular/router';\nimport { callbackify } from 'util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  public socketStatus = false;\n  public usuario: Usuario = null;\n\n  constructor(private socket: Socket, private router: Router) { \n    this.cargarStorage();\n    this.checkStatus();\n  }\n\n  checkStatus(){\n\n    this.socket.on('connect', () =>{\n      console.log('Conectado al servidor');\n      this.socketStatus = true;\n      this.cargarStorage();\n    });\n\n    this.socket.on('disconnect', () =>{\n      console.log('Desconectado del servidor');\n      this.socketStatus = false;\n    });\n  }\n\n  emit( evento: string, payload?: any, callback?: Function ){\n    console.log('Emitiendo', evento)\n    this.socket.emit ( evento, payload, callback );\n  }\n\n  //recibe un evento y devuelve un observable\n  listen( evento: string ){\n    return this.socket.fromEvent( evento ); \n  }\n\n  loginWS ( id_persona: string ){\n    //retorno promesa para mantener sesion activa\n    return new Promise( ( resolve, reject ) =>{\n      this.emit('configurar-usuario',{id_persona}, resp =>{  \n        this.usuario= new Usuario( id_persona );\n        this.guardarStorage();\n        resolve(); //resuelvo la promesa\n      })\n    });\n  }\n\n\n  // logoutWS(){\n  //   this.usuario = null;\n  //   localStorage.removeItem('usuario');\n  //   const payload = {\n  //     id_persona: ''\n  //   }\n  //   this.emit('configurar-usuario', payload, ()=> {} );\n  //   this.router.navigateByUrl('');\n  // }\n\n\n  getUsuario(){\n    return this.usuario;  \n  }\n\n  //almacenamos la sesion del usuario el localstorage\n  guardarStorage(){\n    localStorage.setItem ('usuario', JSON.stringify(this.usuario));\n  }\n\n  //leemos el localstorage\n  cargarStorage(){ \n    if(localStorage.getItem('usuario')){\n      this.usuario = JSON.parse(localStorage.getItem('usuario'));\n      this.loginWS(this.usuario.id_persona);\n    } \n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n   wsUrl: 'http://joraco.site:5001'\n};\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"]}