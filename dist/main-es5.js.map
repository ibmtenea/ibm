{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/components/buscador/buscador.component.ts","webpack:///src/app/components/buscador/buscador.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/imagen/modimagen.component.ts","webpack:///src/app/components/imagen/modimagen.component.html","webpack:///src/app/components/menu/menu.component.ts","webpack:///src/app/components/menu/menu.component.html","webpack:///src/app/components/periodicidad/accion.component.ts","webpack:///src/app/components/periodicidad/accion.component.html","webpack:///src/app/components/periodicidad/accionhistorico.component.ts","webpack:///src/app/components/periodicidad/accionhistorico.component.html","webpack:///src/app/components/periodicidad/check.component.ts","webpack:///src/app/components/periodicidad/check.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/models/accionpuntual.ts","webpack:///src/app/models/constantes.model.ts","webpack:///src/app/models/issue.ts","webpack:///src/app/models/periodicidad.ts","webpack:///src/app/models/periodicidadmadre.ts","webpack:///src/app/models/personas.ts","webpack:///src/app/models/seguimiento.ts","webpack:///src/app/models/usuario.model.ts","webpack:///src/app/pages/alta.component.ts","webpack:///src/app/pages/alta.component.html","webpack:///src/app/pages/configuracion.pages.ts","webpack:///src/app/pages/configuracion.pages.html","webpack:///src/app/pages/descarga.pages.ts","webpack:///src/app/pages/descarga.pages.html","webpack:///src/app/pages/detalle.component.ts","webpack:///src/app/pages/detalle.component.html","webpack:///src/app/pages/detallehistorico.component.ts","webpack:///src/app/pages/detallehistorico.component.html","webpack:///src/app/pages/detallepersona.component.ts","webpack:///src/app/pages/detallepersona.component.html","webpack:///src/app/pages/historico.component.ts","webpack:///src/app/pages/historico.component.html","webpack:///src/app/pages/home.component.ts","webpack:///src/app/pages/home.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/perfil.pages.ts","webpack:///src/app/pages/perfil.pages.html","webpack:///src/app/pages/personas.pages.ts","webpack:///src/app/pages/personas.pages.html","webpack:///src/app/services/apipersonas.service.ts","webpack:///src/app/services/apiregistros.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/detalle.service.ts","webpack:///src/app/services/detallehistorico.service.ts","webpack:///src/app/services/historico.service.ts","webpack:///src/app/services/periodicidad.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","HttpLoaderFactory","http","AppModule","provide","useValue","setLocale","forRoot","useHash","loader","useFactory","deps","declarations","imports","entryComponents","providers","bootstrap","routes","path","component","canActivate","pathMatch","redirectTo","BuscadorComponent","FooterComponent","any","Date","getFullYear","HeaderComponent","translate","addLangs","setDefaultLang","browserLang","getBrowserLang","use","match","ModimagenComponent","fb","activatedRoute","httpClient","perioService","PHP_API_SERVER","API_SERVER","personas","fotopersona","accionForm","group","checkArrayt","array","fechafin","repeticiones","required","id_tarea","snapshot","paramMap","get","id_categoria","cargaMadre","id_persona","getFotografia","subscribe","respuesta","location","reload","submitForm","MenuComponent","checked","AccionComponent","registro","registroRetorno","periodicidades","datoregistro","id_seguimiento","mad","mesActual","now","diasMes","tramosSemana","tramosMes","diasSemana","mesVigente","getMonth","result","error","console","getDatosMadre","madre","controls","setValue","log","identificacion","datosborrado","JSON","stringify","target","push","value","i","forEach","item","removeAt","borrarRegistro","valormes","altaRegistrochecks","fire","text","icon","showConfirmButton","AccionHistoricoComponent","CheckComponent","AuthGuard","auth","router","estaAutenticado","navigateByUrl","providedIn","ModeloAccionPuntual","Constantes","Issue","ModeloPeriodicidad","PeriodicidadMadre","Personas","Seguimiento","UsuarioModel","AltaComponent","apiService","Editor","roles","estados","categorias","issue","editing","rows","temp","dregistro","tarea","hora","estatus","observaciones","flag_visibilidad","prioridad","ColumnMode","editor","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","navigate","altaRegistro","datos","recarga","onReady","ConfiguracionPage","DescargaPage","DetalleComponent","registroService","modalService","closeResult","registropersona","recurrencias","suscripcion","dias","name","getPerson","content","open","ariaLabelledBy","reason","getDismissReason","ESC","BACKDROP_CLICK","form","patronHora","horaResult","test","peticion","actualizarRegistro","actualizarRegistroSeguimiento","showCancelButton","guardarregistro","DetalleHistoricoComponent","fechamodi","DetallePersona","nombres","telefono","email","direccion","registrado","id_rol","password","imagen","fieldTextType","patronEmail","emailResult","patronPassword","passwordResult","toggleFieldTextType","HistoricoComponent","historicoService","fecha","issueg","hour","status","fetch","data","cb","XMLHttpRequest","onload","parse","response","send","event","val","toLowerCase","filter","d","indexOf","table","offset","updateFilter","HomeComponent","cell","rowIndex","campo","valor","ever","ngOnInit","length","modiRegistro","LoginComponent","usuario","recordarme","localStorage","getItem","invalid","allowOutsideClick","showLoading","login","close","setItem","err","message","PerfilPage","PersonasPage","ApiPersonas","post","persona","personaTemp","ApiService","AuthService","url","apikey","leerToken","authData","returnSecureToken","pipe","guardarToken","idToken","userToken","DataService","API_URL","dataChange","dialogData","next","DetalleService","DetalleHistoricoService","HistoricoService","PeriodicidadService","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,6CAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,OAAR;AAKD,K;;;uBANYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,sC;AAAA;AAAA;ACRzB;;AACE;;AACF;;;;;;;;;sEDMaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AERzsE,CAGA;;;AA4DA,gFAAmB,kEAAnB,EAA6B,IAA7B;;AAGO,aAASC,iBAAT,CAA2BC,IAA3B,EAA6C;AAClD,aAAO,IAAI,+EAAJ,CAAwBA,IAAxB,EAA8B,gBAA9B,EAAgD,OAAhD,CAAP;AACD;;QAyEYC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBANT,CACT,mEADS,EAET;AAAEC,eAAO,EAAE,uDAAX;AAAsBC,gBAAQ,EAAE;AAAhC,OAFS,C;AAGV,gBAxCQ,CACP,uEADO,EAEP,6FAFO,EAGP,qEAHO,EAIP,wEAJO,EAKP,wEALO,EAMP,sEANO,EAOP,oEAPO,EASP,qEATO,EAUP,uEAVO,EAWP,2EAXO,EAYP,uEAZO,EAaP,8EAbO,EAcP,CAAC,qFAA4BC,SAA5B,CAAsC,QAAtC,CAAD,CAdO,EAeP,2DAfO,EAgBP,2EAhBO,EAiBP,qEAjBO,EAkBP,mEAlBO,EAmBP;AACA,oEAAaC,OAAb,CAAqB,kDAArB,EAA6B;AAAEC,eAAO,EAAE;AAAX,OAA7B,CApBO,EAqBP,yDAAaD,OAAb,EArBO,EAsBP,mEAtBO,EAuBP,yEAvBO,EAwBP,2EAxBO,EAyBP,qEAAgBA,OAAhB,CAAwB;AACtBE,cAAM,EAAE;AACNL,iBAAO,EAAE,oEADH;AAENM,oBAAU,EAAET,iBAFN;AAGNU,cAAI,EAAE,CAAC,+DAAD;AAHA;AADc,OAAxB,CAzBO,CAwCR,EALC,6DAKD;;;;0HAGUR,S,EAAS;AAAA,uBApElB,2DAoEkB,EAnEtB,wFAmEsB,EAlElB,oEAkEkB,EAjElB,0EAiEkB,EAhElB,4EAgEkB,EA/DlB,4FA+DkB,EA9DpB,0FA8DoB,EA7DpB,0FA6DoB,EA5DpB,4GA4DoB,EA3DlB,oFA2DkB,EA1DlB,oFA0DkB,EAzDlB,8EAyDkB,EAxDlB,0FAwDkB,EAvDlB,mEAuDkB,EAtDtB,8EAsDsB,EArDlB,mEAqDkB,EApDlB,6EAoDkB,EAnDlB,+DAmDkB,EAlDlB,oEAkDkB,EAjDlB,+EAiDkB;AAjDJ,kBAOd,uEAPc,EAQd,6FARc,EASd,qEATc,EAUd,wEAVc,EAWd,wEAXc,EAYd,sEAZc,EAad,oEAbc,EAed,qEAfc,EAgBd,uEAhBc,EAiBd,2EAjBc,EAkBd,uEAlBc,EAmBd,8EAnBc,EAmBI,oFAnBJ,EAqBd,2DArBc,EAsBd,2EAtBc,EAuBd,qEAvBc,EAwBd,mEAxBc,EAwBK,6DAxBL,EAwBK,wDAxBL,EA4Bd,mEA5Bc,EA6Bd,yEA7Bc,EA8Bd,2EA9Bc,EA8BA,oEA9BA,CAiDI;AAnBJ,kBAWd,6DAXc;AAmBI,O;AARN,K;;;;;sEAQHA,S,EAAS;cAtErB,sDAsEqB;eAtEZ;AACRS,sBAAY,EAAE,CACZ,2DADY,EAEhB,wFAFgB,EAGZ,oEAHY,EAIZ,0EAJY,EAKZ,4EALY,EAMZ,4FANY,EAOd,0FAPc,EAQd,0FARc,EASd,4GATc,EAUZ,oFAVY,EAWZ,oFAXY,EAYZ,8EAZY,EAaZ,0FAbY,EAcZ,mEAdY,EAehB,8EAfgB,EAgBZ,mEAhBY,EAiBZ,6EAjBY,EAkBZ,+DAlBY,EAmBZ,oEAnBY,EAoBZ,+EApBY,CADN;AA2BRC,iBAAO,EAAE,CACP,uEADO,EAEP,6FAFO,EAGP,qEAHO,EAIP,wEAJO,EAKP,wEALO,EAMP,sEANO,EAOP,oEAPO,EASP,qEATO,EAUP,uEAVO,EAWP,2EAXO,EAYP,uEAZO,EAaP,8EAbO,EAcP,CAAC,qFAA4BP,SAA5B,CAAsC,QAAtC,CAAD,CAdO,EAeP,2DAfO,EAgBP,2EAhBO,EAiBP,qEAjBO,EAkBP,mEAlBO,EAmBP;AACA,wEAAaC,OAAb,CAAqB,kDAArB,EAA6B;AAAEC,mBAAO,EAAE;AAAX,WAA7B,CApBO,EAqBP,yDAAaD,OAAb,EArBO,EAsBP,mEAtBO,EAuBP,yEAvBO,EAwBP,2EAxBO,EAyBP,qEAAgBA,OAAhB,CAAwB;AACtBE,kBAAM,EAAE;AACNL,qBAAO,EAAE,oEADH;AAENM,wBAAU,EAAET,iBAFN;AAGNU,kBAAI,EAAE,CAAC,+DAAD;AAHA;AADc,WAAxB,CAzBO,CA3BD;AA4DRG,yBAAe,EAAE,EA5DT;AA6DRpB,iBAAO,EAAE,CACP,6DADO,CA7DD;AAgERqB,mBAAS,EAAE,CACT,mEADS,EAET;AAAEX,mBAAO,EAAE,uDAAX;AAAsBC,oBAAQ,EAAE;AAAhC,WAFS,CAhEH;AAoERW,mBAAS,EAAE,CAAC,2DAAD;AApEH,S;AAsEY,Q;;;;;;;;;;;;;;;;;;AC7ItB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,mD,CAAA;AACA;;;AA2DO,QAAMC,MAAM,GAAW,CAC5B;AAAEC,UAAI,EAAE,MAAR;AAAiBC,eAAS,EAAE,mEAA5B;AAA2CC,iBAAW,EAAE,CAAE,4DAAF;AAAxD,KAD4B,EAE5B;AAAEF,UAAI,EAAE,MAAR;AAAiBC,eAAS,EAAE,mEAA5B;AAA2CC,iBAAW,EAAE,CAAE,4DAAF;AAAxD,KAF4B,EAG5B;AAAEF,UAAI,EAAE,UAAR;AAAqBC,eAAS,EAAE,kEAAhC;AAA8CC,iBAAW,EAAE,CAAE,4DAAF;AAA3D,KAH4B,EAI5B;AAAEF,UAAI,EAAE,4BAAR;AAAuCC,eAAS,EAAE,8EAAlD;AAAkEC,iBAAW,EAAE,CAAE,4DAAF;AAA/E,KAJ4B,EAK5B;AAAEF,UAAI,EAAE,WAAR;AAAsBC,eAAS,EAAE,6EAAjC;AAAqDC,iBAAW,EAAE,CAAE,4DAAF;AAAlE,KAL4B,EAM5B;AAAEF,UAAI,EAAE,sBAAR;AAAiCC,eAAS,EAAE,2FAA5C;AAAuEC,iBAAW,EAAE,CAAE,4DAAF;AAApF,KAN4B,EAO5B;AAAEF,UAAI,EAAE,mBAAR;AAA8BC,eAAS,EAAE,yEAAzC;AAA2DC,iBAAW,EAAE,CAAE,4DAAF;AAAxE,KAP4B,EAQ5B;AAAEF,UAAI,EAAE,OAAR;AAAoBC,eAAS,EAAE;AAA/B,KAR4B,EAS5B;AAAED,UAAI,EAAE,EAAR;AAAYG,eAAS,EAAE,MAAvB;AAA+BC,gBAAU,EAAE;AAA3C,KAT4B,EAU5B;AAAEJ,UAAI,EAAE,IAAR;AAAcI,gBAAU,EAAE;AAA1B,KAV4B,CAAvB,C,CAcP;;;;;;;;;;;;;;;;;AC1EA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,iB;;;;;uBAAAA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,2R;AAAA;AAAA;ACN9B;;AACI;;AACA;;AACE;;;;AACA;;AACE;;AACF;;AACF;;AACF;;AACA;;;;AANoD;;AAAA;;;;;;;;;;sEDGzCA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACPzB,kBAAQ,EAAE,cADH;AAEPC,qBAAW,EAAE;AAFN,S;AAKmB,Q;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOayB,e,GAET;AAAA;;AACI,WAAKC,GAAL,GAAW,IAAIC,IAAJ,GAAWC,WAAX,EAAX;AACH,K;;;uBAJQH,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,2F;AAAA;AAAA;ACP5B;;AACI;;AAGM;;AACF;;AAER;;;;AAHU;;AAAA;;;;;;;;sEDGGA,e,EAAe;cAL3B,uDAK2B;eALjB;AACP1B,kBAAQ,EAAE,YADH;AAEPC,qBAAW,EAAE;AAFN,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiDwB;;AAA6G;;AAAU;;;;;;;;AAArE,qFAAc,UAAd,EAAc,4CAAd;;AAA2D;;AAAA;;;;QD1CxH6B,e,GACT,yBAAmBC,SAAnB,EAA8C;AAAA;;AAA3B,WAAAA,SAAA,GAAAA,SAAA;AACf,WAAKA,SAAL,CAAeC,QAAf,CAAwB,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAxB;AACA,WAAKD,SAAL,CAAeE,cAAf,CAA8B,IAA9B;AAGA,UAAMC,WAAW,GAAGH,SAAS,CAACI,cAAV,EAApB;AACAJ,eAAS,CAACK,GAAV,CAAcF,WAAW,CAACG,KAAZ,CAAkB,UAAlB,IAAgCH,WAAhC,GAA8C,IAA5D;AAGC,K;;;uBAVIJ,e,EAAe,qI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,gtB;AAAA;AAAA;;;ACLxB;;AACI;;AASJ;;AAEI;;AAAiC;;AAAS;;AAG9C;;AAEA;;AACJ;;AAOQ;;AACI;;AACI;;AACI;;AACI;;AAAkD;;;;AAClD;;AACR;;AACA;;AACK;;AACG;;AAA+C;;;;AAC/C;;AACR;;AAMA;;AACA;;AAEI;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,mBAAU,IAAAC,SAAA,iBAAV;AAAyC,WAAzC;;AAC3E;;AACF;;AACF;;AACF;;AACF;;AAWJ;;AAGJ;;AACJ;;AAiBA;;AACA;;;;AAvDsE;;AAAA;;AAKH;;AAAA;;AAavC;;AAAA;;;;;;;;;;sED1CnBD,e,EAAe;cAL3B,uDAK2B;eALjB;AACP9B,kBAAQ,EAAE,YADH;AAEPC,qBAAW,EAAE;AAFN,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiBaqC,kB;AAMX,kCACUC,EADV,EAEUC,cAFV,EAGUC,UAHV,EAIUC,YAJV,EAImC;AAAA;;AAHzB,aAAAH,EAAA,GAAAA,EAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AARV,aAAAC,cAAA,GAAiB,oEAAWC,UAA5B,CAQmC,CARK;;AACxC,aAAAC,QAAA,GAAuB,EAAvB;AACA,aAAAC,WAAA,GAAuB,IAAI,yDAAJ,EAAvB,CAMmC,CAM/B;;AACA,aAAKC,UAAL,GAAkB,KAAKR,EAAL,CAAQS,KAAR,CAAc;AAC9BC,qBAAW,EAAE,KAAKV,EAAL,CAAQW,KAAR,CAAc,EAAd,CADiB;AAE9BC,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFoB;AAGhC;AACEC,sBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAJgB;AAK9BC,kBAAQ,EAAE,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,UAA1C,CALoB;AAM9BC,sBAAY,EAAE,GANgB,CAMZ;;AANY,SAAd,CAAlB;AAUH;;;;mCAMU;AACP,eAAKC,UAAL;AACH;;;qCAKS;AAAA;;AACR,cAAMC,UAAU,GAAG,KAAKpB,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,YAA1C,CAAnB;AACA,eAAKf,YAAL,CAAkBmB,aAAlB,CAAgCD,UAAhC,EAA4CE,SAA5C,CAAuD,UAACC,SAAD,EAAyB;AAChF,iBAAI,CAACjB,WAAL,GAAmBiB,SAAnB;AACA,iBAAI,CAACjB,WAAL,GAAmBiB,SAAnB,CAFgF,CAGhF;AAED;AACE,WAND;AAOD,S,CAID;AACA;AACA;AACA;AAEA;AAGA;;;;kCACU;AACRC,kBAAQ,CAACC,MAAT;AACD;;;qCAEa,CACd;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;;;;;;uBAhFS3B,kB,EAAkB,2H,EAAA,+H,EAAA,gI,EAAA,0I;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA,0J;AAAA;AAAA;AChB/B;;AAAkD;AAAA,mBAAY,IAAA4B,UAAA,EAAZ;AAAwB,WAAxB;;AAGlD;;AASA;;;;AAZM;;AAON;;AAAA;;;;;;;;;sEDSa5B,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTtC,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE;AAFJ,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;QASakE,a;AACZ;AAAA;AAAe;;;;mCACP,CAAI;;;;;;;uBAFAA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,c;AAAA,m/B;AAAA;AAAA;ACR1B;;AACE;;AACE;;AACE;;AAMA;;AACE;;AAAuB;;AAAgC;;AACvD;;AAA0C;;AAAI;;AAAa;;AAAK;;AAEhE;;AACE;;AAAuC;;AAAO;;;;AAA8B;;AAC9E;;AACF;;AACF;;AACF;;AAEF;;AAEA;;AAEE;;AACE;;;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACA;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;;;AACF;;AACF;;AACF;;AACA;;AACA;;AACC;;;;AACD;;AAEA;;AACE;;AACE;;AACE;;AACA;;;;AACF;;AACF;;AACF;;AACF;;;;AAtDW;;AAAA;;AAC6C;;AAAA;;AAWpD;;AAAA;;AAKK;;AAAA;;AAED;;AAAA;;AAIC;;AAAA;;AAED;;AAAA;;AAIC;;AAAA;;AAED;;AAAA;;AAMA;;AAAA;;AAML;;AAAA;;AAKM;;AAAA;;AAED;;AAAA;;;;;;;;;;sEDvDKA,a,EAAa;cANzB,uDAMyB;eANf;AACPnE,kBAAQ,EAAE,UADH;AAEPC,qBAAW,EAAE,uBAFN;AAGPC,mBAAS,EAAE,CAAC,sBAAD;AAHJ,S;AAMe,Q;;;;;;;;;;;;;;;;;;;;AET1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC0EkB;;AACE;;AAAiB;;AAAmB;;AAAa;;AAAM;;AACrD;;AAEA;AAAA;;AAAA;;AAAA;AAAA;;AAFA;;AAIF;;AACF;;AACA;;;;;;AAPsC;;AAAA;;AACV;;AAAA;;AACxB,iGAAAkE,OAAA;;AADuD;;;;;;;;AAW3D;;AACE;;AAAiB;;AAAmB;;AAAe;;AAAM;;AAEvD;;AAA2E;AAAA;;AAAA;;AAAA;AAAA;;AAA3E;;AAKF;;AAAM;;AACR;;;;;;AARsC;;AAAA;;AAEY;;AAAA,mGAAAA,OAAA;;AAAvB;;;;;;;;AAc3B;;AACE;;AAAiB;;AAAmB;;AAAe;;AAAM;;AACvD;;AAA2E;AAAA;;AAAA;;AAAA;AAAA;;AAA3E;;AAAiH;;AAAM;;AAC3H;;;;;;AAFsC;;AAAA;;AACY;;AAAA,mGAAAA,OAAA;;AAAvB;;;;;;;;AA+EvB;;AAEI;;AAIA;AAAA;;AAAA;;AAAA;AAAA;;AAJA;;AAQF;;AAAoC;;AAAa;;AACnD;;;;;;AARyB;;AAAA;;AAA8B;;AAEnD,iGAAAA,OAAA;;AAFA;;AAOK;;AAAA;;AAA6B;;AAAA;;;;QD9K/CC,e;AAgCX,+BAAoB9B,EAApB,EAA6CC,cAA7C,EAAqFC,UAArF,EAAqHC,YAArH,EAAwJ;AAAA;;AAAA;;AAApI,aAAAH,EAAA,GAAAA,EAAA;AAAyB,aAAAC,cAAA,GAAAA,cAAA;AAAwC,aAAAC,UAAA,GAAAA,UAAA;AAAgC,aAAAC,YAAA,GAAAA,YAAA;AA7BrH,aAAA4B,QAAA,GAAgC,IAAI,yEAAJ,EAAhC;AACA,aAAAC,eAAA,GAAsC,IAAI,uEAAJ,EAAtC;AACA,aAAAC,cAAA,GAAuC,EAAvC;AAEA,aAAAC,YAAA,GAAe;AACbC,wBAAc,EAAE,IADH;AAEbpB,kBAAQ,EAAE,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,UAA1C,CAFG;AAGbG,oBAAU,EAAE;AAHC,SAAf;AAOA,aAAAe,GAAA,GAAwB,IAAI,2EAAJ,EAAxB;AAEA,aAAAC,SAAA,GAAoBhD,IAAI,CAACiD,GAAL,EAApB;AACA,aAAAlC,cAAA,GAAiB,oEAAWC,UAA5B,CAewJ,CAfhH;;AACxC,aAAAkC,OAAA,GAAqB,EAArB;AACA,aAAAC,YAAA,GAA+B,EAA/B;AACA,aAAAC,SAAA,GAAyB,EAAzB;AACA,aAAAC,UAAA,GAA2B,EAA3B;AAQA,aAAAC,UAAA,GAAa,IAAItD,IAAJ,GAAWuD,QAAX,KAAwB,CAArC,CAGwJ,CAEtJ;;AACA1C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,gCAA5C,EAA8EmB,SAA9E,CAAwF,UAAAsB,MAAM,EAAI;AAChG,gBAAI,CAACN,OAAL,GAAeM,MAAf;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAHsJ,CAOtJ;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,wCAAtB,GAAiE,KAAK8B,YAAL,CAAkBnB,QAAzG,EAAmHQ,SAAnH,CAA6H,UAAAsB,MAAM,EAAI;AACrI,gBAAI,CAACL,YAAL,GAAoBK,MAApB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EARsJ,CAYtJ;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,qCAAtB,GAA8D,KAAK8B,YAAL,CAAkBnB,QAAtG,EAAgHQ,SAAhH,CAA0H,UAAAsB,MAAM,EAAI;AAClI,gBAAI,CAACJ,SAAL,GAAiBI,MAAjB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAbsJ,CAiBtJ;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,6CAAtB,GAAsE,KAAK8B,YAAL,CAAkBnB,QAA9G,EAAwHQ,SAAxH,CAAkI,UAAAsB,MAAM,EAAI;AAC1I,gBAAI,CAACH,UAAL,GAAkBG,MAAlB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAlBsJ,CAsBtJ;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,0CAAtB,GAAmE,KAAK8B,YAAL,CAAkBnB,QAA3G,EAAqHQ,SAArH,CAA+H,UAAAsB,MAAM,EAAI;AACvI,gBAAI,CAACZ,cAAL,GAAsBY,MAAtB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAvBsJ,CAgCtJ;;AACA,aAAKtC,UAAL,GAAkB,KAAKR,EAAL,CAAQS,KAAR,CAAc;AAC9BC,qBAAW,EAAE,KAAKV,EAAL,CAAQW,KAAR,CAAc,EAAd,CADiB;AAE9BC,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFoB;AAGhC;AACEC,sBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAJgB;AAK9BC,kBAAQ,EAAE,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,UAA1C,CALoB;AAM9BC,sBAAY,EAAE,GANgB,CAMZ;;AANY,SAAd,CAAlB;AAUD;;;;mCAQU;AAEZ,eAAKC,UAAL;AAEE;;;qCAMS;AAAA;;AACR,cAAML,QAAQ,GAAG,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,UAA1C,CAAjB;AACA,eAAKf,YAAL,CAAkB6C,aAAlB,CAAgCjC,QAAhC,EAA0CQ,SAA1C,CAAqD,UAACC,SAAD,EAAkC;AACvF,kBAAI,CAACyB,KAAL,GAAazB,SAAb;AACA,kBAAI,CAACY,GAAL,GAAWZ,SAAS,CAAC,CAAD,CAApB;;AACA,kBAAI,CAAChB,UAAL,CAAgB0C,QAAhB,CAAyB,UAAzB,EAAqCC,QAArC,CAA8C,MAAI,CAACF,KAAL,CAAW,CAAX,EAAc,UAAd,CAA9C;;AACA,kBAAI,CAACzC,UAAL,CAAgB0C,QAAhB,CAAyB,cAAzB,EAAyCC,QAAzC,CAAkD,MAAI,CAACF,KAAL,CAAW,CAAX,EAAc,cAAd,CAAlD;;AACAF,mBAAO,CAACK,GAAR,CAAY,MAAI,CAAChB,GAAL,CAASxB,QAArB;AACC,WAND;AAOD,S,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;;;;uCACeyC,c,EAAgB;AAC7B,eAAKC,YAAL,GAAoBC,IAAI,CAACC,SAAL,CAAe;AAAE,qBAAS,KAAKtB,YAAL,CAAkBnB,QAA7B;AAAuC,wBAAYsC;AAAnD,WAAf,CAApB;AACA,eAAKlD,YAAL,WAAyB,KAAKmD,YAA9B,EAA4C/B,SAA5C;AAED;;;yCAEgBvE,C,EAAG;AAClB,cAAM0D,WAAW,GAAc,KAAKF,UAAL,CAAgBU,GAAhB,CAAoB,aAApB,CAA/B;;AACA,cAAIlE,CAAC,CAACyG,MAAF,CAAS5B,OAAb,EAAsB;AACpBnB,uBAAW,CAACgD,IAAZ,CAAiB,IAAI,0DAAJ,CAAgB1G,CAAC,CAACyG,MAAF,CAASE,KAAzB,CAAjB;AACD,WAFD,MAEO;AACL,gBAAIC,CAAC,GAAW,CAAhB;AACAlD,uBAAW,CAACwC,QAAZ,CAAqBW,OAArB,CAA6B,UAACC,IAAD,EAAuB;AAClD,kBAAIA,IAAI,CAACH,KAAL,IAAc3G,CAAC,CAACyG,MAAF,CAASE,KAA3B,EAAkC;AAChCjD,2BAAW,CAACqD,QAAZ,CAAqBH,CAArB;AACA;AACD;;AACDA,eAAC;AACF,aAND,EAFK,CASL;;AACA,iBAAKI,cAAL,CAAoBhH,CAAC,CAACyG,MAAF,CAASE,KAA7B;AACD;AACF,S,CAED;;;;kCACU;AACRlC,kBAAQ,CAACC,MAAT;AACD;;;qCAEY;AACX,cAAMuC,QAAQ,GAAG,KAAKtB,UAAtB,CADW,CAEX;AACA;;AACA,cAAM5B,QAAQ,GAAgB,KAAKP,UAAL,CAAgBU,GAAhB,CAAoB,UAApB,CAA9B;AAEA,eAAKf,YAAL,CAAkB+D,kBAAlB,CAAqC,KAAK1D,UAAL,CAAgBmD,KAArD,EAA4DpC,SAA5D;AACA,6DAAK4C,IAAL,CAAU;AACRC,gBAAI,EAAE,0BADE;AAERC,gBAAI,EAAE,SAFE;AAGRC,6BAAiB,EAAE;AAHX,WAAV;AAOD;;;;;;;uBApLUxC,e,EAAe,2H,EAAA,+H,EAAA,gI,EAAA,mJ;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,c;AAAA,mkD;AAAA;AAAA;;;ACD5B;;AAAkD;AAAA,mBAAY,IAAAH,UAAA,EAAZ;AAAwB,WAAxB;;AAClD;;AACI;;AACE;;AACE;;AACE;;AACF;;AACA;;AA4BE;;AAEE;;AACF;;AACA;;AACA;;AAEA;;AACE;;AACF;;AAEG;;AACD;;AAAsB;;AAAuB;;AAAqB;;AAClE;;AACE;;AACE;;AAIE;;AAWF;;AACA;;AACE;;AAUF;;AACJ;;AACA;;AACA;;AAAsB;;AAAuB;;AAAkB;;AAC7D;;AACA;;AACE;;AACE;;AAIF;;AACF;;AACF;;AACD;;AAGA;;AACC;;AAAuB;;AACrB;;AACA;;AACE;;AACE;;AACE;;AAEE;;AAAgB;;AAAS;;AACzB;;AACE;;AASA;;AACE;;AAEE;AAAA;;AAAA;;AAAA,mBAAS,cAAT;AAAmB,WAAnB;;AAED;;AACH;;AASF;;AACF;;AAKA;;AAA4C;;AAA0B;;AAAsB;;AAE1F;;AAOF;;AAKF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAEE;;AAAsB;;AAAuB;;AAAiB;;AAC5D;;AACA;;AACE;;AACE;;AAKA;;AACI;;AAYJ;;AACJ;;AACA;;AACF;;AACF;;AACA;;AACE;;AAAgC;;AAC9B;;AACE;;AACF;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;;;AAlMI;;AAsCS;;AAAA;;AAIA;;AAAA;;AAYQ;;AAAA;;AAaA;;AAAA;;AAiBA;;AAAA;;AAeY;;AAAA;;AAWR;;AAAA;;AAwBY;;AAAA;;AA+BuB;;AAAA;;;;;;;;;sEDpKjDG,e,EAAe;cAL3B,uDAK2B;eALjB;AACTrE,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE;AAFJ,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC0EkB;;AACE;;AAAiB;;AAAmB;;AAAa;;AAAM;;AACrD;;AAEA;AAAA;;AAAA;;AAAA;AAAA;;AAFA;;AAKF;;AACF;;AACA;;;;;;AARsC;;AAAA;;AACV;;AAAA;;AACxB,iGAAAmE,OAAA;;AADuD;;;;;;;;AAY3D;;AACE;;AAAiB;;AAAmB;;AAAe;;AAAM;;AAEvD;;AAEoD;AAAA;;AAAA;;AAAA;AAAA;;AAFpD;;AAOF;;AAAM;;AACR;;;;;;AAVsC;;AAAA;;AAIX;;AAAA,mGAAAA,OAAA;;AAAvB;;;;;;;;AAcJ;;AACE;;AAAiB;;AAAmB;;AAAe;;AAAM;;AACvD;;AAEoD;AAAA;;AAAA;;AAAA;AAAA;;AAFpD;;AAE0F;;AAAM;;AACpG;;;;;;AAJsC;;AAAA;;AAGX;;AAAA,mGAAAA,OAAA;;AAAvB;;;;;;;;AAoEA;;AAEI;;AAIA;AAAA;;AAAA;;AAAA;AAAA;;AAJA;;AASF;;AAAoC;;AAAa;;AACnD;;;;;;AATyB;;AAAA;;AAA8B;;AAEnD,iGAAAA,OAAA;;AAFA;;AAQK;;AAAA;;AAA6B;;AAAA;;;;QDzK/C0C,wB;AAgCX,wCAAoBvE,EAApB,EAA6CC,cAA7C,EAAqFC,UAArF,EAAqHC,YAArH,EAAwJ;AAAA;;AAAA;;AAApI,aAAAH,EAAA,GAAAA,EAAA;AAAyB,aAAAC,cAAA,GAAAA,cAAA;AAAwC,aAAAC,UAAA,GAAAA,UAAA;AAAgC,aAAAC,YAAA,GAAAA,YAAA;AA7BrH,aAAA4B,QAAA,GAAgC,IAAI,yEAAJ,EAAhC;AACA,aAAAC,eAAA,GAAsC,IAAI,uEAAJ,EAAtC;AACA,aAAAC,cAAA,GAAuC,EAAvC;AAEA,aAAAC,YAAA,GAAe;AACbC,wBAAc,EAAE,IADH;AAEbpB,kBAAQ,EAAE,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CAFG;AAGbG,oBAAU,EAAE;AAHC,SAAf;AAQA,aAAAgB,SAAA,GAAoBhD,IAAI,CAACiD,GAAL,EAApB;AACA,aAAAlC,cAAA,GAAiB,oEAAWC,UAA5B,CAgBwJ,CAhBhH;;AACxC,aAAAkC,OAAA,GAAqB,EAArB;AACA,aAAAC,YAAA,GAA+B,EAA/B;AACA,aAAAC,SAAA,GAAyB,EAAzB;AACA,aAAAC,UAAA,GAA2B,EAA3B;AACA,aAAAN,GAAA,GAAwB,IAAI,2EAAJ,EAAxB;AAQA,aAAAO,UAAA,GAAa,IAAItD,IAAJ,GAAWuD,QAAX,KAAwB,CAArC,CAGwJ,CAEtJ;;AACA1C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,gCAA5C,EAA8EmB,SAA9E,CAAwF,UAAAsB,MAAM,EAAI;AAChG,gBAAI,CAACN,OAAL,GAAeM,MAAf;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAHsJ,CAOtJ;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,wCAAtB,GAAiE,KAAK8B,YAAL,CAAkBnB,QAAzG,EAAmHQ,SAAnH,CAA6H,UAAAsB,MAAM,EAAI;AACrI,gBAAI,CAACL,YAAL,GAAoBK,MAApB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EARsJ,CAYtJ;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,qCAAtB,GAA8D,KAAK8B,YAAL,CAAkBnB,QAAtG,EAAgHQ,SAAhH,CAA0H,UAAAsB,MAAM,EAAI;AAClI,gBAAI,CAACJ,SAAL,GAAiBI,MAAjB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAbsJ,CAiBtJ;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,6CAAtB,GAAsE,KAAK8B,YAAL,CAAkBnB,QAA9G,EAAwHQ,SAAxH,CAAkI,UAAAsB,MAAM,EAAI;AAC1I,gBAAI,CAACH,UAAL,GAAkBG,MAAlB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAlBsJ,CAsBtJ;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,0CAAtB,GAAmE,KAAK8B,YAAL,CAAkBnB,QAA3G,EAAqHQ,SAArH,CAA+H,UAAAsB,MAAM,EAAI;AACvI,gBAAI,CAACZ,cAAL,GAAsBY,MAAtB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAvBsJ,CA6BtJ;;AACA,aAAKtC,UAAL,GAAkB,KAAKR,EAAL,CAAQS,KAAR,CAAc;AAC9BC,qBAAW,EAAE,KAAKV,EAAL,CAAQW,KAAR,CAAc,EAAd,CADiB;AAE9BC,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFoB;AAGhC;AACEC,sBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAJgB;AAK9BC,kBAAQ,EAAE,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CALoB;AAM9BC,sBAAY,EAAE,GANgB,CAMZ;;AANY,SAAd,CAAlB;AAUD;;;;mCAQU;AAEZ,eAAKC,UAAL;AAGE;;;qCAIS;AAAA;;AACR,cAAML,QAAQ,GAAG,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CAAjB;AACA,eAAKf,YAAL,CAAkB6C,aAAlB,CAAgCjC,QAAhC,EAA0CQ,SAA1C,CAAqD,UAACC,SAAD,EAAkC;AACvF,kBAAI,CAACyB,KAAL,GAAazB,SAAb;AACA,kBAAI,CAACY,GAAL,GAAWZ,SAAS,CAAC,CAAD,CAApB;;AACA,kBAAI,CAAChB,UAAL,CAAgB0C,QAAhB,CAAyB,UAAzB,EAAqCC,QAArC,CAA8C,MAAI,CAACF,KAAL,CAAW,CAAX,EAAc,UAAd,CAA9C;;AACA,kBAAI,CAACzC,UAAL,CAAgB0C,QAAhB,CAAyB,cAAzB,EAAyCC,QAAzC,CAAkD,MAAI,CAACF,KAAL,CAAW,CAAX,EAAc,cAAd,CAAlD;;AACAF,mBAAO,CAACK,GAAR,CAAY,MAAI,CAAChB,GAAL,CAASxB,QAArB;AACC,WAND;AAOD,S,CAKD;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;;;;uCACeyC,c,EAAgB;AAC7B,eAAKC,YAAL,GAAoBC,IAAI,CAACC,SAAL,CAAe;AAAE,qBAAS,KAAKtB,YAAL,CAAkBnB,QAA7B;AAAuC,wBAAYsC;AAAnD,WAAf,CAApB;AACA,eAAKlD,YAAL,WAAyB,KAAKmD,YAA9B,EAA4C/B,SAA5C;AAED;;;yCAEgBvE,C,EAAG;AAClB,cAAM0D,WAAW,GAAc,KAAKF,UAAL,CAAgBU,GAAhB,CAAoB,aAApB,CAA/B;;AACA,cAAIlE,CAAC,CAACyG,MAAF,CAAS5B,OAAb,EAAsB;AACpBnB,uBAAW,CAACgD,IAAZ,CAAiB,IAAI,0DAAJ,CAAgB1G,CAAC,CAACyG,MAAF,CAASE,KAAzB,CAAjB;AACD,WAFD,MAEO;AACL,gBAAIC,CAAC,GAAW,CAAhB;AACAlD,uBAAW,CAACwC,QAAZ,CAAqBW,OAArB,CAA6B,UAACC,IAAD,EAAuB;AAClD,kBAAIA,IAAI,CAACH,KAAL,IAAc3G,CAAC,CAACyG,MAAF,CAASE,KAA3B,EAAkC;AAChCjD,2BAAW,CAACqD,QAAZ,CAAqBH,CAArB;AACA;AACD;;AACDA,eAAC;AACF,aAND,EAFK,CASL;;AACA,iBAAKI,cAAL,CAAoBhH,CAAC,CAACyG,MAAF,CAASE,KAA7B;AACD;AACF,S,CAED;;;;kCACU;AACRlC,kBAAQ,CAACC,MAAT;AACD;;;qCAEY;AACX,cAAMuC,QAAQ,GAAG,KAAKtB,UAAtB,CADW,CAEX;AACA;;AACA,cAAM5B,QAAQ,GAAgB,KAAKP,UAAL,CAAgBU,GAAhB,CAAoB,UAApB,CAA9B;AAEA,eAAKf,YAAL,CAAkB+D,kBAAlB,CAAqC,KAAK1D,UAAL,CAAgBmD,KAArD,EAA4DpC,SAA5D;AACA,6DAAK4C,IAAL,CAAU;AACRC,gBAAI,EAAE,0BADE;AAERC,gBAAI,EAAE,SAFE;AAGRC,6BAAiB,EAAE;AAHX,WAAV;AAOD;;;;;;;uBAvKUC,wB,EAAwB,2H,EAAA,+H,EAAA,gI,EAAA,mJ;AAAA,K;;;YAAxBA,wB;AAAwB,0C;AAAA,e;AAAA,c;AAAA,khD;AAAA;AAAA;ACDrC;;AAAkD;AAAA,mBAAY,IAAA5C,UAAA,EAAZ;AAAwB,WAAxB;;AAClD;;AACI;;AACE;;AACE;;AACE;;AACF;;AACA;;AA4BE;;AAEE;;AACF;;AACA;;AACA;;AAEA;;AACE;;AACF;;AAEG;;AACD;;AAAsB;;AAAuB;;AAAqB;;AAClE;;AACE;;AACE;;AAIE;;AAYF;;AACA;;AACE;;AAYF;;AACJ;;AACA;;AACA;;AAAsB;;AAAuB;;AAAkB;;AAC7D;;AACA;;AACE;;AACE;;AAMF;;AACF;;AACF;;AACD;;AAGA;;AACC;;AAAuB;;AACrB;;AACA;;AACE;;AACE;;AACE;;AAEE;;AAAgB;;AAAS;;AACzB;;AACE;;AAUA;;AAGF;;AACF;;AAKA;;AAA4C;;AAA0B;;AAAsB;;AAE1F;;AAOF;;AAKF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAEE;;AAAsB;;AAAuB;;AAAiB;;AAC5D;;AACA;;AACE;;AACE;;AAKA;;AACI;;AAaJ;;AACJ;;AACA;;AACF;;AACF;;AACA;;AACE;;AAAgC;;AAKhC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;;;AA7LI;;AAsCS;;AAAA;;AAIA;;AAAA;;AAYQ;;AAAA;;AAcA;;AAAA;;AAmBA;;AAAA;;AAiBY;;AAAA;;AAYT;;AAAA;;AAYa;;AAAA;;AA+BuB;;AAAA;;;;;;;;;sED9JjD4C,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT9G,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE;AAFJ,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErBrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC0EoB;;AACE;;AAAiB;;AAAmB;;AAAa;;AAAM;;AACrD;;AAEA;AAAA;;AAAA;;AAAA;AAAA;;AAFA;;AAKF;;AACF;;AACA;;;;;;AARsC;;AAAA;;AACV;;AAAA;;AACxB,iGAAAmE,OAAA;;AADuD;;;;;;;;AAY3D;;AACE;;AAAiB;;AAAmB;;AAAe;;AAAM;;AAEvD;;AAEoD;AAAA;;AAAA;;AAAA;AAAA;;AAFpD;;AAOF;;AAAM;;AACR;;;;;;AAVsC;;AAAA;;AAIX;;AAAA,mGAAAA,OAAA;;AAAvB;;;;;;;;AAcJ;;AACE;;AAAiB;;AAAmB;;AAAe;;AAAM;;AACvD;;AAEoD;AAAA;;AAAA;;AAAA;AAAA;;AAFpD;;AAE0F;;AAAM;;AACpG;;;;;;AAJsC;;AAAA;;AAGX;;AAAA,mGAAAA,OAAA;;AAAvB;;;;;;;;AAsEA;;AAEI;;AAIA;AAAA;;AAAA;;AAAA;AAAA;;AAJA;;AASF;;AAAoC;;AAAa;;AACnD;;;;;;AATyB;;AAAA;;AAA8B;;AAEnD,iGAAAA,OAAA;;AAFA;;AAQK;;AAAA;;AAA6B;;AAAA;;;;QD5KjD2C,c;AAgCX,8BAAoBxE,EAApB,EAA6CC,cAA7C,EAAqFC,UAArF,EAAqHC,YAArH,EAAwJ;AAAA;;AAAA;;AAApI,aAAAH,EAAA,GAAAA,EAAA;AAAyB,aAAAC,cAAA,GAAAA,cAAA;AAAwC,aAAAC,UAAA,GAAAA,UAAA;AAAgC,aAAAC,YAAA,GAAAA,YAAA;AA7BrH,aAAA4B,QAAA,GAAgC,IAAI,yEAAJ,EAAhC;AACA,aAAAC,eAAA,GAAsC,IAAI,uEAAJ,EAAtC;AACA,aAAAC,cAAA,GAAuC,EAAvC;AAEA,aAAAC,YAAA,GAAe;AACbC,wBAAc,EAAE,IADH;AAEbpB,kBAAQ,EAAE,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CAFG;AAGbG,oBAAU,EAAE;AAHC,SAAf;AAQA,aAAAgB,SAAA,GAAoBhD,IAAI,CAACiD,GAAL,EAApB;AACA,aAAAlC,cAAA,GAAiB,oEAAWC,UAA5B,CAgBwJ,CAhBhH;;AACxC,aAAAkC,OAAA,GAAqB,EAArB;AACA,aAAAC,YAAA,GAA+B,EAA/B;AACA,aAAAC,SAAA,GAAyB,EAAzB;AACA,aAAAC,UAAA,GAA2B,EAA3B;AACA,aAAAN,GAAA,GAAwB,IAAI,2EAAJ,EAAxB;AAQA,aAAAO,UAAA,GAAa,IAAItD,IAAJ,GAAWuD,QAAX,KAAwB,CAArC,CAGwJ,CAEtJ;;AACA1C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,gCAA5C,EAA8EmB,SAA9E,CAAwF,UAAAsB,MAAM,EAAI;AAChG,gBAAI,CAACN,OAAL,GAAeM,MAAf;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAHsJ,CAOtJ;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,wCAAtB,GAAiE,KAAK8B,YAAL,CAAkBnB,QAAzG,EAAmHQ,SAAnH,CAA6H,UAAAsB,MAAM,EAAI;AACrI,gBAAI,CAACL,YAAL,GAAoBK,MAApB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EARsJ,CAYtJ;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,qCAAtB,GAA8D,KAAK8B,YAAL,CAAkBnB,QAAtG,EAAgHQ,SAAhH,CAA0H,UAAAsB,MAAM,EAAI;AAClI,gBAAI,CAACJ,SAAL,GAAiBI,MAAjB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAbsJ,CAiBtJ;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,6CAAtB,GAAsE,KAAK8B,YAAL,CAAkBnB,QAA9G,EAAwHQ,SAAxH,CAAkI,UAAAsB,MAAM,EAAI;AAC1I,gBAAI,CAACH,UAAL,GAAkBG,MAAlB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAlBsJ,CAsBtJ;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,0CAAtB,GAAmE,KAAK8B,YAAL,CAAkBnB,QAA3G,EAAqHQ,SAArH,CAA+H,UAAAsB,MAAM,EAAI;AACvI,gBAAI,CAACZ,cAAL,GAAsBY,MAAtB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAvBsJ,CA6BtJ;;AACA,aAAKtC,UAAL,GAAkB,KAAKR,EAAL,CAAQS,KAAR,CAAc;AAC9BC,qBAAW,EAAE,KAAKV,EAAL,CAAQW,KAAR,CAAc,EAAd,CADiB;AAE9BC,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFoB;AAGhC;AACEC,sBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAJgB;AAK9BC,kBAAQ,EAAE,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CALoB;AAM9BC,sBAAY,EAAE,GANgB,CAMZ;;AANY,SAAd,CAAlB;AAUD;;;;mCAQU;AAEZ,eAAKC,UAAL;AAGE;;;qCAIS;AAAA;;AACR,cAAML,QAAQ,GAAG,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CAAjB;AACA,eAAKf,YAAL,CAAkB6C,aAAlB,CAAgCjC,QAAhC,EAA0CQ,SAA1C,CAAqD,UAACC,SAAD,EAAkC;AACvF,kBAAI,CAACyB,KAAL,GAAazB,SAAb;AACA,kBAAI,CAACY,GAAL,GAAWZ,SAAS,CAAC,CAAD,CAApB;;AACA,kBAAI,CAAChB,UAAL,CAAgB0C,QAAhB,CAAyB,UAAzB,EAAqCC,QAArC,CAA8C,MAAI,CAACF,KAAL,CAAW,CAAX,EAAc,UAAd,CAA9C;;AACA,kBAAI,CAACzC,UAAL,CAAgB0C,QAAhB,CAAyB,cAAzB,EAAyCC,QAAzC,CAAkD,MAAI,CAACF,KAAL,CAAW,CAAX,EAAc,cAAd,CAAlD;;AACAF,mBAAO,CAACK,GAAR,CAAY,MAAI,CAAChB,GAAL,CAASxB,QAArB;AACC,WAND;AAOD,S,CAKD;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;;;;uCACeyC,c,EAAgB;AAC7B,eAAKC,YAAL,GAAoBC,IAAI,CAACC,SAAL,CAAe;AAAE,qBAAS,KAAKtB,YAAL,CAAkBnB,QAA7B;AAAuC,wBAAYsC;AAAnD,WAAf,CAApB;AACA,eAAKlD,YAAL,WAAyB,KAAKmD,YAA9B,EAA4C/B,SAA5C;AAED;;;yCAEgBvE,C,EAAG;AAClB,cAAM0D,WAAW,GAAc,KAAKF,UAAL,CAAgBU,GAAhB,CAAoB,aAApB,CAA/B;;AACA,cAAIlE,CAAC,CAACyG,MAAF,CAAS5B,OAAb,EAAsB;AACpBnB,uBAAW,CAACgD,IAAZ,CAAiB,IAAI,0DAAJ,CAAgB1G,CAAC,CAACyG,MAAF,CAASE,KAAzB,CAAjB;AACD,WAFD,MAEO;AACL,gBAAIC,CAAC,GAAW,CAAhB;AACAlD,uBAAW,CAACwC,QAAZ,CAAqBW,OAArB,CAA6B,UAACC,IAAD,EAAuB;AAClD,kBAAIA,IAAI,CAACH,KAAL,IAAc3G,CAAC,CAACyG,MAAF,CAASE,KAA3B,EAAkC;AAChCjD,2BAAW,CAACqD,QAAZ,CAAqBH,CAArB;AACA;AACD;;AACDA,eAAC;AACF,aAND,EAFK,CASL;;AACA,iBAAKI,cAAL,CAAoBhH,CAAC,CAACyG,MAAF,CAASE,KAA7B;AACD;AACF,S,CAED;;;;kCACU;AACRlC,kBAAQ,CAACC,MAAT;AACD;;;qCAEY;AACX,cAAMuC,QAAQ,GAAG,KAAKtB,UAAtB,CADW,CAEX;AACA;;AACA,cAAM5B,QAAQ,GAAgB,KAAKP,UAAL,CAAgBU,GAAhB,CAAoB,UAApB,CAA9B;AAEA,eAAKf,YAAL,CAAkB+D,kBAAlB,CAAqC,KAAK1D,UAAL,CAAgBmD,KAArD,EAA4DpC,SAA5D;AACA,6DAAK4C,IAAL,CAAU;AACRC,gBAAI,EAAE,0BADE;AAERC,gBAAI,EAAE,SAFE;AAGRC,6BAAiB,EAAE;AAHX,WAAV;AAOD;;;;;;;uBAvKUE,c,EAAc,2H,EAAA,+H,EAAA,gI,EAAA,mJ;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,kqC;AAAA;AAAA;ACA3B;;AAAkD;AAAA,mBAAY,IAAA7C,UAAA,EAAZ;AAAwB,WAAxB;;AAChD;;AACI;;AACE;;AACE;;AACE;;AACF;;AACA;;AA4BE;;AAEE;;AACF;;AACA;;AACA;;AAEA;;AACE;;AACF;;AAEG;;AACD;;AAAsB;;AAAuB;;AAAqB;;AAClE;;AACE;;AACE;;AAIE;;AAYF;;AACA;;AACE;;AAYF;;AACJ;;AACA;;AACA;;AAAsB;;AAAuB;;AAAkB;;AAC7D;;AACA;;AACE;;AACE;;AAMF;;AACF;;AACF;;AACD;;AAGA;;AACC;;AAAuB;;AACrB;;AACA;;AACE;;AACE;;AACE;;AAuBA;;AAgBF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAEE;;AAAsB;;AAAuB;;AAAiB;;AAC5D;;AACA;;AACE;;AACE;;AAKA;;AACI;;AAaJ;;AACJ;;AACA;;AACF;;AACF;;AACA;;AACE;;AAAgC;;AAKhC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;;;AA/LE;;AAsCW;;AAAA;;AAIA;;AAAA;;AAYQ;;AAAA;;AAcA;;AAAA;;AAmBA;;AAAA;;AAiBY;;AAAA;;AAwBI;;AAAA;;AAiCuB;;AAAA;;;;;;;;;sEDjKnD6C,c,EAAc;cAJ1B,uDAI0B;eAJhB;AACT/G,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE;AAFJ,S;AAIgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa+G,S;AAIP,yBAAqBC,IAArB,EAAgDC,MAAhD,EAA8D;AAAA;;AAAzC,aAAAD,IAAA,GAAAA,IAAA;AAA2B,aAAAC,MAAA,GAAAA,MAAA;AAAkB;;;;sCAEvD;AACT,cAAI,KAAKD,IAAL,CAAUE,eAAV,EAAJ,EAAiC;AAC/B,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,iBAAKD,MAAL,CAAYE,aAAZ,CAA0B,SAA1B;AACA,mBAAO,KAAP;AACD;AACF;;;;;;;uBAbMJ,S,EAAS,0H,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVK,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACRtB;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,mB;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,U;;;;AACK,eAAA3E,UAAA,GAAa,2BAAb;;;;;;;;;;;;;;;;ACDlB;AAAA;;;AAAA;AAAA;AAAA;;QAAa4E,K;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,kB;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,iB;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,Q;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,W;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,Y;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACsKU;;AACE;;AAAgB;;AAAgB;;AAChC;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAQA;;AACE;;AAEE;AAAA;;AAAA;;AAAA,iBAAS,cAAT;AAAmB,SAAnB;;AAED;;AACH;;AACF;;AACF;;;;;;AAZM;;AAAA;;;;;;;;QDpJHC,a;AAqDX,6BAAoBrF,UAApB,EAAoDsF,UAApD,EAAoFb,MAApF,EAAoG;AAAA;;AAAA;;AAAhF,aAAAzE,UAAA,GAAAA,UAAA;AAAgC,aAAAsF,UAAA,GAAAA,UAAA;AAAgC,aAAAb,MAAA,GAAAA,MAAA;AA9C3E,aAAAc,MAAA,GAAS,8DAAT;AAOP,aAAAC,KAAA,GAAiB,EAAjB,CAuCkG,CAtCnG;;AACC,aAAAC,OAAA,GAAsB,EAAtB;AACA,aAAAC,UAAA,GAA4B,EAA5B;AACA,aAAAxF,cAAA,GAAiB,oEAAWC,UAA5B,CAmCkG,CAnC1D;;AACxC,aAAAC,QAAA,GAAmB,EAAnB;AACA,aAAAuF,KAAA,GAAe,IAAI,mDAAJ,EAAf;AACA,aAAAC,OAAA,GAAU,EAAV;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AAIA,aAAAC,SAAA,GAAY,IAAZ;AACA,aAAA/D,YAAA,GAAe;AACXnB,kBAAQ,EAAE,IADC;AAEXmF,eAAK,EAAE,IAFI;AAIXC,cAAI,EAAE,IAJK;AAMXC,iBAAO,EAAE,IANE;AAQXC,uBAAa,EAAE,IARJ;AASXlF,sBAAY,EAAG,IATJ;AAWXmF,0BAAgB,EAAG,IAXR;AAaXC,mBAAS,EAAG;AAbD,SAAf;AAiBF,aAAAC,UAAA,GAAa,kEAAb,CAQoG,CAG9F;;AACAtG,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,sBAA5C,EAAoEmB,SAApE,CAA8E,UAAAsB,MAAM,EAAI;AACpF,gBAAI,CAAC6C,KAAL,GAAa7C,MAAb;AACD,SAFH,EAEK,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFV,EAJ8F,CAS9F;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,2BAA5C,EAAyEmB,SAAzE,CAAmF,UAAAsB,MAAM,EAAI;AACzF,gBAAI,CAAC+C,UAAL,GAAkB/C,MAAlB;AACD,SAFH,EAEK,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFV;AAML;;;;gCA7DiB2D,M,EAAM;AAClBA,gBAAM,CAACC,EAAP,CAAUC,kBAAV,GAA+BC,aAA/B,CAA6CC,YAA7C,CACIJ,MAAM,CAACC,EAAP,CAAUI,IAAV,CAAeC,OAAf,CAAuBC,OAD3B,EAEIP,MAAM,CAACC,EAAP,CAAUC,kBAAV,EAFJ;AAIH;;;mCA0DK,CAEP,C,CAED;;;;kCACO;AACL,eAAKhC,MAAL,CAAYsC,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,S,CAGD;;;;uCACe;AAAA;;AAEb;AACA,cAAG,KAAK/E,YAAL,CAAkBgE,KAAlB,IAAyB,IAAzB,IAAiC,KAAKhE,YAAL,CAAkBiE,IAAlB,IAAwB,IAA5D,EAAkE;AAChE,+DAAKhC,IAAL,CAAU;AACR3G,mBAAK,EAAE,kBADC;AAER4G,kBAAI,EAAE,qCAFE;AAGRC,kBAAI,EAAE;AAHE,aAAV;AAKD,WAND,MAMO;AACL;AACA,iBAAKmB,UAAL,CAAgB0B,YAAhB,CAA6B,KAAKhF,YAAlC,EAAgDX,SAAhD,CACE,UAAA4F,KAAK,EAAI;AACP,iEAAKhD,IAAL,CAAU;AACR3G,qBAAK,EAAE,MAAI,CAAC0E,YAAL,CAAkBgE,KADjB;AAER9B,oBAAI,EAAE,kBAFE;AAGRC,oBAAI,EAAE,SAHE;AAIRC,iCAAiB,EAAG;AAJZ,eAAV,GAKG,MAAI,CAAC8C,OAAL,EALH;AAMD,aARH;AASD;AACF;;;;;;;uBAvGU7B,a,EAAa,gI,EAAA,0I,EAAA,uH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA;AAAA;oEA4Cb,0E,EAAoB,I;;;;;;;;;;;;;;ACrEjC;;AACE;;AACA;;AAEA;;AACE;;AACE;;AAAI;;;;AAAgC;;AACpC;;AACE;;AACE;;AACE;;AAAgC;;AAAI;;AACtC;;AACA;;AACE;;;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAmB;;;;AAA4B;;AAC/C;;AAWE;AAAA;AAAA;;AAXF;;AAaF;;AAEA;;AACE;;AACE;;AACE;;AAAkB;;;;AAA2B;;AAC7C;;AAWE;AAAA;AAAA;;AAXF;;AAgBA;;AAIF;;AACF;;AA8BA;;AACI;;AAAuB;;AAAS;;AAChC;;AAOE;AAAA;AAAA;;AAEA;;AAAkC;;AAAoB;;AACtD;;AAAqB;;AAAI;;AACzB;;AAAsB;;AAAK;;AAC3B;;AAAqB;;AAAI;;AAC3B;;AACJ;;AACA;;AACF;;AAEA;;AACE;;AAkBA;;AAgCA;;AACE;;AAoBF;;AACF;;AAEA;;AACE;;AAGA;;AACA;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA2B;;;;AAAoC;;AAE/D;;AACE;AAAA,mBAAS,IAAA8B,OAAA,QAAT;AAAwB,WAAxB,EAAyB,eAAzB,EAAyB;AAAA;AAAA,WAAzB;;AASD;;AACH;;AAEA;;AACE;;AAAQ;AAAA,mBAAS,IAAAH,YAAA,EAAT;AAAuB,WAAvB;;AACN;;;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACF;;;;;;;;;;AAzNU;;AAAA;;AAIK;;AAAA;;AAGH;;AAAA;;AAUe;;AAAA;;AAMjB;;AAAA;;AAMA;;AAOoB;;AAAA;;AAOhB;;AAAA;;AAKA,qGAA+B,eAA/B,EAA+B,KAA/B,EAA+B,QAA/B,EAA+B,EAA/B;;AAOA;;AAAA;;AA0CA;;AAAA;;AAEQ;;AAAA;;AA6DP;;AAAA;;AAiCoB;;AAAA;;AASzB;;AAAA,8GAAwC,QAAxC,EAAwC,UAAxC;;AAQA;;AAAA;;;;;;;;;;sED/LG3B,a,EAAa;cANzB,uDAMyB;eANf;AACT9H,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE;AAFJ,S;AAMe,Q;;;;;;;;;;gBA4CvB,uD;iBAAU,0E,EAAoB;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AErEjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;QAOa4J,iB;;;;;uBAAAA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,wC;AAAA,e;AAAA,a;AAAA,kW;AAAA;AAAA;ACN9B;;AACE;;AACA;;AAGA;;AACE;;AACE;;AAAI;;AAAa;;AACjB;;AACE;;AACE;;AAA4B;;AAAgC;;AAAI;;AAAI;;AACpE;;AAAuD;;AAAa;;AACtE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACF;;;;AAlDyC;;AAAA;;;;;;;;;sEDJ5BA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACP7J,kBAAQ,EAAE,mBADH;AAEPC,qBAAW,EAAE;AAFN,S;AAKmB,Q;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;QAOa6J,Y;;;;;uBAAAA,Y;AAAY,K;;;YAAZA,Y;AAAY,mC;AAAA,e;AAAA,a;AAAA,kW;AAAA;AAAA;ACNzB;;AACE;;AACA;;AAGA;;AACE;;AACE;;AAAI;;AAAQ;;AACZ;;AACE;;AACE;;AAA4B;;AAAgC;;AAAI;;AAAI;;AACpE;;AAAuD;;AAAQ;;AACjE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACF;;;;AAlDyC;;AAAA;;;;;;;;;sEDJ5BA,Y,EAAY;cALxB,uDAKwB;eALd;AACP9J,kBAAQ,EAAE,cADH;AAEPC,qBAAW,EAAE;AAFN,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzgB;;;;;;AAwGb;;AAIE;;AACF;;;;;;AAHE;;AAEA;;AAAA;;;;;;AAUN;;AACG;;AACH;;;;;;AAGA;;AACE;;AACF;;;;;;;;AAiDE;;AAIE;;AACE;;AACE;;AACF;;AACA;;AAAmB;;AAAsB;;AACzC;;AAAmB;;AAAyB;;AAC5C;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEC;;AACF;;AACH;;AACF;;AAEA;;AACF;;;;;;AAhBM;;AAAA;;AAEiB;;AAAA;;AACA;;AAAA;;;;;;AA0FzB;;AAIE;;AACF;;;;;;AAHE;;AAEA;;AAAA;;;;;;;;AAxCV;;AACE;;AACE;;AACF;;AACA;;AAIE;AAAA;AAAA,iBAAS,kBAAc,aAAd,CAAT;AAAqC,SAArC;;AAEA;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAOA;;AACG;;AAAoD;;AAEvD;;AACE;;AAOE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAyB;;AAAkB;;AAC3C;;AAMF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;;;;;AA/BM;;AAAA;;AAcE;;AAAA;;AAEQ;;AAAA;;AAEN;;AAAA;;;;;;;;;;;;;;;;;;;;;;QDjRD8J,gB;AAgCX,gCAAoBtH,UAApB,EAAmDuH,eAAnD,EACoBxH,cADpB,EAC2D0E,MAD3D,EAEoB+C,YAFpB,EAE0C;AAAA;;AAAA;;AAFtB,aAAAxH,UAAA,GAAAA,UAAA;AAA+B,aAAAuH,eAAA,GAAAA,eAAA;AAC/B,aAAAxH,cAAA,GAAAA,cAAA;AAAuC,aAAA0E,MAAA,GAAAA,MAAA;AACvC,aAAA+C,YAAA,GAAAA,YAAA;AAjCpB,aAAAC,WAAA,GAAc,EAAd;AAEA,aAAA5F,QAAA,GAAiB,IAAI,mDAAJ,EAAjB;AACA,aAAA6F,eAAA,GAA8B,IAAI,+DAAJ,EAA9B;AACO,aAAAnC,MAAA,GAAS,8DAAT;AAUP,aAAAC,KAAA,GAAiB,EAAjB;AACE,aAAAmC,YAAA,GAA+B,EAA/B;AACA,aAAAlC,OAAA,GAAsB,EAAtB;AACA,aAAAC,UAAA,GAA4B,EAA5B;AACA,aAAAtF,QAAA,GAAwB,EAAxB;AACA,aAAAwH,WAAA,GAA6B,EAA7B;AACA,aAAA1H,cAAA,GAAiB,oEAAWC,UAA5B,CAawC,CAbA;;AAKxC,aAAA4F,SAAA,GAAY,IAAZ;AACA,aAAA/D,YAAA,GAAe;AACbC,wBAAc,EAAE,IADH;AAEbpB,kBAAQ,EAAE,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,UAA1C,CAFG;AAGbG,oBAAU,EAAE;AAHC,SAAf;AAUY,aAAK0G,IAAL,GAAY,CACV;AAACC,cAAI,EAAC,SAAN;AAAiBrE,eAAK,EAAC,WAAvB;AAAoC9B,iBAAO,EAAC;AAA5C,SADU,EAEV;AAACmG,cAAI,EAAC,SAAN;AAAiBrE,eAAK,EAAC,YAAvB;AAAqC9B,iBAAO,EAAC;AAA7C,SAFU,EAGV;AAACmG,cAAI,EAAC,SAAN;AAAiBrE,eAAK,EAAC,WAAvB;AAAoC9B,iBAAO,EAAC;AAA5C,SAHU,CAAZ,CAH4B,CAYpC;;AACA3B,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,sBAA5C,EAAoEmB,SAApE,CAA8E,UAAAsB,MAAM,EAAI;AACtF,iBAAI,CAAC6C,KAAL,GAAa7C,MAAb;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAboC,CAgBtC;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,wBAA5C,EAAsEmB,SAAtE,CAAgF,UAAAsB,MAAM,EAAI;AACtF,iBAAI,CAAC8C,OAAL,GAAe9C,MAAf;AACD,SAFH,EAEK,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFV,EAjBsC,CAoBrC;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,6BAA5C,EAA2EmB,SAA3E,CAAqF,UAAAsB,MAAM,EAAI;AAC5F,iBAAI,CAACgF,YAAL,GAAoBhF,MAApB;AACD,SAFF,EAEI,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFT,EArBqC,CAwBtC;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,2BAA5C,EAAyEmB,SAAzE,CAAmF,UAAAsB,MAAM,EAAI;AACzF,iBAAI,CAAC+C,UAAL,GAAkB/C,MAAlB;AACD,SAFH,EAEK,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFV,EAzBsC,CA4BtC;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,+CAAtB,GAAwE,KAAK8B,YAAL,CAAkBnB,QAAhH,EAA0HQ,SAA1H,CAAoI,UAAAsB,MAAM,EAAI;AAC5I,iBAAI,CAACvC,QAAL,GAAgBuC,MAAhB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EA7BsC,CAgCvC;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,yDAAtB,GAAkF,KAAK8B,YAAL,CAAkBnB,QAA1H,EAAoIQ,SAApI,CAA8I,UAAAsB,MAAM,EAAI;AACvJ,iBAAI,CAACiF,WAAL,GAAmBjF,MAAnB;AACA,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR;AAOU;;;;gCAlEG2D,M,EAAM;AAClBA,gBAAM,CAACC,EAAP,CAAUC,kBAAV,GAA+BC,aAA/B,CAA6CC,YAA7C,CACIJ,MAAM,CAACC,EAAP,CAAUI,IAAV,CAAeC,OAAf,CAAuBC,OAD3B,EAEIP,MAAM,CAACC,EAAP,CAAUC,kBAAV,EAFJ;AAIH;;;mCA+DO;AAAA;;AACN,cAAM5F,QAAQ,GAAG,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,UAA1C,CAAjB;AACA,eAAKuG,eAAL,CAAqBQ,SAArB,CAAiClH,QAAjC,EACGQ,SADH,CACc,UAACC,SAAD,EAAqB;AAC9B,mBAAI,CAACO,QAAL,GAAgBP,SAAhB;AACA,mBAAI,CAACO,QAAL,CAAchB,QAAd,GAA2BA,QAA3B;AACAgC,mBAAO,CAACK,GAAR,CAAYrC,QAAZ;AACF,WALH;AAOD;;;kCAGM;AACLU,kBAAQ,CAACC,MAAT;AACD;;;6BAGIwG,O,EAAS;AAAA;;AACZ,eAAKR,YAAL,CAAkBS,IAAlB,CAAuBD,OAAvB,EAAgC;AAACE,0BAAc,EAAE;AAAjB,WAAhC,EAAuEvF,MAAvE,CAA8E9F,IAA9E,CAAmF,UAAC8F,MAAD,EAAY;AAC7F,mBAAI,CAAC8E,WAAL,0BAAmC9E,MAAnC;AACD,WAFD,EAEG,UAACwF,MAAD,EAAY;AACb,mBAAI,CAACV,WAAL,uBAAgC,OAAI,CAACW,gBAAL,CAAsBD,MAAtB,CAAhC;AACD,WAJD;AAKD;;;yCACwBA,M,EAAW;AAClC,cAAIA,MAAM,KAAK,+EAAoBE,GAAnC,EAAwC;AACtC,mBAAO,iBAAP;AACD,WAFD,MAEO,IAAIF,MAAM,KAAK,+EAAoBG,cAAnC,EAAmD;AACxD,mBAAO,2BAAP;AACD,WAFM,MAEA;AACL,mCAAgBH,MAAhB;AACD;AACF;;;wCAGgBI,I,EAAY;AAAA;;AAC1B,cAAG,KAAK1G,QAAL,CAAcmE,KAAd,IAAqB,EAArB,IAA2B,KAAKnE,QAAL,CAAcoE,IAAd,IAAoB,EAA/C,IAAqD,KAAKpE,QAAL,CAAcqE,OAAd,IAAuB,EAA/E,EAAmF;AAClF,+DAAKjC,IAAL,CAAU;AACRC,kBAAI,EAAE,iDADE;AAERC,kBAAI,EAAE,OAFE;AAGRC,+BAAiB,EAAG;AAHZ,aAAV;AAKA,WAND,MAMO;AACN,gBAAIoE,UAAU,GAAG,kCAAjB;AACA,gBAAIC,UAAU,GAAGD,UAAU,CAACE,IAAX,CAAgB,KAAK7G,QAAL,CAAcoE,IAA9B,CAAjB;;AAEA,gBAAGwC,UAAU,IAAE,KAAf,EAAqB;AACnB,iEAAKxE,IAAL,CAAU;AACRC,oBAAI,EAAE,oDADE;AAERC,oBAAI,EAAE,OAFE;AAGRC,iCAAiB,EAAG;AAHZ,eAAV;AAKD,aAND,MAMO;AACL,kBAAIuE,QAAJ;AACAA,sBAAQ,GAAG,KAAKpB,eAAL,CAAqBqB,kBAArB,CAAwC,KAAK/G,QAA7C,CAAX;AACA8G,sBAAQ,CAACtH,SAAT,CAAoB,UAAAC,SAAS,EAAI;AAC/B,mEAAK2C,IAAL,CAAU;AACR3G,uBAAK,EAAE,OAAI,CAACuE,QAAL,CAAcmE,KADb;AAER9B,sBAAI,EAAE,qBAFE;AAGRC,sBAAI,EAAE,SAHE;AAIRC,mCAAiB,EAAG;AAJZ,iBAAV,GAKG,OAAI,CAAC8C,OAAL,EALH;AAOD,eARD;AAUD;AAEF;AAEF;;;6CAMiB;AAAA;;AAEhB,cAAG,KAAKlF,YAAL,CAAkBb,UAAlB,IAA8B,IAAjC,EAAsC;AACrC,+DAAK8C,IAAL,CAAU;AACRC,kBAAI,EAAE,6BADE;AAERC,kBAAI,EAAE,OAFE;AAGRC,+BAAiB,EAAG;AAHZ,aAAV;AAMA,WAPD,MAOO;AAEJ,gBAAIuE,QAAJ;AACAA,oBAAQ,GAAG,KAAKpB,eAAL,CAAqBsB,6BAArB,CAAmD,KAAK7G,YAAxD,CAAX;AACA2G,oBAAQ,CAACtH,SAAT,CAAoB,UAAAC,SAAS,EAAI;AAC/B,iEAAK2C,IAAL,CAAU;AACR3G,qBAAK,EAAE,OAAI,CAAC0E,YAAL,CAAkBb,UADjB;AAER+C,oBAAI,EAAE,kBAFE;AAGRC,oBAAI,EAAE,SAHE;AAIRC,iCAAiB,EAAG;AAJZ,eAAV,GAKG,OAAI,CAAC8C,OAAL,EALH;AAMD,aAPD;AAUH;AACF,S,CAKC;;;;wCACkBrF,Q,EAAuB6B,C,EAAQ;AAAA;;AAEhD,6DAAKO,IAAL,CAAU;AACN3G,iBAAK,qDADC;AAEN4G,gBAAI,EAAE,sCAFA;AAGNC,gBAAI,EAAE,UAHA;AAINC,6BAAiB,EAAE,IAJb;AAKN0E,4BAAgB,EAAE;AALZ,WAAV,EAOGjM,IAPH,CAOS,UAAAyE,SAAS,EAAI;AACpBuB,mBAAO,CAACK,GAAR,CAAY,kBAAZ,EAA+BrB,QAAQ,CAACI,cAAxC;;AACE,gBAAKX,SAAS,CAACmC,KAAf,EAAuB;AACnB,qBAAI,CAACL,YAAL,GAAoBC,IAAI,CAACC,SAAL,CAAe;AAAE,kCAAkBzB,QAAQ,CAACI;AAA7B,eAAf,CAApB;;AACA,qBAAI,CAACsF,eAAL,WAA6B,OAAI,CAACnE,YAAlC,EAAiD/B,SAAjD;;AAEA,iEAAK4C,IAAL,CAAU;AACR3G,qBAAK,EAAEuE,QAAQ,CAACI,cADR;AAERiC,oBAAI,EAAE,oBAFE;AAGRC,oBAAI,EAAE,SAHE;AAIRC,iCAAiB,EAAG;AAJZ,eAAV,GAKG,OAAI,CAAC8C,OAAL,EALH;AAOH;AACF,WArBH;AAsBC;;;;;;;uBA7MQI,gB,EAAgB,gI,EAAA,yI,EAAA,+H,EAAA,uH,EAAA,oI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,gB;AAAA,c;AAAA,mqH;AAAA;AAAA;;;AC/B7B;;AACE;;AACA;;AAEA;;AACE;;AACE;;AAAI;;;;AAAgC;;AACpC;;AACE;;AACE;;AACE;;AAAgC;;AAAI;;AACtC;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AAAM;AAAA;;AAAA;;AAAA,mBAAY,IAAAyB,eAAA,MAAZ;AAA8B,WAA9B;;AACJ;;AACE;;AACE;;AACE;;;;AACA;;AAAuB;;;;AAErB;;AACF;;;;AACA;;AAGA;;AAAuB;;;;AAErB;;AACJ;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAKE;AAAA;AAAA;;AALF;;AAQA;;AACE;;AACE;;AACE;;AACE;;;;AACF;;AACA;;AAQE;AAAA;AAAA;;AARF;;AAUF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;;;AACF;;AACA;;AAaE;AAAA;AAAA;;AAbF;;AAmBA;;AAIF;;AACF;;AACA;;AACE;;AACE;;AACE;;;;AACF;;AAEA;;AAME;AAAA;AAAA;;AACC;;AAAgD;;AAE/C;;AACF;;AAAmB;;AAAE;;AACrB;;AAAmB;;AAAE;;AACrB;;AAAuB;;AAAM;;AAC7B;;AAA0B;;AAAS;;AACrC;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAU;;AACpC;;AAOE;AAAA;AAAA;;AAEA;;AAMF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAEE;;AAKA;;AAIF;;AACF;;AAEA;;AACE;;AACE;;AAAuB;;AAAS;;AAChC;;AAOE;AAAA;AAAA;;AAEA;;AAAkC;;AAAoB;;AACtD;;AAAqB;;AAAI;;AACzB;;AAAsB;;AAAK;;AAC3B;;AAAqB;;AAAI;;AAC3B;;AACF;;AACA;;AACA;;AACF;;AAEA;;AACE;;AACE;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA,mBAAS,IAAAd,IAAA,MAAT;AAAsB,WAAtB;;AAEC;;AACF;;AACH;;AACF;;AAEA;;AACE;;AAuBF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;;;AACF;;AACA;;AACE;;;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA2B;;;;AAEzB;;AACF;;AAEE;AAAA,mBAAS,IAAAd,OAAA,QAAT;AAAwB,WAAxB,EAAyB,eAAzB,EAAyB;AAAA;AAAA,WAAzB;;AASD;;AACH;;AACF;;AACF;;AACF;;AAEA;;AAsDA;;AACF;;;;;;;;;;;;AA3TU;;AAAA;;AAIK;;AAAA;;AAGH;;AAAA;;AAWF;;AAAA;;AACuB;;AAAA;;AAGvB;;AAAA;;AACuB;;AAAA;;AAGA;;AAAA;;AAcvB;;AAAA;;AAOM;;AAAA;;AAMA;;AAAA;;AAIA;;AASA;;AAAA;;AASA;;AAAA;;AAMA,iGAA2B,eAA3B,EAA2B,IAA3B,EAA2B,QAA3B,EAA2B,EAA3B;;AAQA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAEA;;AACS;;AAAA;;AAAwC;;AAAA;;AAoBjD;;AAAA;;AAGE;;AAAA;;AAaD;;AAAA;;AAKA;;AAAA;;AAiBH;;AAAA;;AAEQ;;AAAA;;AAkCN;;AAAA;;AA6BA;;AAAA;;AAEM;;AAAA;;AACN;;AAAA;;AAQqB;;AAAA;;AAI3B;;AAAA,6NAAyD,SAAzD,EAAyD,0BAAzD,EAAyD,QAAzD,EAAyD,UAAzD;;;;;;;;;;sED3NGG,gB,EAAgB;cAR5B,uDAQ4B;eARlB;AACT/J,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE;AAFJ,S;AAQkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC6BU;;AACG;;AAAgB;;;;;;AA0Gb;;AAIE;;AACF;;;;;;AAHE;;AAEA;;AAAA;;;;;;AAUN;;AACG;;AACH;;;;;;AAGA;;AACE;;AACF;;;;;;AA2CE;;AAIE;;AACE;;AACE;;AACF;;AACA;;AAAmB;;AAAsB;;AACzC;;AAAmB;;AAAyB;;AAC5C;;AAGF;;AAEA;;AACF;;;;;;AAVM;;AAAA;;AAEiB;;AAAA;;AACA;;AAAA;;;;;;;;;;;;;;;;;;;;;;QDjLxBwL,yB;AAgCX,yCAAoBhJ,UAApB,EAAmDuH,eAAnD,EACoBxH,cADpB,EAC2D0E,MAD3D,EAEoB+C,YAFpB,EAE0C;AAAA;;AAAA;;AAFtB,aAAAxH,UAAA,GAAAA,UAAA;AAA+B,aAAAuH,eAAA,GAAAA,eAAA;AAC/B,aAAAxH,cAAA,GAAAA,cAAA;AAAuC,aAAA0E,MAAA,GAAAA,MAAA;AACvC,aAAA+C,YAAA,GAAAA,YAAA;AAjCpB,aAAAC,WAAA,GAAc,EAAd;AAEA,aAAA5F,QAAA,GAAiB,IAAI,mDAAJ,EAAjB;AACA,aAAA6F,eAAA,GAA8B,IAAI,+DAAJ,EAA9B;AACO,aAAAnC,MAAA,GAAS,8DAAT;AAUP,aAAAC,KAAA,GAAiB,EAAjB;AACE,aAAAmC,YAAA,GAA+B,EAA/B;AACA,aAAAlC,OAAA,GAAsB,EAAtB;AACA,aAAAC,UAAA,GAA4B,EAA5B;AACA,aAAAtF,QAAA,GAAwB,EAAxB;AACA,aAAAwH,WAAA,GAA6B,EAA7B;AACA,aAAA1H,cAAA,GAAiB,oEAAWC,UAA5B,CAawC,CAbA;;AAKxC,aAAA4F,SAAA,GAAY,IAAZ;AACA,aAAA/D,YAAA,GAAe;AACbC,wBAAc,EAAE,IADH;AAEbpB,kBAAQ,EAAE,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CAFG;AAGbG,oBAAU,EAAE;AAHC,SAAf;AAUY,aAAK0G,IAAL,GAAY,CACV;AAACC,cAAI,EAAC,SAAN;AAAiBrE,eAAK,EAAC,WAAvB;AAAoC9B,iBAAO,EAAC;AAA5C,SADU,EAEV;AAACmG,cAAI,EAAC,SAAN;AAAiBrE,eAAK,EAAC,YAAvB;AAAqC9B,iBAAO,EAAC;AAA7C,SAFU,EAGV;AAACmG,cAAI,EAAC,SAAN;AAAiBrE,eAAK,EAAC,WAAvB;AAAoC9B,iBAAO,EAAC;AAA5C,SAHU,CAAZ,CAH4B,CAYpC;;AACA3B,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,sBAA5C,EAAoEmB,SAApE,CAA8E,UAAAsB,MAAM,EAAI;AACtF,iBAAI,CAAC6C,KAAL,GAAa7C,MAAb;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EAboC,CAgBtC;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,wBAA5C,EAAsEmB,SAAtE,CAAgF,UAAAsB,MAAM,EAAI;AACtF,iBAAI,CAAC8C,OAAL,GAAe9C,MAAf;AACD,SAFH,EAEK,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFV,EAjBsC,CAoBrC;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,6BAA5C,EAA2EmB,SAA3E,CAAqF,UAAAsB,MAAM,EAAI;AAC5F,iBAAI,CAACgF,YAAL,GAAoBhF,MAApB;AACD,SAFF,EAEI,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFT,EArBqC,CAwBtC;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,2BAA5C,EAAyEmB,SAAzE,CAAmF,UAAAsB,MAAM,EAAI;AACzF,iBAAI,CAAC+C,UAAL,GAAkB/C,MAAlB;AACD,SAFH,EAEK,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFV,EAzBsC,CA4BtC;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,+CAAtB,GAAwE,KAAK8B,YAAL,CAAkBnB,QAAhH,EAA0HQ,SAA1H,CAAoI,UAAAsB,MAAM,EAAI;AAC5I,iBAAI,CAACvC,QAAL,GAAgBuC,MAAhB;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR,EA7BsC,CAgCvC;;AACA5C,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,yDAAtB,GAAkF,KAAK8B,YAAL,CAAkBnB,QAA1H,EAAoIQ,SAApI,CAA8I,UAAAsB,MAAM,EAAI;AACvJ,iBAAI,CAACiF,WAAL,GAAmBjF,MAAnB;AACA,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR;AAOU;;;;gCAlEG2D,M,EAAM;AAClBA,gBAAM,CAACC,EAAP,CAAUC,kBAAV,GAA+BC,aAA/B,CAA6CC,YAA7C,CACIJ,MAAM,CAACC,EAAP,CAAUI,IAAV,CAAeC,OAAf,CAAuBC,OAD3B,EAEIP,MAAM,CAACC,EAAP,CAAUC,kBAAV,EAFJ;AAIH;;;mCA+DO;AAAA;;AACN,cAAM5F,QAAQ,GAAG,KAAKd,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,UAA1C,CAAjB;AACA,eAAKuG,eAAL,CAAqBQ,SAArB,CAAiClH,QAAjC,EACGQ,SADH,CACc,UAACC,SAAD,EAAqB;AAC9B,mBAAI,CAACO,QAAL,GAAgBP,SAAhB;AACA,mBAAI,CAACO,QAAL,CAAchB,QAAd,GAA2BA,QAA3B;AACAgC,mBAAO,CAACK,GAAR,CAAY,OAAI,CAACrB,QAAL,CAAcoH,SAA1B;AACF,WALH;AAOD;;;kCAGM;AACL1H,kBAAQ,CAACC,MAAT;AACD;;;6BAGIwG,O,EAAS;AAAA;;AACZ,eAAKR,YAAL,CAAkBS,IAAlB,CAAuBD,OAAvB,EAAgC;AAACE,0BAAc,EAAE;AAAjB,WAAhC,EAAuEvF,MAAvE,CAA8E9F,IAA9E,CAAmF,UAAC8F,MAAD,EAAY;AAC7F,mBAAI,CAAC8E,WAAL,0BAAmC9E,MAAnC;AACD,WAFD,EAEG,UAACwF,MAAD,EAAY;AACb,mBAAI,CAACV,WAAL,uBAAgC,OAAI,CAACW,gBAAL,CAAsBD,MAAtB,CAAhC;AACD,WAJD;AAKD;;;yCACwBA,M,EAAW;AAClC,cAAIA,MAAM,KAAK,+EAAoBE,GAAnC,EAAwC;AACtC,mBAAO,iBAAP;AACD,WAFD,MAEO,IAAIF,MAAM,KAAK,+EAAoBG,cAAnC,EAAmD;AACxD,mBAAO,2BAAP;AACD,WAFM,MAEA;AACL,mCAAgBH,MAAhB;AACD;AACF,S,CAcA;;;;wCACkBtG,Q,EAAuB6B,C,EAAQ;AAAA;;AAEhD,6DAAKO,IAAL,CAAU;AACN3G,iBAAK,qDADC;AAEN4G,gBAAI,EAAE,sCAFA;AAGNC,gBAAI,EAAE,UAHA;AAINC,6BAAiB,EAAE,IAJb;AAKN0E,4BAAgB,EAAE;AALZ,WAAV,EAOGjM,IAPH,CAOS,UAAAyE,SAAS,EAAI;AACpBuB,mBAAO,CAACK,GAAR,CAAY,kBAAZ,EAA+BrB,QAAQ,CAACI,cAAxC;;AACE,gBAAKX,SAAS,CAACmC,KAAf,EAAuB;AACnB,qBAAI,CAACL,YAAL,GAAoBC,IAAI,CAACC,SAAL,CAAe;AAAE,kCAAkBzB,QAAQ,CAACI;AAA7B,eAAf,CAApB;;AACA,qBAAI,CAACsF,eAAL,WAA6B,OAAI,CAACnE,YAAlC,EAAiD/B,SAAjD;;AAEA,iEAAK4C,IAAL,CAAU;AACR3G,qBAAK,EAAEuE,QAAQ,CAACI,cADR;AAERiC,oBAAI,EAAE,oBAFE;AAGRC,oBAAI,EAAE,SAHE;AAIRC,iCAAiB,EAAG;AAJZ,eAAV,GAKG,OAAI,CAAC8C,OAAL,EALH;AAOH;AACF,WArBH;AAsBC;;;;;;;uBAnJQ8B,yB,EAAyB,gI,EAAA,2J,EAAA,+H,EAAA,uH,EAAA,oI;AAAA,K;;;YAAzBA,yB;AAAyB,2C;AAAA,gB;AAAA,c;AAAA,+qF;AAAA;AAAA;AChCtC;;AACE;;AACA;;AAEA;;AACE;;AACE;;AAAI;;;;AAAgC;;AACpC;;AACE;;AACE;;AACE;;AAAgC;;AAAI;;AACtC;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AAGE;;AACE;;AACE;;AACE;;;;AACA;;AAAuB;;;;AAErB;;AACF;;;;AACA;;AAGA;;AAAuB;;;;AAErB;;AACJ;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAKE;AAAA;AAAA;;AALF;;AAQA;;AACE;;AACE;;AACE;;AACE;;;;AACF;;AACA;;AAQE;AAAA;AAAA;;AARF;;AAWF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;;;AACF;;AACA;;AAaE;AAAA;AAAA;;AAbF;;AAkBA;;AAIF;;AACF;;AACA;;AACE;;AACE;;AACE;;;;AACF;;AAEA;;AAME;AAAA;AAAA;;AACC;;AAAgD;;AAE/C;;AACF;;AAAmB;;AAAE;;AACrB;;AAAmB;;AAAE;;AACrB;;AAAuB;;AAAM;;AAC7B;;AAA0B;;AAAS;;AACrC;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAU;;AACpC;;AAOE;AAAA;AAAA;;AAIA;;AAMF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAEE;;AAKA;;AAIF;;AACF;;AAEA;;AACE;;AACE;;AAAuB;;AAAS;;AAChC;;AAOE;AAAA;AAAA;;AAEA;;AAAkC;;AAAoB;;AACtD;;AAAqB;;AAAI;;AACzB;;AAAsB;;AAAK;;AAC3B;;AAAqB;;AAAI;;AAC3B;;AACF;;AACA;;AACA;;AACF;;AAEA;;AACE;;AACE;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AAGF;;AAEA;;AACE;;AAiBF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAIE;;AACE;;;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA2B;;;;AAEzB;;AACF;;AAEE;AAAA,mBAAS,IAAA7B,OAAA,QAAT;AAAwB,WAAxB,EAAyB,eAAzB,EAAyB;AAAA;AAAA,WAAzB;;AAUD;;AACH;;AACF;;AACF;;AAKF;;AACF;;;;;;;;;;AA9PU;;AAAA;;AAIK;;AAAA;;AAGH;;AAAA;;AAWF;;AAAA;;AACuB;;AAAA;;AAGvB;;AAAA;;AACuB;;AAAA;;AAGA;;AAAA;;AAcvB;;AAAA;;AAOM;;AAAA;;AAMA;;AAAA;;AAIA;;AAUA;;AAAA;;AASA;;AAAA;;AAMA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAEA;;AACS;;AAAA;;AAAwC;;AAAA;;AAoBjD;;AAAA;;AAKE;;AAAA;;AAaD;;AAAA;;AAKA;;AAAA;;AAiBH;;AAAA;;AAEQ;;AAAA;;AA4BN;;AAAA;;AAyBM;;AAAA;;AACN;;AAAA;;AAQqB;;AAAA;;AAI3B;;AAAA,6NAAyD,SAAzD,EAAyD,0BAAzD,EAAyD,QAAzD,EAAyD,UAAzD;;;;;;;;;;sEDhNG6B,yB,EAAyB;cARrC,uDAQqC;eAR3B;AACTzL,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE;AAFJ,S;AAQ2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhCtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsKU;;AACE;;AACF;;;;;;AAFkC;;AAChC;;AAAA;;;;;;;;;;;;;;;QDzIC0L,c;AAwCX,8BAAoBlJ,UAApB,EAAmDuH,eAAnD,EACoBxH,cADpB,EAC2D0E,MAD3D,EAEoB+C,YAFpB,EAE0C;AAAA;;AAAA;;AAFtB,aAAAxH,UAAA,GAAAA,UAAA;AAA+B,aAAAuH,eAAA,GAAAA,eAAA;AAC/B,aAAAxH,cAAA,GAAAA,cAAA;AAAuC,aAAA0E,MAAA,GAAAA,MAAA;AACvC,aAAA+C,YAAA,GAAAA,YAAA;AAzCpB,aAAAC,WAAA,GAAc,EAAd;AAEA,aAAA5F,QAAA,GAAoB,IAAI,yDAAJ,EAApB;AAEO,aAAA0D,MAAA,GAAS,8DAAT;AAWL,aAAAnF,QAAA,GAAwB,EAAxB;AACA,aAAAoF,KAAA,GAAiB,EAAjB;AACA,aAAAtF,cAAA,GAAiB,oEAAWC,UAA5B,CAwBwC,CAxBA;;AAKxC,aAAA4F,SAAA,GAAY,IAAZ;AAGA,aAAA/D,YAAA,GAAe;AACbb,oBAAU,EAAE,KAAKpB,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,YAA1C,CADC;AAEbmI,iBAAO,EAAE,IAFI;AAGbC,kBAAQ,EAAE,IAHG;AAIbC,eAAK,EAAG,IAJK;AAKbC,mBAAS,EAAE,IALE;AAMbC,oBAAU,EAAE,IANC;AAObC,gBAAM,EAAE,IAPK;AAQbC,kBAAQ,EAAG,IARE;AASbC,gBAAM,EAAG;AATI,SAAf,CAgBwC,CAErC;;AACC1J,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,sBAA5C,EAAoEmB,SAApE,CAA8E,UAAAsB,MAAM,EAAI;AACtF,iBAAI,CAAC6C,KAAL,GAAa7C,MAAb;AACD,SAFD,EAEG,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFR;AAIO;;;;gCAzCG2D,M,EAAM;AAClBA,gBAAM,CAACC,EAAP,CAAUC,kBAAV,GAA+BC,aAA/B,CAA6CC,YAA7C,CACIJ,MAAM,CAACC,EAAP,CAAUI,IAAV,CAAeC,OAAf,CAAuBC,OAD3B,EAEIP,MAAM,CAACC,EAAP,CAAUC,kBAAV,EAFJ;AAIH;;;mCAwCO;AAAA;;AAEN,cAAMtF,UAAU,GAAG,KAAKpB,cAAL,CAAoBe,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,YAA1C,CAAnB;AACA,eAAKuG,eAAL,CAAqBQ,SAArB,CAAiC5G,UAAjC,EACGE,SADH,CACc,UAACC,SAAD,EAAwB;AACjC,mBAAI,CAACO,QAAL,GAAgBP,SAAhB;AACA,mBAAI,CAACO,QAAL,CAAcV,UAAd,GAA6BA,UAA7B;AAEF,WALH;AAOD;;;8CAGqB;AACpB,eAAKwI,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACD;;;kCAEM;AACLpI,kBAAQ,CAACC,MAAT;AACD;;;6BAIIwG,O,EAAS;AAAA;;AACZ,eAAKR,YAAL,CAAkBS,IAAlB,CAAuBD,OAAvB,EAAgC;AAACE,0BAAc,EAAE;AAAjB,WAAhC,EAAuEvF,MAAvE,CAA8E9F,IAA9E,CAAmF,UAAC8F,MAAD,EAAY;AAC7F,mBAAI,CAAC8E,WAAL,0BAAmC9E,MAAnC;AACD,WAFD,EAEG,UAACwF,MAAD,EAAY;AACb,mBAAI,CAACV,WAAL,uBAAgC,OAAI,CAACW,gBAAL,CAAsBD,MAAtB,CAAhC;AACD,WAJD;AAKD;;;yCACwBA,M,EAAW;AAClC,cAAIA,MAAM,KAAK,+EAAoBE,GAAnC,EAAwC;AACtC,mBAAO,iBAAP;AACD,WAFD,MAEO,IAAIF,MAAM,KAAK,+EAAoBG,cAAnC,EAAmD;AACxD,mBAAO,2BAAP;AACD,WAFM,MAEA;AACL,mCAAgBH,MAAhB;AACD;AACF,S,CAOD;;;;uCACe;AAAA;;AAEb;AACA,cAAG,KAAKnG,YAAL,CAAkBmH,OAAlB,IAA2B,IAA3B,IAAmC,KAAKnH,YAAL,CAAkBqH,KAAlB,IAAyB,IAA5D,IAAoE,KAAKrH,YAAL,CAAkBwH,MAAlB,IAA0B,IAA9F,IAAsG,KAAKxH,YAAL,CAAkByH,QAAlB,IAA4B,IAArI,EAA0I;AACxI,+DAAKxF,IAAL,CAAU;AACR3G,mBAAK,EAAE,kBADC;AAER4G,kBAAI,EAAE,kDAFE;AAGRC,kBAAI,EAAE;AAHE,aAAV;AAKD,WAND,MAMO;AACL;AACA,iBAAKoD,eAAL,CAAqBP,YAArB,CAAkC,KAAKhF,YAAvC,EAAqDX,SAArD,CACE,UAAA4F,KAAK,EAAI;AACP,iEAAKhD,IAAL,CAAU;AACR3G,qBAAK,EAAE,OAAI,CAAC0E,YAAL,CAAkBmH,OADjB;AAERjF,oBAAI,EAAE,kBAFE;AAGRC,oBAAI,EAAE,SAHE;AAIRC,iCAAiB,EAAG;AAJZ,eAAV,GAKG,OAAI,CAAC8C,OAAL,EALH;AAMD,aARH;AASD;AACF;;;wCAKgBqB,I,EAAY;AAAA;;AAC3B1F,iBAAO,CAACK,GAAR,CAAY,KAAKrB,QAAjB;;AACA,cACE,KAAKA,QAAL,CAAcsH,OAAd,IAAuB,EAAvB,IACA,KAAKtH,QAAL,CAAcuH,QAAd,IAAwB,EADxB,IAEA,KAAKvH,QAAL,CAAcwH,KAAd,IAAqB,EAFrB,IAGA,KAAKxH,QAAL,CAAc4H,QAAd,IAAwB,EAHxB,IAIA,KAAK5H,QAAL,CAAcyH,SAAd,IAAyB,EAJzB,IAKA,KAAKzH,QAAL,CAAc2H,MAAd,IAAsB,EANxB,EAOG;AACF,+DAAKvF,IAAL,CAAU;AACRC,kBAAI,EAAE,iDADE;AAERC,kBAAI,EAAE,OAFE;AAGRC,+BAAiB,EAAG;AAHZ,aAAV;AAKA,WAbD,MAaQ;AACA;AACA,gBAAIwF,WAAW,GAAG,+CAAlB;AACA,gBAAIC,WAAW,GAAGD,WAAW,CAAClB,IAAZ,CAAiB,KAAK7G,QAAL,CAAcwH,KAA/B,CAAlB;;AACA,gBAAGQ,WAAW,IAAE,KAAhB,EAAsB;AACpB,iEAAK5F,IAAL,CAAU;AACRC,oBAAI,EAAE,sDADE;AAERC,oBAAI,EAAE,OAFE;AAGRC,iCAAiB,EAAG;AAHZ,eAAV;AAKD,aAND,MAOA;AACA;AACA;AACA,kBAAI0F,cAAc,GAAG,qCAArB;;AACA,gBAAIC,cAAc,GAAGD,cAAc,CAACpB,IAAf,CAAoB,KAAK7G,QAAL,CAAc4H,QAAlC,CAArB;;AACA,gBAAGM,cAAc,IAAE,KAAnB,EAAyB;AACvB,iEAAK9F,IAAL,CAAU;AACRC,oBAAI,EAAE,0GADE;AAERC,oBAAI,EAAE,OAFE;AAGRC,iCAAiB,EAAG;AAHZ,eAAV;AAKD,aAND,MAMO;AACL,kBAAIuE,QAAJ;AACAA,sBAAQ,GAAG,KAAKpB,eAAL,CAAqBqB,kBAArB,CAAwC,KAAK/G,QAA7C,CAAX;AACA8G,sBAAQ,CAACtH,SAAT,CAAoB,UAAAC,SAAS,EAAI;AAC/B,mEAAK2C,IAAL,CAAU;AACR3G,uBAAK,EAAE,OAAI,CAACuE,QAAL,CAAcsH,OADb;AAERjF,sBAAI,EAAE,qBAFE;AAGRC,sBAAI,EAAE,SAHE;AAIRC,mCAAiB,EAAG;AAJZ,iBAAV,GAKG,OAAI,CAAC8C,OAAL,EALH;AAMD,eAPD;AAQD;AAET;AAEF;;;;;;;uBAjLWgC,c,EAAc,gI,EAAA,0I,EAAA,+H,EAAA,uH,EAAA,oI;AAAA,K;;;YAAdA,c;AAAc,yC;AAAA,e;AAAA,c;AAAA,i8D;AAAA;AAAA;AC9B3B;;AACE;;AACA;;AAEA;;AACE;;AACE;;AAAI;;;;AAAgC;;AACpC;;AACE;;AACE;;AACE;;AAAgC;;AAAI;;AACtC;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AAGE;;AACE;;AACE;;AACE;;;;AACA;;AAAuB;;;;AAErB;;AAIJ;;AACF;;AACF;;AAEA;;AACE;;AAMN;;AAQM;;AAEE;;AAIA;;AACE;;AAAqB;;;;AAA8B;;AACnD;;AAWE;AAAA;AAAA;;;;AAXF;;AAaF;;AAGA;;AACI;;AAAsB;;;;AAA+B;;AACrD;;AAQE;AAAA;AAAA;;;;AARF;;AAUF;;AAEV;;AACE;;AACQ;;AACE;;AAAmB;;;;AAA4B;;AAC/C;;AAUE;AAAA;AAAA;;;;AAVF;;AAYF;;AACR;;AAAM;;AACE;;AACE;;AAAsB;;;;AAA+B;;AACrD;;AACA;;AAUE;AAAA;AAAA;;;;AAVF;;AAaA;;AACE;;AACE;;AAMA;AAAA,mBAAS,IAAAc,mBAAA,EAAT;AAA8B,WAA9B;;AACD;;AACD;;AACH;;AACD;;AACV;;AACA;;AACU;;AACA;;AACE;;AAAuB;;;;AAAgC;;AACvD;;AAOE;AAAA;AAAA;;;;AAPF;;AASF;;AAKF;;AACE;;AAAoB;;;;AAA0B;;AAC9C;;AAQE;AAAA;AAAA;;AAEF;;AAGA;;AACF;;AAEA;;AA2BF;;AACF;;AAKF;;AACF;;;;;;;;;;;;AAxMU;;AAAA;;AAIK;;AAAA;;AAGH;;AAAA;;AAWF;;AAAA;;AACuB;;AAAA;;AAgCF;;AAAA;;AAMnB;;AAAA;;AAFA;;AAQA;;AAMsB;;AAAA;;AAGpB;;AAAA;;AAMA;;AAOiB;;AAAA;;AAKjB;;AAAA;;AAFA;;AAKA,kFAAc,SAAd,EAAc,kBAAd;;AAQoB;;AAAA;;AAOpB;;AAAA;;AAFA;;AAOA,qGAA+B,MAA/B,EAA+B,uCAA/B;;AAOE;;AAAA;;AAamB;;AAAA;;AAGrB;;AAAA;;AAKA;;AAQgB;;AAAA;;AAOlB;;AAAA;;AAEA;;AAEM;;AAAA;;;;;;;;;;sEDxILd,c,EAAc;cAR1B,uDAQ0B;eARhB;AACT3L,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE;AAFJ,S;AAQgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9B3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0DY;;AAAyB;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AAUvB;;;;;;;;AAAA;;;;;;AAYA;;;;;;;;AAAA;;;;;;AAcA;;;;;;AAAA;;;;;;;;;;;;;;AAYF;;AAQI;;AAEJ;;;;;;;AATE;;AAOE;;AAAA;;;;;;;;;;;;AAYJ;;AACE;;AACE;;AACE;;AAGG;;AACF;;AACD;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AACF;;AACF;;AACF;;AACF;;;;;;AAZQ;;AAAA;;;;;;;;QDlHPyM,kB;AAiCX,kCAAoBjK,UAApB,EAAoDkK,gBAApD,EAAwF;AAAA;;AAAA;;AAApE,aAAAlK,UAAA,GAAAA,UAAA;AAAgC,aAAAkK,gBAAA,GAAAA,gBAAA;AA/BpD,aAAA9J,QAAA,GAAmB,EAAnB;AACA,aAAAuF,KAAA,GAAe,IAAI,mDAAJ,EAAf;AACA,aAAAC,OAAA,GAAU,EAAV;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACQ,aAAA5F,cAAA,GAAiB,oEAAWC,UAA5B,CA0BgF,CA1BxC;;AAIhD,aAAA4F,SAAA,GAAY,IAAZ;AACA,aAAA/D,YAAA,GAAe;AACb5E,YAAE,EAAE,IADS;AAEb+M,eAAK,EAAE,IAFM;AAGbnE,eAAK,EAAE,IAHM;AAIboE,gBAAM,EAAE,IAJK;AAKbnE,cAAI,EAAE,IALO;AAMboE,cAAI,EAAE,IANO;AAObnE,iBAAO,EAAE,IAPI;AAQboE,gBAAM,EAAE,IARK;AASbnE,uBAAa,EAAE;AATF,SAAf;AAaA,aAAAG,UAAA,GAAa,kEAAb;AASM,aAAKiE,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB;AACE,iBAAI,CAAC1E,IAAL,sBAAgB0E,IAAhB;AACA,iBAAI,CAAC3E,IAAL,GAAY2E,IAAZ;AACH,SAJD;AAOL,O,CAED;;;;;mCACQ;AAAA;;AACN,eAAKD,KAAL,CAAW,UAAAC,IAAI,EAAI;AACf,mBAAI,CAAC1E,IAAL,sBAAgB0E,IAAhB;AACA,mBAAI,CAAC3E,IAAL,GAAY2E,IAAZ;AACD,WAHH;AAID,S,CAED;;;;kCACO;AACHjJ,kBAAQ,CAACC,MAAT;AACH,S,CAED;;;;8BACMiJ,E,EAAI;AACR,cAAGA,EAAH,EAAM;AACJ,gBAAM/N,GAAG,GAAG,IAAIgO,cAAJ,EAAZ;AACAhO,eAAG,CAACuL,IAAJ,CAAS,KAAT,YAAmB,KAAK/H,cAAxB;;AACAxD,eAAG,CAACiO,MAAJ,GAAa,YAAM;AACjBF,gBAAE,CAACpH,IAAI,CAACuH,KAAL,CAAWlO,GAAG,CAACmO,QAAf,CAAD,CAAF;AACD,aAFD;;AAGAnO,eAAG,CAACoO,IAAJ;AACD;AACF,S,CAKA;;;;uCACiBjJ,Q,EAAiB6B,C,EAAQ;AAAA;;AAEzC,6DAAKO,IAAL,CAAU;AACN3G,iBAAK,sDAAyCuE,QAAQ,CAACmE,KAAlD,CADC;AAEN9B,gBAAI,EAAE,sCAFA;AAGNC,gBAAI,EAAE,UAHA;AAINC,6BAAiB,EAAE,IAJb;AAKN0E,4BAAgB,EAAE;AALZ,WAAV,EAOGjM,IAPH,CAOS,UAAAyE,SAAS,EAAI;AAClB,gBAAKA,SAAS,CAACmC,KAAf,EAAuB;AACnB,qBAAI,CAACL,YAAL,GAAoBC,IAAI,CAACC,SAAL,CAAe;AAAE,yBAASzB,QAAQ,CAACmE,KAApB;AAA2B,4BAAYnE,QAAQ,CAAChB;AAAhD,eAAf,CAApB;;AACA,qBAAI,CAACqJ,gBAAL,WAA8B,OAAI,CAAC9G,YAAnC,EAAkD/B,SAAlD;;AAEA,iEAAK4C,IAAL,CAAU;AACR3G,qBAAK,EAAEuE,QAAQ,CAACmE,KADR;AAER9B,oBAAI,EAAE,oBAFE;AAGRC,oBAAI,EAAE,SAHE;AAIRC,iCAAiB,EAAG;AAJZ,eAAV,GAKG,OAAI,CAAC8C,OAAL,EALH;AAOH;AACF,WApBH;AAqBC,S,CAIH;;;;qCACa6D,K,EAAO;AAClB,cAAMC,GAAG,GAAGD,KAAK,CAACxH,MAAN,CAAaE,KAAb,CAAmBwH,WAAnB,EAAZ;AACA,cAAMnF,IAAI,GAAG,KAAKA,IAAL,CAAUoF,MAAV,CAAiB,UAASC,CAAT,EAAY;AACxC,mBAAQA,CAAC,CAACnF,KAAF,CAAQiF,WAAR,GAAsBG,OAAtB,CAA8BJ,GAA9B,MAAuC,CAAC,CAAxC,IAA6CG,CAAC,CAAClF,IAAF,CAAOgF,WAAP,GAAqBG,OAArB,CAA6BJ,GAA7B,MAAsC,CAAC,CAApF,IAAwFG,CAAC,CAACjF,OAAF,CAAU+E,WAAV,GAAwBG,OAAxB,CAAgCJ,GAAhC,MAAyC,CAAC,CAAlI,IAAuI,CAACA,GAAhJ;AACD,WAFY,CAAb,CAFkB,CAKlB;;AACA,eAAKnF,IAAL,GAAYC,IAAZ,CANkB,CAOlB;;AACA,eAAKuF,KAAL,CAAWC,MAAX,GAAoB,CAApB;AACD;;;;;;;uBA7GUrB,kB,EAAkB,gI,EAAA,6I;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA;AAAA;oEAwBlB,0E,EAAoB,I;;;;;;;;;;;;;;ACxCjC;;AACE;;AACA;;AAEA;;AACE;;AACE;;AAAI;;;;AAAgC;;AACpC;;AACE;;AACE;;AACE;;AAAgC;;AAAI;;AACtC;;AACA;;AACE;;;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAEJ;;AACE;;AACE;;AACE;;AACE;;AAIE;AAAA,mBAAS,IAAAsB,YAAA,QAAT;AAA6B,WAA7B;;;;AAJF;;AAMF;;AACF;;AACF;;AACA;;AAEF;;AAEM;;AAUE;;AACE;;AASF;;AACA;;AACE;;AASF;;AACA;;AACE;;AAWF;;AAEA;;AACE;;AAUF;;AAEA;;AACE;;AAkBF;;AAEA;;AACE;;AAuBF;;AACF;;AACF;;AAGF;;AAEA;;AACF;;;;AAlJU;;AAAA;;AAIK;;AAAA;;AAGH;;AAAA;;AAiBF;;AAAA;;AAcF;;AAAA,gFAAY,YAAZ,EAAY,OAAZ,EAAY,MAAZ,EAAY,QAAZ;;AAMgC;;AAAA;;AAWG;;AAAA;;AAWA;;AAAA;;AAcD;;AAAA;;AAaG;;AAAA;;AAqBJ;;AAAA;;;;;;;;;;sEDxG5BtB,kB,EAAkB;cAN9B,uDAM8B;eANpB;AACT1M,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE;AAFJ,S;AAMoB,Q;;;;;;;;gBAwB5B,uD;iBAAU,0E,EAAoB;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AExCjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC2DY;;AAAyB;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AAWzB;;AAEE;AAAA;;AAAA;;AAAA;;AAAA,gDAA+B,QAA/B,IAA2C,IAA3C;AAA+C,SAA/C;;;;AAGA;;;;AACF;;;;;;AALE;;AAIA;;AAAA;;;;;;;;AAEF;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,6CAAmC,OAAnC,EAA4C,YAA5C;AAA0C,SAA1C;;AAHF;;;;;;;;;AAOE,qFAAe,OAAf,EAAe,UAAf;;;;;;AAdF;;AAOA;;;;;;;;AAJE;;AAQA;;AAAA;;;;;;;;AAgBF;;AAEE;AAAA;;AAAA;;AAAA;;AAAA,gDAA+B,OAA/B,IAA0C,IAA1C;AAA8C,SAA9C;;;;AAGA;;AACF;;;;;;AALE;;AAIA;;AAAA;;;;;;;;AAEF;;AAKE;AAAA;;AAAA;;AAAA;AAAA,WAA2B,aAA3B,EAA2B;AAAA;;AAAA;;AAAA;;AAAA,6CAIQ,MAJR,EAIgB,YAJhB;AAIc,SAJzC;;AALF;;;;;;;;;;;AAOE;;AAKA,qFAAe,OAAf,EAAe,gBAAf;;;;;;AAnBF;;AAOA;;;;;;;;AAJE;;AAcA;;AAAA;;;;;;;;AAsBA;;AAEE;AAAA;;AAAA;;AAAA;;AAAA,gDAA+B,UAA/B,IAA6C,IAA7C;AAAiD,SAAjD;;;;AAGA;;AACF;;;;;;AALE;;AAIA;;AAAA;;;;;;;;AAIF;;AAIE;AAAA;;AAAA;;AAAA;;AAAA,gDAA2B,UAA3B,IAAyC,KAAzC;AAA8C,SAA9C,EAA+C,QAA/C,EAA+C;AAAA;;AAAA;;AAAA;;AAAA,6CACjB,SADiB,EACN,YADM;AACR,SADvC;;AAKA;;AAAmB;;AAAE;;AACrB;;AAAmB;;AAAE;;AACrB;;AAAuB;;AAAM;;AAC/B;;;;;;;;;AANE,qFAAe,OAAf,EAAe,UAAf;;;;;;;;;;;;;;AAtBJ;;AAOE;;AAOA;;AAEA;;AAaF;;;;;;;;;AA5BE;;AASE;;AAAA;;AAI0B;;AAAA;;AAK1B;;AAAA;;;;;;;;;;;;AAoBJ;;AACE;;AACE;;AACE;;AAGG;;AACF;;AACD;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AACF;;AACF;;AACF;;AACF;;;;;;AAZQ;;AAAA;;;;;;;;;;;;QD5JPgO,a;AAgCX,6BAAoBxL,UAApB,EAAoDsF,UAApD,EAA4E;AAAA;;AAAA;;AAAxD,aAAAtF,UAAA,GAAAA,UAAA;AAAgC,aAAAsF,UAAA,GAAAA,UAAA;AA9BpD,aAAAlF,QAAA,GAAmB,EAAnB;AACA,aAAAuF,KAAA,GAAe,IAAI,mDAAJ,EAAf;AACA,aAAAC,OAAA,GAAU,EAAV;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACQ,aAAA5F,cAAA,GAAiB,oEAAWC,UAA5B,CAyBoE,CAzB5B;;AAIhD,aAAA4F,SAAA,GAAY,IAAZ;AACA,aAAA/D,YAAA,GAAe;AACbnB,kBAAQ,EAAE,IADG;AAEbmF,eAAK,EAAE,IAFM;AAGboE,gBAAM,EAAE,IAHK;AAIbnE,cAAI,EAAE,IAJO;AAKboE,cAAI,EAAE,IALO;AAMbnE,iBAAO,EAAE,IANI;AAOboE,gBAAM,EAAE,IAPK;AAQbnE,uBAAa,EAAE;AARF,SAAf;AAYA,aAAAG,UAAA,GAAa,kEAAb;AASM,aAAKiE,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB;AACE,iBAAI,CAAC1E,IAAL,sBAAgB0E,IAAhB;AACA,iBAAI,CAAC3E,IAAL,GAAY2E,IAAZ;AACH,SAJD;AAOL,O,CAED;;;;;mCACQ;AAAA;;AACN,eAAKD,KAAL,CAAW,UAAAC,IAAI,EAAI;AACf,mBAAI,CAAC1E,IAAL,sBAAgB0E,IAAhB;AACA,mBAAI,CAAC3E,IAAL,GAAY2E,IAAZ;AACD,WAHH;AAID,S,CAED;;;;kCACO;AACHjJ,kBAAQ,CAACC,MAAT;AACH,S,CAED;;;;8BACMiJ,E,EAAI;AACR,cAAGA,EAAH,EAAM;AACJ,gBAAM/N,GAAG,GAAG,IAAIgO,cAAJ,EAAZ;AACAhO,eAAG,CAACuL,IAAJ,CAAS,KAAT,YAAmB,KAAK/H,cAAxB;;AACAxD,eAAG,CAACiO,MAAJ,GAAa,YAAM;AACjBF,gBAAE,CAACpH,IAAI,CAACuH,KAAL,CAAWlO,GAAG,CAACmO,QAAf,CAAD,CAAF;AACD,aAFD;;AAGAnO,eAAG,CAACoO,IAAJ;AACD;AACF,S,CAED;;;;uCACe;AAAA;;AAEb;AACA,cAAG,KAAK9I,YAAL,CAAkBgE,KAAlB,IAAyB,IAAzB,IAAiC,KAAKhE,YAAL,CAAkBiE,IAAlB,IAAwB,IAAzD,IAAiE,KAAKjE,YAAL,CAAkBkE,OAAlB,IAA2B,IAA/F,EAAoG;AAClG,+DAAKjC,IAAL,CAAU;AACR3G,mBAAK,EAAE,kBADC;AAER4G,kBAAI,EAAE,qCAFE;AAGRC,kBAAI,EAAE;AAHE,aAAV;AAKD,WAND,MAMO;AACL;AACA,iBAAKmB,UAAL,CAAgB0B,YAAhB,CAA6B,KAAKhF,YAAlC,EAAgDX,SAAhD,CACE,UAAA4F,KAAK,EAAI;AACP,iEAAKhD,IAAL,CAAU;AACR3G,qBAAK,EAAE,OAAI,CAAC0E,YAAL,CAAkBgE,KADjB;AAER9B,oBAAI,EAAE,kBAFE;AAGRC,oBAAI,EAAE,SAHE;AAIRC,iCAAiB,EAAG;AAJZ,eAAV,GAKG,OAAI,CAAC8C,OAAL,EALH;AAMD,aARH;AASD;AACF,S,CAED;;;;oCACY6D,K,EAAOU,I,EAAMC,Q,EAAU;AACjC,eAAK9F,OAAL,CAAa8F,QAAQ,GAAG,GAAX,GAAiBD,IAA9B,IAAsC,KAAtC;AACA,eAAK5F,IAAL,CAAU6F,QAAV,EAAoBD,IAApB,IAA4BV,KAAK,CAACxH,MAAN,CAAaE,KAAzC;AACA,eAAKoC,IAAL,sBAAgB,KAAKA,IAArB;AACA,eAAK8F,KAAL,GAAaF,IAAb;AACA,eAAK5K,QAAL,GAAgBkK,KAAK,CAACxH,MAAN,CAAajG,KAA7B;AACA,eAAKsO,KAAL,GAAab,KAAK,CAACxH,MAAN,CAAaE,KAA1B;AACA,eAAKoI,IAAL,GAAY,KAAKF,KAAjB,EAAuB,KAAK9K,QAA5B,EAAqC,KAAK+K,KAA1C;AACA,eAAK3E,KAAL,GAAa5D,IAAI,CAACC,SAAL,CAAe;AAAE,qBAAS,KAAKqI,KAAhB;AAAuB,wBAAY,KAAK9K,QAAxC;AAAkD,qBAAS,KAAK+K;AAAhE,WAAf,CAAb,CARiC,CAUjC;;AACA,cAAIpD,UAAU,GAAG,kCAAjB;AACA,cAAIC,UAAU,GAAGD,UAAU,CAACE,IAAX,CAAgB,KAAKkD,KAArB,CAAjB,CAZiC,CAcjC;;AACA,cAAG,KAAKD,KAAL,IAAc,MAAjB,EAAwB;AACtB;AACA,gBAAGlD,UAAU,IAAE,KAAf,EAAqB;AACnB,iEAAKxE,IAAL,CAAU;AACR3G,qBAAK,EAAE,kBADC;AAER4G,oBAAI,EAAE,0DAFE;AAGRC,oBAAI,EAAE;AAHE,eAAV;AAKA,mBAAK2H,QAAL;AACD,aATqB,CAUtB;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,WAjBD,CAkBA;AAlBA,eAmBK,IAAG,KAAKH,KAAL,IAAc,OAAd,IAAyB,KAAKC,KAAL,CAAWG,MAAX,GAAoB,CAAhD,EAAkD;AAEjD,iEAAK9H,IAAL,CAAU;AACR3G,qBAAK,EAAE,kBADC;AAER4G,oBAAI,EAAE,8DAFE;AAGRC,oBAAI,EAAE;AAHE,eAAV;AAKA,mBAAK2H,QAAL;AAEL,aATI,MASE;AACL;AACA,mBAAKxG,UAAL,CAAgB0G,YAAhB,CAA6B,KAAK/E,KAAlC,EAAyC5F,SAAzC,CACE,UAAA4F,KAAK,EAAI;AACP,mEAAKhD,IAAL,CAAU;AACRC,sBAAI,EAAE,sBADE;AAERC,sBAAI,EAAE,SAFE;AAGRC,mCAAiB,EAAG;AAHZ,iBAAV;AAMD,eARH;AASD;AAEF,S,CAGA;;;;uCACiBvC,Q,EAAiB6B,C,EAAQ;AAAA;;AAEzC,6DAAKO,IAAL,CAAU;AACN3G,iBAAK,yCAA+BuE,QAAQ,CAACmE,KAAxC,CADC;AAEN9B,gBAAI,EAAE,sCAFA;AAGNC,gBAAI,EAAE,UAHA;AAINC,6BAAiB,EAAE,IAJb;AAKN0E,4BAAgB,EAAE;AALZ,WAAV,EAOGjM,IAPH,CAOS,UAAAyE,SAAS,EAAI;AAClB,gBAAKA,SAAS,CAACmC,KAAf,EAAuB;AACnB,qBAAI,CAACL,YAAL,GAAoBC,IAAI,CAACC,SAAL,CAAe;AAAE,yBAASzB,QAAQ,CAACmE,KAApB;AAA2B,4BAAYnE,QAAQ,CAAChB;AAAhD,eAAf,CAApB;;AACA,qBAAI,CAACyE,UAAL,WAAwB,OAAI,CAAClC,YAA7B,EAA4C/B,SAA5C;;AAEA,iEAAK4C,IAAL,CAAU;AACR3G,qBAAK,EAAEuE,QAAQ,CAACmE,KADR;AAER9B,oBAAI,EAAE,oBAFE;AAGRC,oBAAI,EAAE,SAHE;AAIRC,iCAAiB,EAAG;AAJZ,eAAV,GAKG,OAAI,CAAC8C,OAAL,EALH;AAOH;AACF,WApBH;AAqBC,S,CAIH;;;;qCACa6D,K,EAAO;AAClB,cAAMC,GAAG,GAAGD,KAAK,CAACxH,MAAN,CAAaE,KAAb,CAAmBwH,WAAnB,EAAZ;AACA,cAAMnF,IAAI,GAAG,KAAKA,IAAL,CAAUoF,MAAV,CAAiB,UAASC,CAAT,EAAY;AACxC,mBAAQA,CAAC,CAACnF,KAAF,CAAQiF,WAAR,GAAsBG,OAAtB,CAA8BJ,GAA9B,MAAuC,CAAC,CAAxC,IAA6CG,CAAC,CAAClF,IAAF,CAAOgF,WAAP,GAAqBG,OAArB,CAA6BJ,GAA7B,MAAsC,CAAC,CAApF,IAAwFG,CAAC,CAACjF,OAAF,CAAU+E,WAAV,GAAwBG,OAAxB,CAAgCJ,GAAhC,MAAyC,CAAC,CAAlI,IAAuI,CAACA,GAAhJ;AACD,WAFY,CAAb,CAFkB,CAKlB;;AACA,eAAKnF,IAAL,GAAYC,IAAZ,CANkB,CAOlB;;AACA,eAAKuF,KAAL,CAAWC,MAAX,GAAoB,CAApB;AACD;;;;;;;uBA7LUE,a,EAAa,gI,EAAA,0I;AAAA,K;;;YAAbA,a;AAAa,8B;AAAA;AAAA;oEAuBb,0E,EAAoB,I;;;;;;;;;;;;;;ACvCjC;;AACE;;AACA;;AAEA;;AACE;;AACE;;AAAI;;;;AAAgC;;AACpC;;AACE;;AACE;;AACE;;AAAgC;;AAAI;;AACtC;;AACA;;AACE;;;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAEJ;;AACE;;AACE;;AACE;;AACE;;AAIE;AAAA,mBAAS,IAAAD,YAAA,QAAT;AAA6B,WAA7B;;;;AAJF;;AAMF;;AACF;;AACF;;AACA;;AACE;;AAA6H;;AAA+B;;AAC9J;;AACF;;AAEM;;AAUE;;AACE;;AASF;;AAEA;;AACE;;AAwBF;;AAEA;;AACE;;AA6BF;;AAEA;;AACE;;AAqCF;;AAEA;;AACE;;AAuBF;;AACF;;AACF;;AAGF;;AAEA;;AACF;;;;AA5LU;;AAAA;;AAIK;;AAAA;;AAGH;;AAAA;;AAiBF;;AAAA;;AAOyC;;AAAA;;AAQ3C;;AAAA,gFAAY,YAAZ,EAAY,OAAZ,EAAY,MAAZ,EAAY,QAAZ;;AAMsC;;AAAA;;AAYH;;AAAA;;AA2BD;;AAAA;;AAgCG;;AAAA;;AAwCJ;;AAAA;;;;;;;;;;sEDlJ5BC,a,EAAa;cANzB,uDAMyB;eANf;AACTjO,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE;AAFJ,S;AAMe,Q;;;;;;;;gBAuBvB,uD;iBAAU,0E,EAAoB;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AEvCjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWgB;;AACoC;;AAAwB;;;;;;AAa5D;;AACoC;;AAA4B;;;;QDdnEyO,c;AAKX,8BAAqBzH,IAArB,EAAgDC,MAAhD,EAAgE;AAAA;;AAA3C,aAAAD,IAAA,GAAAA,IAAA;AAA2B,aAAAC,MAAA,GAAAA,MAAA;AAHhD,aAAAyH,OAAA,GAAwB,IAAI,kEAAJ,EAAxB;AACA,aAAAC,UAAA,GAAY,KAAZ;AAEmE;;;;mCAExD;AACT,cAAKC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAoC;AAClC,iBAAKH,OAAL,CAAa7C,KAAb,GAAqB+C,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,iBAAKF,UAAL,GAAkB,IAAlB;AACC;AACJ;;;8BAGK5D,I,EAAW;AAAA;;AACZ,cAAIA,IAAI,CAAC+D,OAAT,EAAkB;AAAE;AAAS,WADjB,CAGX;;;AACA,6DAAKrI,IAAL,CAAU;AACRsI,6BAAiB,EAAE,KADX;AAERpI,gBAAI,EAAE,MAFE;AAGRD,gBAAI,EAAE;AAHE,WAAV;AAKA,6DAAKsI,WAAL;AACA,eAAKhI,IAAL,CAAUiI,KAAV,CAAiB,KAAKP,OAAtB,EAAgC7K,SAAhC,CAA4C,UAAAC,SAAS,EAAI;AACvD;AACA,+DAAKoL,KAAL;AACA7J,mBAAO,CAACK,GAAR,CAAY5B,SAAZ,EAHuD,CAIvD;;AACA,gBAAK,OAAI,CAAC6K,UAAV,EAAsB;AACpBC,0BAAY,CAACO,OAAb,CAAqB,OAArB,EAA8B,OAAI,CAACT,OAAL,CAAa7C,KAA3C;AACD,aAPsD,CAQvD;;;AACA,mBAAI,CAAC5E,MAAL,CAAYE,aAAZ,CAA0B,OAA1B;AACD,WAVD,EAUG,UAACiI,GAAD,EAAS;AACV/J,mBAAO,CAACK,GAAR,CAAY0J,GAAG,CAAChK,KAAJ,CAAUA,KAAV,CAAgBiK,OAA5B,EADU,CAEV;;AACA,+DAAK5I,IAAL,CAAU;AACRsI,+BAAiB,EAAE,KADX;AAERpI,kBAAI,EAAE,OAFE;AAGR7G,mBAAK,EAAE,uBAHC;AAIR4G,kBAAI,EAAE0I,GAAG,CAAChK,KAAJ,CAAUA,KAAV,CAAgBiK;AAJd,aAAV;AAMD,WAnBD;AAoBL;;;;;;;uBA7CUZ,c,EAAc,mI,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,s/B;AAAA;AAAA;;;ACZ3B;;AACI;;AACI;;AACI;;AAAM;AAAA;;AAAA;;AAAA,mBAAY,IAAAQ,KAAA,MAAZ;AAAsB,WAAtB;;AAIF;;AACI;;AACJ;;AAEA;;AAEA;;AACI;;AAKO;AAAA;AAAA;;AALP;;AAQA;;AACJ;;AAEA;;AAEA;;AACI;;AAKO;AAAA;AAAA;;AALP;;AAOA;;AACJ;;AAEA;;AACI;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AAEA;;AACI;;AACJ;;AACJ;;AAEA;;AAKJ;;AAEA;;AACI;;AACI;;AACJ;;AACJ;;AAEJ;;AACJ;;AACJ;;AACJ;;;;;;AApDsB;;AAAA;;AAQK;;AAAA;;AAML;;AAAA;;AAQK;;AAAA;;AAOI;;AAAA;;;;;;;;;sED5BlBR,c,EAAc;cAL1B,uDAK0B;eALhB;AACT1O,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaqP,U;;;;;uBAAAA,U;AAAU,K;;;YAAVA,U;AAAU,iC;AAAA,e;AAAA,a;AAAA,6V;AAAA;AAAA;ACNvB;;AACE;;AACA;;AAGA;;AACE;;AACE;;AAAI;;AAAM;;AACV;;AACE;;AACE;;AAA4B;;AAAW;;AAAI;;AAAI;;AAC/C;;AAAuD;;AAAM;;AAC/D;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACF;;;;;;;;;sEDtDaA,U,EAAU;cALtB,uDAKsB;eALZ;AACPvP,kBAAQ,EAAE,YADH;AAEPC,qBAAW,EAAE;AAFN,S;AAKY,Q;;;;;;;;;;;;;;;;;;AEPvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmDc;;AAAyB;;AAAoB;;;;;;AAApB;;AAAA;;;;;;;;AAWzB;;AAEE;AAAA;;AAAA;;AAAA;;AAAA,kDAA+B,UAA/B,IAA6C,IAA7C;AAAiD,SAAjD;;;;AAGA;;;;AACF;;;;;;AALE;;AAIA;;AAAA;;;;;;;;AAEF;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,8CAAmC,SAAnC,EAA8C,aAA9C;AAA4C,SAA5C;;AAHF;;;;;;;;;AAOE,sFAAe,OAAf,EAAe,WAAf;;;;;;AAdF;;AAOA;;;;;;;;AAJE;;AAQA;;AAAA;;;;;;;;AAgBF;;AAEE;AAAA;;AAAA;;AAAA;;AAAA,kDAA+B,WAA/B,IAA8C,IAA9C;AAAkD,SAAlD;;;;AAGL;;AAA0B;;;;AAAyB;;AAChD;;;;;;AALE;;AAIF;;AAAA;;AAAuB;;AAAA;;;;;;;;AAEvB;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,8CAAmC,UAAnC,EAA+C,aAA/C;AAA6C,SAA7C;;AAHF;;;;;;;;;AAOE,sFAAe,OAAf,EAAe,WAAf;;;;;;AAdF;;AAOA;;;;;;;;AAJE;;AAQA;;AAAA;;;;;;;;AAmBF;;AAEE;AAAA;;AAAA;;AAAA;;AAAA,kDAA+B,QAA/B,IAA2C,IAA3C;AAA+C,SAA/C;;;;AAGF;;AAA8B;;;;AAAyB;;AACvD;;;;;;AALE;;AAIC;;AAAA;;AAA2B;;AAAA;;;;;;;;AAE9B;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,8CAAmC,OAAnC,EAA4C,aAA5C;AAA0C,SAA1C;;AAHF;;;;;;;;;AAOE,sFAAe,OAAf,EAAe,WAAf;;;;;;AAdF;;AAOA;;;;;;;;AAJE;;AAQA;;AAAA;;;;;;;;AA0CA;;AAEE;AAAA;;AAAA;;AAAA;;AAAA,kDAA+B,SAA/B,IAA4C,IAA5C;AAAgD,SAAhD;;;;AAGA;;AACF;;;;;;AALE;;AAIA;;AAAA;;;;;;AAaF;;AACI;;AACF;;;;;;AAFgC;;AAC9B;;AAAA;;;;;;;;AAVJ;;AAIE;AAAA;;AAAA;;AAAA;;AAAA,kDAA2B,SAA3B,IAAwC,KAAxC;AAA6C,SAA7C,EAA8C,QAA9C,EAA8C;AAAA;;AAAA;;AAAA;;AAAA,8CAChB,QADgB,EACN,aADM;AACR,SADtC;;AAKF;;AAIA;;;;;;;;;;;AAPE,sFAAe,OAAf,EAAe,WAAf;;AAGM;;AAAA;;;;;;AAlBR;;AAOA;;AAEA;;;;;;;;;AANE;;AAI0B;;AAAA;;AAK1B;;AAAA;;;;;;;;;;;;AAqBJ;;AACE;;AACE;;AACE;;AAGG;;AACF;;AACD;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AACF;;AACF;;AACF;;AACF;;;;;;AAZQ;;AAAA;;;;;;AA+GZ;;AACE;;AACF;;;;;;AAFkC;;AAChC;;AAAA;;;;;;;;QDhTCuP,Y;AAgCX,4BAAoB/M,UAApB,EAAoDsF,UAApD,EAA6E;AAAA;;AAAA;;AAAzD,aAAAtF,UAAA,GAAAA,UAAA;AAAgC,aAAAsF,UAAA,GAAAA,UAAA;AA/BpD,aAAAE,KAAA,GAAiB,EAAjB;AACA,aAAApF,QAAA,GAAsB,EAAtB;AACA,aAAAuF,KAAA,GAAkB,IAAI,yDAAJ,EAAlB;AACA,aAAAC,OAAA,GAAU,EAAV;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAA5F,cAAA,GAAiB,oEAAWC,UAA5B,CAyB6E,CAzBrC;;AAGxC,aAAA4F,SAAA,GAAY,IAAZ;AACA,aAAA/D,YAAA,GAAe;AACbb,oBAAU,EAAE,IADC;AAEbgI,iBAAO,EAAE,IAFI;AAGbC,kBAAQ,EAAE,IAHG;AAIbC,eAAK,EAAG,IAJK;AAKbC,mBAAS,EAAE,IALE;AAMbE,gBAAM,EAAE,IANK;AAObC,kBAAQ,EAAG,IAPE;AAQbC,gBAAM,EAAG;AARI,SAAf;AAYA,aAAApD,UAAA,GAAa,kEAAb;AAUM,aAAKiE,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB;AACE,iBAAI,CAAC1E,IAAL,sBAAgB0E,IAAhB;AACA,iBAAI,CAAC3E,IAAL,GAAY2E,IAAZ;AACH,SAJD,EADuE,CAOvE;;AACAxK,kBAAU,CAACgB,GAAX,CAAsB,KAAKd,cAAL,GAAsB,sBAA5C,EAAoEmB,SAApE,CAA8E,UAAAsB,MAAM,EAAI;AACpF,iBAAI,CAAC6C,KAAL,GAAa7C,MAAb;AACD,SAFH,EAEK,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,SAFV;AAIL,O,CAED;;;;;mCACQ;AAAA;;AACN,eAAK2H,KAAL,CAAW,UAAAC,IAAI,EAAI;AACf,mBAAI,CAAC1E,IAAL,sBAAgB0E,IAAhB;AACA,mBAAI,CAAC3E,IAAL,GAAY2E,IAAZ;AACD,WAHH;AAID,S,CAED;;;;kCACO;AACHjJ,kBAAQ,CAACC,MAAT;AACH,S,CAED;;;;8BACMiJ,E,EAAI;AACR,cAAGA,EAAH,EAAM;AACJ,gBAAM/N,GAAG,GAAG,IAAIgO,cAAJ,EAAZ;AACAhO,eAAG,CAACuL,IAAJ,CAAS,KAAT,YAAmB,KAAK/H,cAAxB;;AACAxD,eAAG,CAACiO,MAAJ,GAAa,YAAM;AACjBF,gBAAE,CAACpH,IAAI,CAACuH,KAAL,CAAWlO,GAAG,CAACmO,QAAf,CAAD,CAAF;AACD,aAFD;;AAGAnO,eAAG,CAACoO,IAAJ;AACD;AACF,S,CAKD;;;;uCACe;AAAA;;AAEb;AACA,cAAG,KAAK9I,YAAL,CAAkBmH,OAAlB,IAA2B,IAA3B,IAAmC,KAAKnH,YAAL,CAAkBqH,KAAlB,IAAyB,IAA5D,IAAoE,KAAKrH,YAAL,CAAkBwH,MAAlB,IAA0B,IAA9F,IAAsG,KAAKxH,YAAL,CAAkByH,QAAlB,IAA4B,IAArI,EAA0I;AACxI,+DAAKxF,IAAL,CAAU;AACR3G,mBAAK,EAAE,kBADC;AAER4G,kBAAI,EAAE,kDAFE;AAGRC,kBAAI,EAAE;AAHE,aAAV;AAKD,WAND,MAMO;AACL;AACA,iBAAKmB,UAAL,CAAgB0B,YAAhB,CAA6B,KAAKhF,YAAlC,EAAgDX,SAAhD,CACE,UAAA4F,KAAK,EAAI;AACP,iEAAKhD,IAAL,CAAU;AACR3G,qBAAK,EAAE,OAAI,CAAC0E,YAAL,CAAkBmH,OADjB;AAERjF,oBAAI,EAAE,kBAFE;AAGRC,oBAAI,EAAE,SAHE;AAIRC,iCAAiB,EAAG;AAJZ,eAAV,GAKG,OAAI,CAAC8C,OAAL,EALH;AAMD,aARH;AASD;AACF,S,CAED;;;;oCACY6D,K,EAAOU,I,EAAMC,Q,EAAU;AACjC,eAAK9F,OAAL,CAAa8F,QAAQ,GAAG,GAAX,GAAiBD,IAA9B,IAAsC,KAAtC;AACA,eAAK5F,IAAL,CAAU6F,QAAV,EAAoBD,IAApB,IAA4BV,KAAK,CAACxH,MAAN,CAAaE,KAAzC;AACA,eAAKoC,IAAL,sBAAgB,KAAKA,IAArB;AACA,eAAK8F,KAAL,GAAaF,IAAb;AACA,eAAKtK,UAAL,GAAkB4J,KAAK,CAACxH,MAAN,CAAajG,KAA/B;AACA,eAAKsO,KAAL,GAAab,KAAK,CAACxH,MAAN,CAAaE,KAA1B;AACA,eAAKoI,IAAL,GAAY,KAAKF,KAAjB,EAAuB,KAAKxK,UAA5B,EAAuC,KAAKyK,KAA5C;AACA,eAAK3E,KAAL,GAAa5D,IAAI,CAACC,SAAL,CAAe;AAAE,qBAAS,KAAKqI,KAAhB;AAAuB,0BAAc,KAAKxK,UAA1C;AAAsD,qBAAS,KAAKyK;AAApE,WAAf,CAAb,CARiC,CAUjC;;AACC,cAAIhC,WAAW,GAAG,wCAAlB;AACA,cAAIC,WAAW,GAAGD,WAAW,CAAClB,IAAZ,CAAiB,KAAKkD,KAAtB,CAAlB,CAZgC,CAcjC;;AACA,cAAG,KAAKD,KAAL,IAAc,OAAjB,EAAyB;AACvB;AACA,gBAAG9B,WAAW,IAAE,KAAhB,EAAsB;AACpB,iEAAK5F,IAAL,CAAU;AACR3G,qBAAK,EAAE,kBADC;AAER4G,oBAAI,EAAE,2DAFE;AAGRC,oBAAI,EAAE;AAHE,eAAV;AAKA,mBAAK2H,QAAL;AACD,aATsB,CAUvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,WAjBD,CAkBA;AAlBA,eAoBA,IAAG,KAAKH,KAAL,IAAc,SAAd,IAA2B,KAAKC,KAAL,CAAWG,MAAX,GAAoB,CAAlD,EAAoD;AAE9C,iEAAK9H,IAAL,CAAU;AACR3G,qBAAK,EAAE,kBADC;AAER4G,oBAAI,EAAE,gEAFE;AAGRC,oBAAI,EAAE;AAHE,eAAV;AAKA,mBAAK2H,QAAL;AAEL,aATD,MAWA,IAAG,KAAKH,KAAL,IAAc,UAAd,IAA4B,KAAKC,KAAL,CAAWG,MAAX,GAAoB,CAAnD,EAAqD;AAC/C,iEAAK9H,IAAL,CAAU;AACR3G,qBAAK,EAAE,kBADC;AAER4G,oBAAI,EAAE,sDAFE;AAGRC,oBAAI,EAAE;AAHE,eAAV;AAKA,mBAAK2H,QAAL;AAEL,aARD,MAQO;AACL;AACA,mBAAKxG,UAAL,CAAgB0G,YAAhB,CAA6B,KAAK/E,KAAlC,EAAyC5F,SAAzC,CACE,UAAA4F,KAAK,EAAI;AACP,mEAAKhD,IAAL,CAAU;AACRC,sBAAI,EAAE,sBADE;AAERC,sBAAI,EAAE,SAFE;AAGRC,mCAAiB,EAAG;AAHZ,iBAAV;AAMD,eARH;AASD;AAEF,S,CAGA;;;;uCACiBvC,Q,EAAoB6B,C,EAAQ;AAAA;;AAE5C,6DAAKO,IAAL,CAAU;AACN3G,iBAAK,yCAA+BuE,QAAQ,CAACsH,OAAxC,CADC;AAENjF,gBAAI,EAAE,sCAFA;AAGNC,gBAAI,EAAE,UAHA;AAINC,6BAAiB,EAAE,IAJb;AAKN0E,4BAAgB,EAAE;AALZ,WAAV,EAOGjM,IAPH,CAOS,UAAAyE,SAAS,EAAI;AAClB,gBAAKA,SAAS,CAACmC,KAAf,EAAuB;AACnB,qBAAI,CAACL,YAAL,GAAoBC,IAAI,CAACC,SAAL,CAAe;AAAE,2BAAWzB,QAAQ,CAACsH,OAAtB;AAA+B,8BAActH,QAAQ,CAACV;AAAtD,eAAf,CAApB;;AACA,qBAAI,CAACmE,UAAL,WAAwB,OAAI,CAAClC,YAA7B,EAA4C/B,SAA5C;;AAEA,iEAAK4C,IAAL,CAAU;AACR3G,qBAAK,EAAEuE,QAAQ,CAACsH,OADR;AAERjF,oBAAI,EAAE,oBAFE;AAGRC,oBAAI,EAAE,SAHE;AAIRC,iCAAiB,EAAG;AAJZ,eAAV,GAMC,OAAI,CAAC8C,OAAL,EAND;AAQH;AACF,WArBH;AAsBC,S,CAIH;;;;qCACa6D,K,EAAO;AAClB,cAAMC,GAAG,GAAGD,KAAK,CAACxH,MAAN,CAAaE,KAAb,CAAmBwH,WAAnB,EAAZ;AACA,cAAMnF,IAAI,GAAG,KAAKA,IAAL,CAAUoF,MAAV,CAAiB,UAASC,CAAT,EAAY;AACxC,mBAAQA,CAAC,CAAChC,OAAF,CAAU8B,WAAV,GAAwBG,OAAxB,CAAgCJ,GAAhC,MAAyC,CAAC,CAA1C,IAA+CG,CAAC,CAAC/B,QAAF,CAAW6B,WAAX,GAAyBG,OAAzB,CAAiCJ,GAAjC,MAA0C,CAAC,CAA1F,IAA+FG,CAAC,CAAC9B,KAAF,CAAQ4B,WAAR,GAAsBG,OAAtB,CAA8BJ,GAA9B,MAAuC,CAAC,CAAvI,IAA4I,CAACA,GAArJ;AACD,WAFY,CAAb,CAFkB,CAKlB;;AACA,eAAKnF,IAAL,GAAYC,IAAZ,CANkB,CAOlB;;AACA,eAAKuF,KAAL,CAAWC,MAAX,GAAoB,CAApB;AACD;;;;;;;uBAhNUyB,Y,EAAY,gI,EAAA,0I;AAAA,K;;;YAAZA,Y;AAAY,mC;AAAA;AAAA;oEAsBZ,0E,EAAoB,I;;;;;;;;;;;;;;ACvCjC;;AACI;;AACA;;AAEA;;AACE;;AACE;;AAAI;;;;AAA+B;;AACnC;;AACE;;AACE;;AACE;;AAAgC;;AAAI;;AACtC;;AACA;;AACE;;;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAIE;AAAA,mBAAS,IAAAxB,YAAA,QAAT;AAA6B,WAA7B;;;;AAJF;;AAMF;;AACF;;AAEA;;AAUE;;AACE;;AASF;;AAEA;;AACE;;AAwBF;;AAEA;;AACE;;AAwBF;;AAKA;;AACE;;AAwBF;;AA4BA;;AACE;;AA+BF;;AAEA;;AACE;;AAuBF;;AACF;;AACF;;AACA;;AAEE;;AACE;;AAAqB;;;;AAA8B;;AACnD;;AAWE;AAAA;AAAA;;;;AAXF;;AAaF;;AAGA;;AACI;;AAAsB;;;;AAA+B;;AACrD;;AAQE;AAAA;AAAA;;;;AARF;;AAUF;;AAGA;;AACE;;AAAmB;;;;AAA4B;;AAC/C;;AAUE;AAAA;AAAA;;;;AAVF;;AAYF;;AAGA;;AACE;;AAAuB;;;;AAAgC;;AACvD;;AAOE;AAAA;AAAA;;;;AAPF;;AASF;;AAGA;;AACE;;AAAsB;;;;AAA+B;;AACrD;;AAUE;AAAA;AAAA;;;;AAVF;;AAYF;;AAEF;;AACE;;AAAoB;;;;AAA0B;;AAC9C;;AAQE;AAAA;AAAA;;AAEF;;AAGA;;AACF;;AAEA;;AACE;;AAAQ;AAAA,mBAAS,IAAAvE,YAAA,EAAT;AAAuB,WAAvB;;AACN;;;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACF;;;;;;;;;;;;AAzUU;;AAAA;;AAIK;;AAAA;;AAGH;;AAAA;;AAcA;;AAAA;;AAUJ;;AAAA,gFAAY,YAAZ,EAAY,OAAZ,EAAY,MAAZ,EAAY,QAAZ;;AAMwC;;AAAA;;AAYH;;AAAA;;AA2BC;;AAAA;;AA8BH;;AAAA;;AAqDF;;AAAA;;AAkCA;;AAAA;;AA8BZ;;AAAA;;AAMnB;;AAAA;;AAFA;;AAQA;;AAMsB;;AAAA;;AAGpB;;AAAA;;AAMA;;AAMiB;;AAAA;;AAKjB;;AAAA;;AAFA;;AAKA,kFAAc,SAAd,EAAc,sBAAd;;AASqB;;AAAA;;AAGrB;;AAAA;;AAKA;;AAMoB;;AAAA;;AAMpB;;AAAA;;AAFA;;AAOA;;AAKgB;;AAAA;;AAOlB;;AAAA;;AAEA;;AAEM;;AAAA;;AAQN;;AAAA;;;;;;;;;;sEDvTC+F,Y,EAAY;cANxB,uDAMwB;eANd;AACTxP,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE;AAFJ,S;AAMc,Q;;;;;;;;gBAsBtB,uD;iBAAU,0E,EAAoB;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AEvCjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASawP,W;AAIX,2BAAoBhN,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAFZ,aAAAE,cAAA,GAAiB,oEAAWC,UAA5B,CAEoC,CAFI;AAEF,O,CAI9C;;;;;kCACWgB,U,EAAU;AACjB,iBAAO,KAAKnB,UAAL,CAAgBgB,GAAhB,WAAwB,KAAKd,cAA7B,mDAAqFiB,UAArF,EAAP;AACH,S,CAED;;;;sCACeA,U,EAAU;AACvB,iBAAO,KAAKnB,UAAL,CAAgBgB,GAAhB,WAAwB,KAAKd,cAA7B,mDAAqFiB,UAArF,EAAP;AACD;;;qCAEYa,Y,EAAc;AACvBa,iBAAO,CAACK,GAAR,CAAYG,IAAI,CAACC,SAAL,CAAetB,YAAf,CAAZ;AACA,iBAAO,KAAKhC,UAAL,CAAgBiN,IAAhB,WAAwB,KAAK/M,cAA7B,+BAAuEmD,IAAI,CAACC,SAAL,CAAetB,YAAf,CAAvE,CAAP;AACH;;;2CAGkBkL,O,EAAiB;AAClC,cAAMC,WAAW,GAAG,MAAH,OAAG,CAAH,EAAG,EACbD,OADa,CAApB;AAGA,iBAAOC,WAAW,CAAChM,UAAnB;AACA,iBAAO,KAAKnB,UAAL,CAAgBiN,IAAhB,WAAwB,KAAK/M,cAA7B,wCAAgFgN,OAAhF,CAAP;AACD;;;qCAEYjG,K,EAAK;AAChBpE,iBAAO,CAACK,GAAR,CAAY+D,KAAZ;AACA,iBAAO,KAAKjH,UAAL,CAAgBiN,IAAhB,WAAwB,KAAK/M,cAA7B,gCAAwE+G,KAAxE,CAAP;AAED;;;gCAEM7D,Y,EAAY;AACjBP,iBAAO,CAACK,GAAR,CAAYE,YAAZ;AACA,iBAAO,KAAKpD,UAAL,CAAgBiN,IAAhB,WAAwB,KAAK/M,cAA7B,iCAAwEkD,YAAxE,CAAP;AACD;;;;;;;uBAzCU4J,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVpI,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQawI,U;AAIX,0BAAoBpN,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAFZ,aAAAE,cAAA,GAAiB,oEAAWC,UAA5B,CAEoC,CAFI;AAEF;;;;qCAEjC6B,Y,EAAc;AACvBa,iBAAO,CAACK,GAAR,CAAYG,IAAI,CAACC,SAAL,CAAetB,YAAf,CAAZ;AACA,iBAAO,KAAKhC,UAAL,CAAgBiN,IAAhB,WAAwB,KAAK/M,cAA7B,+BAAuEmD,IAAI,CAACC,SAAL,CAAetB,YAAf,CAAvE,CAAP;AACH;;;qCAEYiF,K,EAAK;AAChBpE,iBAAO,CAACK,GAAR,CAAY+D,KAAZ;AACA,iBAAO,KAAKjH,UAAL,CAAgBiN,IAAhB,WAAwB,KAAK/M,cAA7B,gCAAwE+G,KAAxE,CAAP;AAED;;;gCAEM7D,Y,EAAY;AACjBP,iBAAO,CAACK,GAAR,CAAYE,YAAZ;AACA,iBAAO,KAAKpD,UAAL,CAAgBiN,IAAhB,WAAwB,KAAK/M,cAA7B,iCAAwEkD,YAAxE,CAAP;AACD;;;;;;;uBApBUgK,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVxI,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;ACRvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASayI,W;AAOX;AAEA;AAIA,2BAAqB1P,IAArB,EAAqC;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAXb,aAAA2P,GAAA,GAAM,oDAAN;AACA,aAAAC,MAAA,GAAS,yCAAT;AAYN,aAAKC,SAAL;AACD;;;;iCAGK,CAEL;;;8BAEMtB,O,EAAqB;AAAA;;AAC1B,cAAMuB,QAAQ,GAAG;AACfpE,iBAAK,EAAE6C,OAAO,CAAC7C,KADA;AAEfI,oBAAQ,EAAEyC,OAAO,CAACzC,QAFH;AAGfiE,6BAAiB,EAAE;AAHJ,WAAjB;AAMA,iBAAO,KAAK/P,IAAL,CAAUsP,IAAV,WACF,KAAKK,GADH,qCACkC,KAAKC,MADvC,GAELE,QAFK,EAGLE,IAHK,CAIL,2DAAM,UAAArM,SAAS,EAAI;AACX,mBAAI,CAACsM,YAAL,CAAoBtM,SAAS,CAAC,SAAD,CAA7B;;AACA,mBAAOA,SAAP;AACP,WAHD,CAJK,CAAP;AAUD;;;qCAEY4K,O,EAAqB;AAAA;;AAChC,cAAMuB,QAAQ,GAAG;AACfpE,iBAAK,EAAE6C,OAAO,CAAC7C,KADA;AAEfI,oBAAQ,EAAEyC,OAAO,CAACzC,QAFH;AAGfiE,6BAAiB,EAAE;AAHJ,WAAjB;AAMA,iBAAO,KAAK/P,IAAL,CAAUsP,IAAV,WACF,KAAKK,GADH,yBACsB,KAAKC,MAD3B,GAELE,QAFK,EAGLE,IAHK,CAIH,2DAAM,UAAArM,SAAS,EAAI;AACX,mBAAI,CAACsM,YAAL,CAAoBtM,SAAS,CAAC,SAAD,CAA7B;;AACA,mBAAOA,SAAP;AACP,WAHD,CAJG,CAAP;AASD;;;qCAGqBuM,O,EAAe;AACjC,eAAKC,SAAL,GAAiBD,OAAjB;AACAzB,sBAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BkB,OAA9B;AACH;;;oCAGQ;AACP,cAAIzB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAoC;AAClC,iBAAKyB,SAAL,GAAiB1B,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAjB;AACD,WAFD,MAEO;AACL,iBAAKyB,SAAL,GAAiB,EAAjB;AACD;;AACD,iBAAO,KAAKA,SAAZ;AACD;;;0CAEc;AACX,iBAAO,KAAKA,SAAL,CAAe/B,MAAf,GAAwB,CAA/B;AACH;;;;;;;uBA9EUsB,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAHV;;;;;sEAGDA,W,EAAW;cAJvB,wDAIuB;eAJZ;AACVzI,oBAAU,EAAE;AADF,S;AAIY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMamJ,W;AASX,2BAAqB/N,UAArB,EAA6C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAPJ,aAAAgO,OAAA,GAAU,kDAAV;AAEjB,aAAAC,UAAA,GAAuC,IAAI,oDAAJ,CAA6B,EAA7B,CAAvC;AAK+C;;;;wCAM/B;AACd,iBAAO,KAAKC,UAAZ;AACD;AAED;;;;uCACY;AAAA;;AACV,eAAKlO,UAAL,CAAgBgB,GAAhB,CAA6B,KAAKgN,OAAlC,EAA2C3M,SAA3C,CAAqD,UAAAmJ,IAAI,EAAI;AACzD,mBAAI,CAACyD,UAAL,CAAgBE,IAAhB,CAAqB3D,IAArB;AACD,WAFH,EAGE,UAAC5H,KAAD,EAA8B;AAC9BC,mBAAO,CAACK,GAAR,CAAaN,KAAK,CAACkF,IAAN,GAAa,GAAb,GAAmBlF,KAAK,CAACiK,OAAtC;AACC,WALH;AAMD,S,CAED;;;;iCACUlH,K,EAAY;AACpB,eAAKuI,UAAL,GAAkBvI,KAAlB;AACD;;;oCAEYA,K,EAAY;AACvB,eAAKuI,UAAL,GAAkBvI,KAAlB;AACD;;;oCAEYvI,E,EAAU;AACrByF,iBAAO,CAACK,GAAR,CAAY9F,EAAZ;AACD;;;4BA7BO;AACN,iBAAO,KAAK6Q,UAAL,CAAgBxK,KAAvB;AACD;;;;;;;uBAbUsK,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW;;;;;sEAAXA,W,EAAW;cADvB;AACuB,Q;;;;;;;;;;;;;;;;;;;;;;ACJxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaK,c;AAUL,8BAAqBzQ,IAArB,EAAuC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AARjB,aAAAyC,QAAA,GAAmB,EAAnB,CAQmC,CAP1C;AAEG;;AACQ,aAAAkN,GAAA,GAAM,gCAAN,CAI+B,CACnC;AACA;AACA;AACA;AACA;AACH,O,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;2CACmBJ,O,EAAc;AAE7B,cAAMC,WAAW,GAAG,MAAH,OAAG,CAAH,EAAG,EACbD,OADa,CAApB;AAGA,iBAAOC,WAAW,CAACtM,QAAnB;AAEA,iBAAO,KAAKlD,IAAL,CAAUsP,IAAV,WAAkB,KAAKK,GAAvB,mCAA0DJ,OAA1D,CAAP;AAEH;;;sDAG6BlL,Y,EAAc;AACxCa,iBAAO,CAACK,GAAR,CAAYG,IAAI,CAACC,SAAL,CAAetB,YAAf,CAAZ;AACA,iBAAO,KAAKrE,IAAL,CAAUsP,IAAV,WAAkB,KAAKK,GAAvB,uCAA8DjK,IAAI,CAACC,SAAL,CAAetB,YAAf,CAA9D,CAAP;AACH,S,CAID;;;;kCACWnB,Q,EAAe;AACtB,iBAAO,KAAKlD,IAAL,CAAUqD,GAAV,WAAkB,KAAKsM,GAAvB,4CAA6DzM,QAA7D,EAAP;AACH;;;gCAGMuC,Y,EAAY;AACfP,iBAAO,CAACK,GAAR,CAAYE,YAAZ;AACA,iBAAO,KAAKzF,IAAL,CAAUsP,IAAV,WAAkB,KAAKK,GAAvB,wCAA8DlK,YAA9D,CAAP;AACD;;;;;;;uBA1DEgL,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBALR;;;;;sEAKNA,c,EAAc;cAP1B,wDAO0B;eANvB;AACIxJ,oBAAU,EAAC;AADf,S;AAMuB,Q;;;;;;;;;;;;;;;;;;;;;;ACd3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcayJ,uB;AAUL,uCAAqB1Q,IAArB,EAAuC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AARjB,aAAAyC,QAAA,GAAmB,EAAnB,CAQmC,CAP1C;AAEG;;AACQ,aAAAkN,GAAA,GAAM,gCAAN,CAI+B,CACnC;AACA;AACA;AACA;AACA;AACH,O,CAID;;;;;kCACWlQ,E,EAAS;AAChB,iBAAO,KAAKO,IAAL,CAAUqD,GAAV,WAAkB,KAAKsM,GAAvB,sCAAuDlQ,EAAvD,EAAP;AACH;;;gCAGMgG,Y,EAAY;AACfP,iBAAO,CAACK,GAAR,CAAYE,YAAZ;AACA,iBAAO,KAAKzF,IAAL,CAAUsP,IAAV,WAAkB,KAAKK,GAAvB,wCAA8DlK,YAA9D,CAAP;AACD;;;;;;;uBA7BEiL,uB,EAAuB,uH;AAAA,K;;;aAAvBA,uB;AAAuB,eAAvBA,uBAAuB,K;AAAA,kBALjB;;;;;sEAKNA,uB,EAAuB;cAPnC,wDAOmC;eANhC;AACIzJ,oBAAU,EAAC;AADf,S;AAMgC,Q;;;;;;;;;;;;;;;;;;;;;;AChBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa0J,gB;AAIX,gCAAoBtO,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAFZ,aAAAE,cAAA,GAAiB,oEAAWC,UAA5B,CAEoC,CAFI;AAEF;;;;gCAKvCiD,Y,EAAY;AACjBP,iBAAO,CAACK,GAAR,CAAYE,YAAZ;AACA,iBAAO,KAAKpD,UAAL,CAAgBiN,IAAhB,WAAwB,KAAK/M,cAA7B,2CAAkFkD,YAAlF,CAAP;AACD;;;;;;;uBAZUkL,gB,EAAgB,uH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACV1J,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;ACR7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa2J,mB;AAIX,mCAAoBvO,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAFZ,aAAAE,cAAA,GAAiB,oEAAWC,UAA5B,CAEoC,CAFI;AAEF;;;;2CAE3B6B,Y,EAAc;AAC7Ba,iBAAO,CAACK,GAAR,CAAYG,IAAI,CAACC,SAAL,CAAetB,YAAf,CAAZ;AACA,iBAAO,KAAKhC,UAAL,CAAgBiN,IAAhB,WAAwB,KAAK/M,cAA7B,mCAA2EmD,IAAI,CAACC,SAAL,CAAetB,YAAf,CAA3E,CAAP;AACH,S,CAED;;;;oCACqBnB,Q,EAAe;AAC1B,iBAAO,KAAKb,UAAL,CAAgBgB,GAAhB,WAAwB,KAAKd,cAA7B,qDAAuFW,QAAvF,EAAP;AACH;;;sCAEQA,Q,EAAQ;AACrB,iBAAO,KAAKb,UAAL,CAAgBgB,GAAhB,WAAwB,KAAKd,cAA7B,mDAAqFW,QAArF,EAAP;AAED,S,CAGH;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;gCAGOuC,Y,EAAY;AACjBP,iBAAO,CAACK,GAAR,CAAYE,YAAZ;AACA,iBAAO,KAAKpD,UAAL,CAAgBiN,IAAhB,WAAwB,KAAK/M,cAA7B,wCAA+EkD,YAA/E,CAAP;AACD;;;;;;;uBArCYmL,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACV3J,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;ACThC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;AACA;;;AAEO,QAAM4J,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;;;;;;;;;;;;;;;;ACLP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA9B,GAAG;AAAA,aAAI/J,OAAO,CAACK,GAAR,CAAY0J,GAAZ,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'check';\n\n\n\n\n}\n","<div class=\"container-fluid\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { routes } from './app.routes';\r\n//import { AppRoutingModule } from './app.routes';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { DataService } from './services/data.service';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { HomeComponent } from './pages/home.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { BuscadorComponent } from './components/buscador/buscador.component';\r\n\r\nimport { PersonasPage } from './pages/personas.pages';\r\n\r\nimport { DescargaPage } from './pages/descarga.pages';\r\nimport { ConfiguracionPage } from './pages/configuracion.pages';\r\nimport { PerfilPage } from './pages/perfil.pages';\r\nimport { DetalleComponent } from './pages/detalle.component';\r\n\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\n\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\r\nimport { AltaComponent } from './pages/alta.component';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { NgxFullCalendarModule } from 'ngx-fullcalendar';\r\nimport { CheckComponent } from './components/periodicidad/check.component';\r\nimport { AccionComponent } from './components/periodicidad/accion.component';\r\nimport { AccionHistoricoComponent } from './components/periodicidad/accionhistorico.component';\r\nimport { HistoricoComponent } from './pages/historico.component';\r\nimport { DetalleHistoricoComponent } from './pages/detallehistorico.component';\r\nimport { DetallePersona } from './pages/detallepersona.component';\r\nimport { ModimagenComponent } from './components/imagen/modimagen.component';\r\n\r\n\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { registerLocaleData } from '@angular/common';\r\n\r\n\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\nCheckComponent,\r\n    HomeComponent,\r\n    DetalleComponent,\r\n    LoginComponent,\r\n    DetalleHistoricoComponent,\r\n  AccionComponent,\r\n  ModimagenComponent,\r\n  AccionHistoricoComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    MenuComponent,\r\n    BuscadorComponent,\r\n    PersonasPage,\r\nHistoricoComponent,\r\n    DescargaPage,\r\n    ConfiguracionPage,\r\n    PerfilPage,\r\n    AltaComponent,\r\n    DetallePersona\r\n    \r\n    \r\n\r\n \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n \r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    NgxFullCalendarModule,\r\n    MatPaginatorModule,\r\n    [NgxMaterialTimepickerModule.setLocale('es-419')],\r\n    FormsModule,\r\n    NgxDatatableModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    //RouterModule.forRoot( routes ),\r\n    RouterModule.forRoot(routes, { useHash: true }),\r\n    ToastrModule.forRoot(),\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    CKEditorModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  entryComponents: [],\r\n  exports: [\r\n    RouterModule,\r\n  ],\r\n  providers: [\r\n    DataService,\r\n    { provide: LOCALE_ID, useValue: 'es' }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","// import { RouterModule, Routes } from '@angular/router';\r\n// import { HomeComponent } from './pages/home.component';\r\n\r\n// import { NgModule } from '@angular/core';\r\n// import { AppComponent } from './app.component';\r\n// import { PerfilPage } from './pages/perfil.pages';\r\n// import { PersonasPage } from './pages/personas.pages';\r\n// import { ConfiguracionPage } from './pages/configuracion.pages';\r\n// import { DescargaPage } from './pages/descarga.pages';\r\n// import { HistoricoPage } from './pages/historico.pages';\r\n \r\n// import { RegistroComponent } from './pages/registro/registro.component';\r\n// import { LoginComponent } from './pages/login/login.component';\r\n\r\n\r\n// const APP_ROUTES: Routes = [\r\n\r\n//  { path: 'home', component: HomeComponent},\r\n//  { path: 'historico', component: HistoricoPage },\r\n//  { path: 'descarga', component: DescargaPage },\r\n//  { path: 'configuracion', component: ConfiguracionPage },\r\n//  { path: 'personas', component: PersonasPage },\r\n// // { path: 'resultadopersonas/:termino', component: ResultadoPersonasComponent },\r\n// // { path: 'persona/:id', component: PersonaComponent },\r\n// { path: 'login'   , component: LoginComponent },\r\n// { path: 'registro', component: RegistroComponent },\r\n// { path: 'perfil', component: PerfilPage },\r\n// //{ path: '**', redirectTo: 'login' }\r\n// { path: '**',  redirectTo: '/registro'}    \r\n// ];\r\n\r\n// @NgModule({\r\n//     imports:[\r\n//         RouterModule.forRoot ( APP_ROUTES, {useHash:false})\r\n//     ],\r\n//     exports: [ RouterModule ]\r\n// })\r\n\r\n// export class AppRoutingModule {}\r\n// //CON HASH (??) export const APP_ROUTING = RouterModule.forRoot(APP_ROUTES ,{useHash:true});\r\n// export const APP_ROUTING = RouterModule.forRoot(APP_ROUTES);\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { Routes} from '@angular/router';\r\n\r\nimport { HomeComponent } from './pages/home.component';\r\nimport { DetalleComponent } from './pages/detalle.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { PersonasPage } from './pages/personas.pages';\r\nimport { AltaComponent } from './pages/alta.component';\r\nimport { HistoricoComponent } from './pages/historico.component';\r\nimport { DetalleHistoricoComponent } from './pages/detallehistorico.component';\r\nimport { DetallePersona } from './pages/detallepersona.component';\r\n\r\n\r\nexport const routes: Routes = [\r\n  { path: 'home' , component: HomeComponent, canActivate: [ AuthGuard ] },\r\n  { path: 'alta' , component: AltaComponent, canActivate: [ AuthGuard ] },\r\n  { path: 'personas' , component: PersonasPage, canActivate: [ AuthGuard ] },\r\n  { path: 'detallepersona/:id_persona' , component: DetallePersona, canActivate: [ AuthGuard ] },\r\n  { path: 'historico' , component: HistoricoComponent, canActivate: [ AuthGuard ] },\r\n  { path: 'detallehistorico/:id' , component: DetalleHistoricoComponent, canActivate: [ AuthGuard ] },\r\n  { path: 'detalle/:id_tarea' , component: DetalleComponent, canActivate: [ AuthGuard ] },\r\n  { path: 'login'   , component: LoginComponent },\r\n  { path: '', pathMatch: 'full', redirectTo: '/login'},\r\n  { path: '**', redirectTo: '/login' }\r\n];\r\n\r\n\r\n//export class AppRoutingModule { }\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-buscador',\r\n    templateUrl: './buscador.component.html'\r\n})\r\n\r\nexport class BuscadorComponent {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"row mb-4\">\r\n    <div class=\"col-md-12 flex-column text-center ml-2 mr-3\">\r\n    <form class=\"form-inline\">\r\n      <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"{{ 'txtSearch' | translate }}\" /> \r\n      <button class=\"btn btn-info my-2 my-sm-0 btn-circle\" type=\"submit\">\r\n        <i class=\"fa  fa-search\"></i>\r\n      </button>\r\n    </form>\r\n  </div>\r\n  </div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-footer',\r\n    templateUrl: './footer.component.html'\r\n})\r\n\r\nexport class FooterComponent {\r\n    any: number;\r\n    constructor(){\r\n        this.any = new Date().getFullYear();\r\n    }\r\n}\r\n\r\n\r\n","<div class=\"row \">\r\n    <div class=\"col-12 footer bg-dark text-center  text-white\">\r\n\r\n   \r\n          &copy; 2020 - {{ any }}\r\n        </div>\r\n\r\n</div>","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html'\r\n})\r\n\r\nexport class HeaderComponent {\r\n    constructor(public translate: TranslateService){\r\n        this.translate.addLangs(['es','ca','en']);\r\n        this.translate.setDefaultLang('es');\r\n      \r\n      \r\n        const browserLang = translate.getBrowserLang();\r\n        translate.use(browserLang.match(/es|ca|en/) ? browserLang : 'es');\r\n      \r\n      \r\n        }\r\n}\r\n\r\n\r\n","\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12 bg-dark\">\r\n    \r\n        \r\n    \r\n\r\n\r\n\r\n\r\n\r\n    <nav class=\"navbar navbar-expand-lg  navbar-dark bg-dark\">\r\n\t\t\t\t \r\n        <a class=\"navbar-brand\" href=\"#\">CheckList</a>\r\n        \r\n            <!-- Toggle button -->\r\n    <button id=\"sidebarCollapse\"  data-toggle=\"collapse\" type=\"button\" \r\n    class=\"navbar-toggler navbar-toggler-right\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n</button>\r\n  \r\n          \r\n        \r\n        \r\n        \r\n        \r\n        <div class=\"collapse navbar-collapse \" id=\"bs-example-navbar-collapse-1\">\r\n            <ul class=\"navbar-nav ml-md-auto\">\r\n                <li class=\"nav-item \">\r\n                    <a class=\"nav-link\" href=\"#\">\r\n                        <i class=\"fa fa-question-circle mr-1  fa-1g\"></i> {{ \"txtAyuda\" | translate }}\r\n                        </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                     <a class=\"nav-link\" href=\"#\">\r\n                        <i class=\"fa fa-times-circle mr-1  fa-1g\"></i> {{ \"txtSalir\" | translate }}\r\n                        </a>\r\n                </li>\r\n\r\n\r\n\r\n\r\n\r\n                <li class=\"nav-item\">\r\n                <div>\r\n                \r\n                    <label>\r\n                      <select class=\"form-control form-control-sm moresmall mt-2 ml-4\" #langSelect (change)=\"translate.use(langSelect.value)\">\r\n                        <option *ngFor=\"let lang of translate.getLangs()\" [value]=\"lang\" [selected]=\"lang === translate.currentLang\">{{ lang }}</option>\r\n                      </select>\r\n                    </label>\r\n                  </div>\r\n                </li>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </ul>\r\n         \r\n         \r\n        </div>\r\n    </nav>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    </div>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { Personas } from '../../models/personas';\r\nimport { ApiPersonas } from '../../services/apipersonas.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-modimagen',\r\n  templateUrl: './modimagen.component.html'\r\n})\r\n\r\nexport class ModimagenComponent implements OnInit {\r\n\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  personas: Personas[] = [];\r\n  fotopersona:Personas = new Personas();\r\n  accionForm: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    private activatedRoute: ActivatedRoute, \r\n    private httpClient: HttpClient, \r\n    private perioService: ApiPersonas\r\n    ) {\r\n\r\n\r\n\r\n\r\n      //modificar valores por defecto en la pagina de insercion TODO\r\n      this.accionForm = this.fb.group({\r\n        checkArrayt: this.fb.array([]),\r\n        fechafin: new FormControl(''),\r\n      //   repeticiones: new FormControl(this.madre),\r\n        repeticiones: ['', Validators.required],\r\n        id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n        id_categoria: '3' //id de accion puntual\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n      this.cargaMadre();\r\n  }\r\n\r\n\r\n\r\n  \r\n  cargaMadre(){\r\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona')\r\n    this.perioService.getFotografia(id_persona).subscribe( (respuesta: Personas) => {\r\n    this.fotopersona = respuesta;\r\n    this.fotopersona = respuesta;\r\n    //this.accionForm.controls['fechafin'].setValue(this.fotopersona[0]['imagen']);\r\n \r\n   // console.log(this.fotopersona[0]['imagen']);\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  // //eliminar foto\r\n  // borrarRegistro(identificacion) {\r\n  //   this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n  //   this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  // }\r\n\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n   submitForm() {\r\n  //   const valormes = this.mesVigente;\r\n  //   // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n  //   // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n  //   const id_tarea: FormControl = this.accionForm.get('id_tarea') as FormControl;\r\n\r\n  //   this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n  //   Swal.fire({\r\n  //     text: 'Periodicidad actualizada',\r\n  //     icon: 'success',\r\n  //     showConfirmButton: false\r\n  //   })\r\n  //   //, this.recarga()\r\n  //   ;\r\n   }\r\n\r\n\r\n}","\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n\r\n\r\n<img \r\n\r\nclass=\"perfildetalle animate fadeIn\" \r\nalt=\"placeholder\" \r\n[src]=\"fotopersona.imagen\" \r\n\r\n/>\r\n\r\n\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HAMMER_LOADER } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'app-menu',\r\n    templateUrl: './menu.component.html',\r\n    styleUrls: ['./menu.component.css']\r\n})\r\n\r\nexport class MenuComponent implements OnInit{\r\n constructor(){}\r\n ngOnInit(){}\r\n}\r\n","<!-- Vertical navbar -->\r\n<div class=\"vertical-nav bg-white\" id=\"sidebar\">\r\n  <div class=\"py-4 px-3 mb-4 bg-light\">\r\n    <div class=\"media d-flex align-items-center\">\r\n      <img\r\n        src=\"https://www.travelcontinuously.com/wp-content/uploads/2018/04/empty-avatar.png\"\r\n        alt=\"...\"\r\n        width=\"65\"\r\n        class=\"mr-3 rounded-circle img-thumbnail shadow-sm\"\r\n      />\r\n      <div class=\"media-body\">\r\n        <h5 class=\"minnom m-0\">José maría TorreAguirre González</h5>\r\n        <p class=\"font-weight-light roledef mb-0\"><em>Rol Mainframe</em></p>\r\n        \r\n        <a [routerLink]=\"['/', 'perfil']\" class=\"text-light\">\r\n          <i class=\"fa fa-user mr-1  fa-1g\"></i> <small>{{ \"txtProfile\" | translate }}</small>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n<app-buscador></app-buscador>\r\n\r\n<hr />\r\n\r\n  <p class=\"text-gray font-weight-bold text-uppercase px-3 small mt-2 pb-4 mb-0\">\r\n    {{ \"txtNavegacion\" | translate }}\r\n  </p>\r\n\r\n  <ul class=\"nav flex-column bg-white mb-0\">\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'home']\" class=\"nav-link  \">\r\n        <i class=\"fa fa-home mr-3  fa-fw\"></i>\r\n        {{ \"txtHome\" | translate }}\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'personas']\" class=\"nav-link \">\r\n        <i class=\"fa fa-users mr-3  fa-fw\"></i>\r\n        {{ \"txtPersonas\" | translate }}\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'historico']\" class=\"nav-link \">\r\n        <i class=\"fa fa-history mr-3  fa-fw\"></i>\r\n        {{ \"txtConsultahistorica\" | translate }}\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a href =\"http://joraco.site:8081/b/ajax/exportar_registros_tareas_csv.php\" class=\"nav-link \">\r\n        <i class=\"fa fa-download mr-3  fa-fw\"></i>\r\n        {{ \"txtDescargaInformacion\" | translate }}\r\n      </a>\r\n    </li>\r\n  </ul>\r\n  <hr />\r\n  <p class=\"text-gray font-weight-bold text-uppercase px-3 small mt-2  pb-4 mb-0\">\r\n   {{ \"txtRolAdministrador\" | translate }}\r\n  </p>\r\n\r\n  <ul class=\"nav flex-column bg-white mb-0\">\r\n    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n      <a [routerLink]=\"['/', 'configuracion']\" class=\"nav-link \">\r\n        <i class=\"fa fa-cog mr-3  fa-fw\"></i>\r\n        {{ \"txtConfiguracion\" | translate }}\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n<!-- End vertical navbar -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DiasMes } from '../../models/diasdelmes';\r\nimport { ModeloAccionPuntual } from '../../models/accionpuntual';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModeloPeriodicidad } from '../../models/periodicidad';\r\nimport { TramosSemana } from '../../models/tramossemana';\r\nimport { TramosMes } from '../../models/tramosmes';\r\nimport { TramosDias } from '../../models/tramosdias';\r\nimport Swal from 'sweetalert2';\r\nimport { PeriodicidadMadre } from '../../models/periodicidadmadre';\r\nimport { NoopScrollStrategy } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-accion',\r\n  templateUrl: './accion.component.html'\r\n})\r\n\r\nexport class AccionComponent implements OnInit {\r\n\r\n\r\n  registro: ModeloAccionPuntual = new ModeloAccionPuntual();\r\n  registroRetorno: ModeloPeriodicidad = new ModeloPeriodicidad();\r\n  periodicidades: ModeloPeriodicidad[] = [];\r\n\r\n  datoregistro = {\r\n    id_seguimiento: null,\r\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n    id_persona: null\r\n  }\r\n  madre: PeriodicidadMadre;\r\n\r\n  mad:PeriodicidadMadre = new PeriodicidadMadre();\r\n\r\n  mesActual: number = Date.now();\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  diasMes: DiasMes[] = [];\r\n  tramosSemana: TramosSemana[] = [];\r\n  tramosMes: TramosMes[] = [];\r\n  diasSemana: TramosDias[] = [];\r\n  \r\n  datosRecibidos: string;\r\n  dias: any;\r\n  accionForm: FormGroup;\r\n\r\n  selectedHobbiesNames: [string];\r\n\r\n  mesVigente = new Date().getMonth() + 1;\r\n  datosborrado: string;\r\n\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private httpClient: HttpClient, private perioService: PeriodicidadService) {\r\n\r\n    //cargo los dias del mes en curso\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_dias_mes_actual.php').subscribe(result => {\r\n      this.diasMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos mes\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_mes.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos dias de la semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_dias_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo el listado de personas para esta ID tarea\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.periodicidades = result;\r\n    }, error => console.error(error));\r\n\r\n  \r\n\r\n\r\n\r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionForm = this.fb.group({\r\n      checkArrayt: this.fb.array([]),\r\n      fechafin: new FormControl(''),\r\n    //   repeticiones: new FormControl(this.madre),\r\n      repeticiones: ['', Validators.required],\r\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\r\n      id_categoria: '3' //id de accion puntual\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n this.cargaMadre();\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n  cargaMadre(){\r\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id_tarea')\r\n    this.perioService.getDatosMadre(id_tarea).subscribe( (respuesta: PeriodicidadMadre) => {\r\n    this.madre = respuesta;\r\n    this.mad = respuesta[0];\r\n    this.accionForm.controls['fechafin'].setValue(this.madre[0]['fechafin']);\r\n    this.accionForm.controls['repeticiones'].setValue(this.madre[0]['repeticiones']);\r\n    console.log(this.mad.fechafin);\r\n    });\r\n  }\r\n\r\n  // cargaMadre(){\r\n  //   const id_tarea = this.activatedRoute.snapshot.paramMap.get('id')\r\n  //   this.perioService.getDatosMadre(id_tarea).subscribe(respuesta => {\r\n  //   this.madre = respuesta[0];\r\n  //   this.accionForm.controls['repeticiones'].setValue(this.madre['repeticiones']);\r\n  //   this.accionForm.controls['fechafin'].setValue('2020-12-05');\r\n  //   console.log(this.madre);\r\n  //   });\r\n  //   }\r\n\r\n\r\n\r\n  //   this.perioService.getDatosMadre (this.datoregistro.id_tarea)\r\n  //     .subscribe( (\r\n  //       respuesta:PeriodicidadMadre) => {\r\n  //        this.madre = respuesta;\r\n  //        console.log(this.madre);\r\n  //     });\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //eliminar registro      \r\n  borrarRegistro(identificacion) {\r\n    this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n    this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  }\r\n\r\n  onCheckboxChange(e) {\r\n    const checkArrayt: FormArray = this.accionForm.get('checkArrayt') as FormArray;\r\n    if (e.target.checked) {\r\n      checkArrayt.push(new FormControl(e.target.value));\r\n    } else {\r\n      let i: number = 0;\r\n      checkArrayt.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          checkArrayt.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n      //quito el check y borro el registro 8no se aprecia porqu eno recarga la pagina)\r\n      this.borrarRegistro(e.target.value);\r\n    }\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n  submitForm() {\r\n    const valormes = this.mesVigente;\r\n    // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    const id_tarea: FormControl = this.accionForm.get('id_tarea') as FormControl;\r\n\r\n    this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    Swal.fire({\r\n      text: 'Periodicidad actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    //, this.recarga()\r\n    ;\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card bg-default\">\r\n        <h5 class=\"card-header\">\r\n          Acción puntual\r\n        </h5>\r\n        <div class=\"card-body\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div class=\"row\">\r\n          \r\n            <div class=\"col-md-7\">\r\n          <div [formGroup]=\"accionForm\">\r\n          <input type=\"hidden\" class=\"form-control\"  name=\"id_tarea\"  formControlName=\"id_tarea\"  />\r\n          </div>\r\n\r\n          <div [formGroup]=\"accionForm\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_categoria\"  formControlName=\"id_categoria\"  />\r\n          </div>\r\n\r\n             <div class=\"row\">\r\n            <div class=\"col-md-7\"><h5 class=\"titolpetit\">Posición en la semana</h5>\r\n            <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-6  minitext\">\r\n\r\n\r\n\r\n                  <div *ngFor=\"let dias of diasSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{dias.name}}</div><div class=\"col-4\">\r\n                      <input type=\"checkbox\"  name=\"dias.name{{dias.value}}\" [value]=\"dias.value\" \r\n                      checked=\"{{dias.checked}}\"  \r\n                      (change)=\"onCheckboxChange($event)\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n\r\n               \r\n                </div>\r\n                <div class=\"col-6  minitext\">\r\n                  <div *ngFor=\"let tramos of tramosSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{tramos.name}}</div><div class=\"col-4\">\r\n                      \r\n                      <input type=\"checkbox\" [value]=\"tramos.value\" checked=\"{{tramos.checked}}\" (change)=\"onCheckboxChange($event)\" />\r\n                    \r\n                      \r\n                    \r\n                    \r\n                    </div></div>\r\n                  </div>\r\n                </div>\r\n            </div>      \r\n            </div>\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Posición en el mes</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3  minitext\">\r\n                <div class=\"col-12\">\r\n                  <div *ngFor=\"let trames of tramosMes; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{trames.name}}</div><div class=\"col-4 text-right\">\r\n                      <input type=\"checkbox\" [value]=\"trames.value\" checked=\"{{trames.checked}}\" (change)=\"onCheckboxChange($event)\" /></div></div>\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div>\r\n           </div> \r\n\r\n\r\n           <div class=\"row\">\r\n            <div class=\"col-md-12\"><h5 class=\"titolpetit\"></h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"row\" [formGroup]=\"accionForm\">\r\n                    <div class=\"col-6\">\r\n                      \r\n                      <label for=\"dp\">Fecha fin</label>\r\n                      <div class=\"input-group\">\r\n                        <input\r\n                          class=\"form-control\"\r\n                          ngbDatepicker\r\n                          #d=\"ngbDatepicker\"\r\n                          name=\"fechafin\"\r\n                          formControlName=\"fechafin\"\r\n                           placeholder =  {{mad.fechafin}} \r\n                          readonly\r\n                        />\r\n                        <div class=\"input-group-append\">\r\n                          <button\r\n                            class=\"btn btn-outline-secondary calendar\"\r\n                            (click)=\"d.toggle()\"\r\n                            type=\"button\"\r\n                          ></button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"col-6\" [formGroup]=\"accionForm\"><label for=\"repeticiones\">Número de repeticiones</label> \r\n                    \r\n                      <input type=\"number\" class=\"form-control\"  \r\n                      name=\"repeticiones\" \r\n                      formControlName=\"repeticiones\"  \r\n  \r\n                      />\r\n                    \r\n                  \r\n                    </div>\r\n\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div> \r\n          </div>\r\n          </div>\r\n\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Selección de días</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12 m-0 p-0\">\r\n                  <div class=\"row mb-3 p-0 text-center\">\r\n                    <!-- <div class=\"col-12\">\r\n                      <h5 class=\"titolpetit\">{{mesActual | date: 'LLLL'}}</h5>\r\n                    </div> -->\r\n                  </div>\r\n                  <div class=\"row m-0 p-0 checkbox\">\r\n                      <div class=\"col-2  text-center p-0 m-0\" *ngFor=\"let diam of diasMes; let i=index\">\r\n\r\n                          <input type=\"checkbox\" \r\n                          [value]=\"diam.value\" name=\"checkbox{{diam.value}}\" id=\"checkbox{{diam.value}}\" \r\n                         \r\n                          checked=\"{{diam.checked}}\"  \r\n                          (change)=\"onCheckboxChange($event)\"\r\n                          />\r\n                        \r\n\r\n                        <label for=\"checkbox{{diam.value}}\">{{diam.name}}</label>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>      \r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-12 text-center\"><hr class=\"bdott\" />\r\n              <button type=\"submit\" class=\"btn btn-info mt-3\">\r\n                Guardar periodicidad\r\n              </button>\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </form>\r\n\r\n  <script>\r\n    CKEDITOR.replace(\"ibmeditor\", { \r\n    on : {\r\n      // maximize the editor on startup\r\n      'instanceReady' : function( evt ) {\r\n        evt.editor.resize(\"100%\");\r\n      }\r\n    }\r\n  });\r\n  </script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DiasMes } from '../../models/diasdelmes';\r\nimport { ModeloAccionPuntual } from '../../models/accionpuntual';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModeloPeriodicidad } from '../../models/periodicidad';\r\nimport { TramosSemana } from '../../models/tramossemana';\r\nimport { TramosMes } from '../../models/tramosmes';\r\nimport { TramosDias } from '../../models/tramosdias';\r\nimport Swal from 'sweetalert2';\r\nimport { PeriodicidadMadre } from '../../models/periodicidadmadre';\r\nimport { NoopScrollStrategy } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-accionhistorico',\r\n  templateUrl: './accionhistorico.component.html'\r\n})\r\n\r\nexport class AccionHistoricoComponent implements OnInit {\r\n\r\n\r\n  registro: ModeloAccionPuntual = new ModeloAccionPuntual();\r\n  registroRetorno: ModeloPeriodicidad = new ModeloPeriodicidad();\r\n  periodicidades: ModeloPeriodicidad[] = [];\r\n\r\n  datoregistro = {\r\n    id_seguimiento: null,\r\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\r\n    id_persona: null\r\n  }\r\n  madre: any;\r\n\r\n  \r\n  mesActual: number = Date.now();\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  diasMes: DiasMes[] = [];\r\n  tramosSemana: TramosSemana[] = [];\r\n  tramosMes: TramosMes[] = [];\r\n  diasSemana: TramosDias[] = [];\r\n  mad:PeriodicidadMadre = new PeriodicidadMadre();\r\n\r\n  datosRecibidos: string;\r\n  dias: any;\r\n  accionForm: FormGroup;\r\n\r\n  selectedHobbiesNames: [string];\r\n\r\n  mesVigente = new Date().getMonth() + 1;\r\n  datosborrado: string;\r\n\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private httpClient: HttpClient, private perioService: PeriodicidadService) {\r\n\r\n    //cargo los dias del mes en curso\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_dias_mes_actual.php').subscribe(result => {\r\n      this.diasMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos mes\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_mes.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos dias de la semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_dias_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo el listado de personas para esta ID tarea\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.periodicidades = result;\r\n    }, error => console.error(error));\r\n\r\n  \r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionForm = this.fb.group({\r\n      checkArrayt: this.fb.array([]),\r\n      fechafin: new FormControl(''),\r\n    //   repeticiones: new FormControl(this.madre),\r\n      repeticiones: ['', Validators.required],\r\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\r\n      id_categoria: '3' //id de accion puntual\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n this.cargaMadre();\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  cargaMadre(){\r\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id')\r\n    this.perioService.getDatosMadre(id_tarea).subscribe( (respuesta: PeriodicidadMadre) => {\r\n    this.madre = respuesta;\r\n    this.mad = respuesta[0];\r\n    this.accionForm.controls['fechafin'].setValue(this.madre[0]['fechafin']);\r\n    this.accionForm.controls['repeticiones'].setValue(this.madre[0]['repeticiones']);\r\n    console.log(this.mad.fechafin);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  //   this.perioService.getDatosMadre (this.datoregistro.id_tarea)\r\n  //     .subscribe( (\r\n  //       respuesta:PeriodicidadMadre) => {\r\n  //        this.madre = respuesta;\r\n  //        console.log(this.madre);\r\n  //     });\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //eliminar registro      \r\n  borrarRegistro(identificacion) {\r\n    this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n    this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  }\r\n\r\n  onCheckboxChange(e) {\r\n    const checkArrayt: FormArray = this.accionForm.get('checkArrayt') as FormArray;\r\n    if (e.target.checked) {\r\n      checkArrayt.push(new FormControl(e.target.value));\r\n    } else {\r\n      let i: number = 0;\r\n      checkArrayt.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          checkArrayt.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n      //quito el check y borro el registro 8no se aprecia porqu eno recarga la pagina)\r\n      this.borrarRegistro(e.target.value);\r\n    }\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n  submitForm() {\r\n    const valormes = this.mesVigente;\r\n    // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    const id_tarea: FormControl = this.accionForm.get('id_tarea') as FormControl;\r\n\r\n    this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    Swal.fire({\r\n      text: 'Periodicidad actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    //, this.recarga()\r\n    ;\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card bg-default\">\r\n        <h5 class=\"card-header\">\r\n          Acción puntual\r\n        </h5>\r\n        <div class=\"card-body\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div class=\"row\">\r\n          \r\n            <div class=\"col-md-7\">\r\n          <div [formGroup]=\"accionForm\">\r\n          <input type=\"hidden\" class=\"form-control\"  name=\"id_tarea\"  formControlName=\"id_tarea\"  />\r\n          </div>\r\n\r\n          <div [formGroup]=\"accionForm\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_categoria\"  formControlName=\"id_categoria\"  />\r\n          </div>\r\n\r\n             <div class=\"row\">\r\n            <div class=\"col-md-7\"><h5 class=\"titolpetit\">Posición en la semana</h5>\r\n            <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-6  minitext\">\r\n\r\n\r\n\r\n                  <div *ngFor=\"let dias of diasSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{dias.name}}</div><div class=\"col-4\">\r\n                      <input type=\"checkbox\"  name=\"dias.name{{dias.value}}\" [value]=\"dias.value\" \r\n                      checked=\"{{dias.checked}}\"  \r\n                      (change)=\"onCheckboxChange($event)\"\r\n                      disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n\r\n               \r\n                </div>\r\n                <div class=\"col-6  minitext\">\r\n                  <div *ngFor=\"let tramos of tramosSemana; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{tramos.name}}</div><div class=\"col-4\">\r\n                      \r\n                      <input type=\"checkbox\" \r\n                      disabled\r\n                      [value]=\"tramos.value\" checked=\"{{tramos.checked}}\" (change)=\"onCheckboxChange($event)\" />\r\n                    \r\n                      \r\n                    \r\n                    \r\n                    </div></div>\r\n                  </div>\r\n                </div>\r\n            </div>      \r\n            </div>\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Posición en el mes</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3  minitext\">\r\n                <div class=\"col-12\">\r\n                  <div *ngFor=\"let trames of tramosMes; let i=index\">\r\n                    <div class=\"row\"><div class=\"col-8\">{{trames.name}}</div><div class=\"col-4 text-right\">\r\n                      <input type=\"checkbox\" \r\n                      disabled\r\n                      [value]=\"trames.value\" checked=\"{{trames.checked}}\" (change)=\"onCheckboxChange($event)\" /></div></div>\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div>\r\n           </div> \r\n\r\n\r\n           <div class=\"row\">\r\n            <div class=\"col-md-12\"><h5 class=\"titolpetit\"></h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"row\" [formGroup]=\"accionForm\">\r\n                    <div class=\"col-6\">\r\n                      \r\n                      <label for=\"dp\">Fecha fin</label>\r\n                      <div class=\"input-group\">\r\n                        <input\r\n                          class=\"form-control\"\r\n                          ngbDatepicker\r\n                          #d=\"ngbDatepicker\"\r\n                          name=\"fechafin\"\r\n                          formControlName=\"fechafin\"\r\n                          disabled\r\n                          placeholder =  {{mad.fechafin}} \r\n                          readonly\r\n                        />\r\n                        <div class=\"input-group-append\">\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"col-6\" [formGroup]=\"accionForm\"><label for=\"repeticiones\">Número de repeticiones</label> \r\n                    \r\n                      <input type=\"number\" class=\"form-control\"  \r\n                      name=\"repeticiones\" \r\n                      formControlName=\"repeticiones\"  \r\n                      disabled\r\n                      />\r\n                    \r\n                  \r\n                    </div>\r\n\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n            </div> \r\n          </div>\r\n          </div>\r\n\r\n            <div class=\"col-md-5\"><h5 class=\"titolpetit\">Selección de días</h5>\r\n              <hr class=\"bdott\" />\r\n              <div class=\"row mt-3\">\r\n                <div class=\"col-12 m-0 p-0\">\r\n                  <div class=\"row mb-3 p-0 text-center\">\r\n                    <!-- <div class=\"col-12\">\r\n                      <h5 class=\"titolpetit\">{{mesActual | date: 'LLLL'}}</h5>\r\n                    </div> -->\r\n                  </div>\r\n                  <div class=\"row m-0 p-0 checkbox\">\r\n                      <div class=\"col-2  text-center p-0 m-0\" *ngFor=\"let diam of diasMes; let i=index\">\r\n\r\n                          <input type=\"checkbox\" \r\n                          [value]=\"diam.value\" name=\"checkbox{{diam.value}}\" id=\"checkbox{{diam.value}}\" \r\n                         \r\n                          checked=\"{{diam.checked}}\"  \r\n                          (change)=\"onCheckboxChange($event)\"\r\n                          disabled\r\n                          />\r\n                        \r\n\r\n                        <label for=\"checkbox{{diam.value}}\">{{diam.name}}</label>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>      \r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-12 text-center\"><hr class=\"bdott\" />\r\n              <!-- <button type=\"submit\" class=\"btn btn-info mt-3\">\r\n                Guardar periodicidad\r\n              </button> -->\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </form>\r\n\r\n  <script>\r\n    CKEDITOR.replace(\"ibmeditor\", { \r\n    on : {\r\n      // maximize the editor on startup\r\n      'instanceReady' : function( evt ) {\r\n        evt.editor.resize(\"100%\");\r\n      }\r\n    }\r\n  });\r\n  </script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { Constantes } from '../../models/constantes.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DiasMes } from '../../models/diasdelmes';\r\nimport { ModeloAccionPuntual } from '../../models/accionpuntual';\r\nimport { PeriodicidadService } from '../../services/periodicidad.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModeloPeriodicidad } from '../../models/periodicidad';\r\nimport { TramosSemana } from '../../models/tramossemana';\r\nimport { TramosMes } from '../../models/tramosmes';\r\nimport { TramosDias } from '../../models/tramosdias';\r\nimport Swal from 'sweetalert2';\r\nimport { PeriodicidadMadre } from '../../models/periodicidadmadre';\r\nimport { NoopScrollStrategy } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-check',\r\n  templateUrl: './check.component.html'\r\n})\r\nexport class CheckComponent implements OnInit {\r\n\r\n\r\n  registro: ModeloAccionPuntual = new ModeloAccionPuntual();\r\n  registroRetorno: ModeloPeriodicidad = new ModeloPeriodicidad();\r\n  periodicidades: ModeloPeriodicidad[] = [];\r\n\r\n  datoregistro = {\r\n    id_seguimiento: null,\r\n    id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\r\n    id_persona: null\r\n  }\r\n  madre: any;\r\n\r\n  \r\n  mesActual: number = Date.now();\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n  diasMes: DiasMes[] = [];\r\n  tramosSemana: TramosSemana[] = [];\r\n  tramosMes: TramosMes[] = [];\r\n  diasSemana: TramosDias[] = [];\r\n  mad:PeriodicidadMadre = new PeriodicidadMadre();\r\n\r\n  datosRecibidos: string;\r\n  dias: any;\r\n  accionForm: FormGroup;\r\n\r\n  selectedHobbiesNames: [string];\r\n\r\n  mesVigente = new Date().getMonth() + 1;\r\n  datosborrado: string;\r\n\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private httpClient: HttpClient, private perioService: PeriodicidadService) {\r\n\r\n    //cargo los dias del mes en curso\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_dias_mes_actual.php').subscribe(result => {\r\n      this.diasMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos mes\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_mes.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.tramosMes = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo los tramos dias de la semana\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/read_tramos_dias_semana.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.diasSemana = result;\r\n    }, error => console.error(error));\r\n\r\n    //cargo el listado de personas para esta ID tarea\r\n    httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/periodicidad_detalle.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\r\n      this.periodicidades = result;\r\n    }, error => console.error(error));\r\n\r\n  \r\n\r\n    //modificar valores por defecto en la pagina de insercion TODO\r\n    this.accionForm = this.fb.group({\r\n      checkArrayt: this.fb.array([]),\r\n      fechafin: new FormControl(''),\r\n    //   repeticiones: new FormControl(this.madre),\r\n      repeticiones: ['', Validators.required],\r\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\r\n      id_categoria: '1' //id de accion puntual\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n this.cargaMadre();\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  cargaMadre(){\r\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id')\r\n    this.perioService.getDatosMadre(id_tarea).subscribe( (respuesta: PeriodicidadMadre) => {\r\n    this.madre = respuesta;\r\n    this.mad = respuesta[0];\r\n    this.accionForm.controls['fechafin'].setValue(this.madre[0]['fechafin']);\r\n    this.accionForm.controls['repeticiones'].setValue(this.madre[0]['repeticiones']);\r\n    console.log(this.mad.fechafin);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  //   this.perioService.getDatosMadre (this.datoregistro.id_tarea)\r\n  //     .subscribe( (\r\n  //       respuesta:PeriodicidadMadre) => {\r\n  //        this.madre = respuesta;\r\n  //        console.log(this.madre);\r\n  //     });\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //eliminar registro      \r\n  borrarRegistro(identificacion) {\r\n    this.datosborrado = JSON.stringify({ \"tarea\": this.datoregistro.id_tarea, \"id_value\": identificacion });\r\n    this.perioService.delete(this.datosborrado).subscribe();\r\n\r\n  }\r\n\r\n  onCheckboxChange(e) {\r\n    const checkArrayt: FormArray = this.accionForm.get('checkArrayt') as FormArray;\r\n    if (e.target.checked) {\r\n      checkArrayt.push(new FormControl(e.target.value));\r\n    } else {\r\n      let i: number = 0;\r\n      checkArrayt.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          checkArrayt.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n      //quito el check y borro el registro 8no se aprecia porqu eno recarga la pagina)\r\n      this.borrarRegistro(e.target.value);\r\n    }\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga() {\r\n    location.reload();\r\n  }\r\n\r\n  submitForm() {\r\n    const valormes = this.mesVigente;\r\n    // const fechafin: FormControl = this.accionForm.get('fechafin') as FormControl;\r\n    // const repeticiones: FormControl = this.accionForm.get('repeticiones') as FormControl;\r\n    const id_tarea: FormControl = this.accionForm.get('id_tarea') as FormControl;\r\n\r\n    this.perioService.altaRegistrochecks(this.accionForm.value).subscribe();\r\n    Swal.fire({\r\n      text: 'Periodicidad actualizada',\r\n      icon: 'success',\r\n      showConfirmButton: false\r\n    })\r\n    //, this.recarga()\r\n    ;\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<form [formGroup]=\"accionForm\" class=\"formulario\" (ngSubmit)=\"submitForm()\" novalidate>\r\n  <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card bg-default\">\r\n          <h5 class=\"card-header\">\r\n            Check\r\n          </h5>\r\n          <div class=\"card-body\">\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n            <div class=\"row\">\r\n            \r\n              <div class=\"col-md-7\">\r\n            <div [formGroup]=\"accionForm\">\r\n            <input type=\"hidden\" class=\"form-control\"  name=\"id_tarea\"  formControlName=\"id_tarea\"  />\r\n            </div>\r\n  \r\n            <div [formGroup]=\"accionForm\">\r\n              <input type=\"hidden\" class=\"form-control\"  name=\"id_categoria\"  formControlName=\"id_categoria\"  />\r\n            </div>\r\n  \r\n               <div class=\"row\">\r\n              <div class=\"col-md-7\"><h5 class=\"titolpetit\">Posición en la semana</h5>\r\n              <hr class=\"bdott\" />\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-6  minitext\">\r\n  \r\n  \r\n  \r\n                    <div *ngFor=\"let dias of diasSemana; let i=index\">\r\n                      <div class=\"row\"><div class=\"col-8\">{{dias.name}}</div><div class=\"col-4\">\r\n                        <input type=\"checkbox\"  name=\"dias.name{{dias.value}}\" [value]=\"dias.value\" \r\n                        checked=\"{{dias.checked}}\"  \r\n                        (change)=\"onCheckboxChange($event)\"\r\n                        disabled\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    </div>\r\n  \r\n                 \r\n                  </div>\r\n                  <div class=\"col-6  minitext\">\r\n                    <div *ngFor=\"let tramos of tramosSemana; let i=index\">\r\n                      <div class=\"row\"><div class=\"col-8\">{{tramos.name}}</div><div class=\"col-4\">\r\n                        \r\n                        <input type=\"checkbox\" \r\n                        disabled\r\n                        [value]=\"tramos.value\" checked=\"{{tramos.checked}}\" (change)=\"onCheckboxChange($event)\" />\r\n                      \r\n                        \r\n                      \r\n                      \r\n                      </div></div>\r\n                    </div>\r\n                  </div>\r\n              </div>      \r\n              </div>\r\n              <div class=\"col-md-5\"><h5 class=\"titolpetit\">Posición en el mes</h5>\r\n                <hr class=\"bdott\" />\r\n                <div class=\"row mt-3  minitext\">\r\n                  <div class=\"col-12\">\r\n                    <div *ngFor=\"let trames of tramosMes; let i=index\">\r\n                      <div class=\"row\"><div class=\"col-8\">{{trames.name}}</div><div class=\"col-4 text-right\">\r\n                        <input type=\"checkbox\" \r\n                        disabled\r\n                        [value]=\"trames.value\" checked=\"{{trames.checked}}\" (change)=\"onCheckboxChange($event)\" /></div></div>\r\n                    </div>\r\n                  </div>\r\n                </div>      \r\n              </div>\r\n             </div> \r\n  \r\n  \r\n             <div class=\"row\">\r\n              <div class=\"col-md-12\"><h5 class=\"titolpetit\"></h5>\r\n                <hr class=\"bdott\" />\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-12\">\r\n                    <div class=\"row\" [formGroup]=\"accionForm\">\r\n                      <div class=\"col-6\">\r\n                        \r\n                        <!-- <label for=\"dp\">Fecha fin</label>\r\n                        <div class=\"input-group\">\r\n                          <input\r\n                            class=\"form-control\"\r\n                            ngbDatepicker\r\n                            #d=\"ngbDatepicker\"\r\n                            name=\"fechafin\"\r\n                            formControlName=\"fechafin\"\r\n                            disabled\r\n                            placeholder =  {{mad.fechafin}} \r\n                            readonly\r\n                          />\r\n                          <div class=\"input-group-append\">\r\n                            \r\n                          </div>\r\n                        </div> -->\r\n                      </div>\r\n  \r\n  \r\n  \r\n  \r\n                      <div class=\"col-6\" [formGroup]=\"accionForm\">\r\n                        \r\n                        <!-- <label for=\"repeticiones\">Número de repeticiones</label> \r\n                      \r\n                        <input type=\"number\" class=\"form-control\"  \r\n                        name=\"repeticiones\" \r\n                        formControlName=\"repeticiones\"  \r\n                        disabled\r\n                        />\r\n                       -->\r\n                    \r\n                      </div>\r\n  \r\n  \r\n  \r\n  \r\n                    </div>\r\n                  </div>\r\n                </div>      \r\n              </div> \r\n            </div>\r\n            </div>\r\n  \r\n              <div class=\"col-md-5\"><h5 class=\"titolpetit\">Selección de días</h5>\r\n                <hr class=\"bdott\" />\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-12 m-0 p-0\">\r\n                    <div class=\"row mb-3 p-0 text-center\">\r\n                      <!-- <div class=\"col-12\">\r\n                        <h5 class=\"titolpetit\">{{mesActual | date: 'LLLL'}}</h5>\r\n                      </div> -->\r\n                    </div>\r\n                    <div class=\"row m-0 p-0 checkbox\">\r\n                        <div class=\"col-2  text-center p-0 m-0\" *ngFor=\"let diam of diasMes; let i=index\">\r\n  \r\n                            <input type=\"checkbox\" \r\n                            [value]=\"diam.value\" name=\"checkbox{{diam.value}}\" id=\"checkbox{{diam.value}}\" \r\n                           \r\n                            checked=\"{{diam.checked}}\"  \r\n                            (change)=\"onCheckboxChange($event)\"\r\n                            disabled\r\n                            />\r\n                          \r\n  \r\n                          <label for=\"checkbox{{diam.value}}\">{{diam.name}}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>      \r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12 text-center\"><hr class=\"bdott\" />\r\n                <!-- <button type=\"submit\" class=\"btn btn-info mt-3\">\r\n                  Guardar periodicidad\r\n                </button> -->\r\n               \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </form>\r\n  \r\n    <script>\r\n      CKEDITOR.replace(\"ibmeditor\", { \r\n      on : {\r\n        // maximize the editor on startup\r\n        'instanceReady' : function( evt ) {\r\n          evt.editor.resize(\"100%\");\r\n        }\r\n      }\r\n    });\r\n    </script>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  ","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate\n//CanActivateChild \n{\n\n      constructor( private auth: AuthService, private router: Router ){}\n\n      canActivate(): boolean  {\n        if( this.auth.estaAutenticado() ){\n          return true;\n        } else {\n          this.router.navigateByUrl('./login');\n          return false;\n        }\n      }\n\n  // canActivateChild(\n  //   next: ActivatedRouteSnapshot,\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n  //   return true;\n  // }\n  \n}\n","export class ModeloAccionPuntual {\n  id_periodicidad: string;\n  id_categoria: string;\n  id_period_madre: string;\n  fecha: string;\n  id_accion: string;\n  fechafin: string;\n  repeticiones: string;\n  name: string;\n  value: string;\n  id_tarea: string;\n  checked: string;\n}\n","export class Constantes {\r\n    public static API_SERVER = 'http://joraco.site:8081/b';\r\n  }\r\n  \r\n","export class Issue {\n  id_tarea: string;\n  tarea: string;\n  hora: string;\n  estatus: string;\n  observaciones: string;\n  fecha: string;\n  fechamodi: string;\n  id_categoria: string;\n\n  flag_visibilidad: string;\n  prioridad: string;\n}\n","export class ModeloPeriodicidad {\n\n\n  id_periodicidad: string;\n  id_categoria: string;\n  id_period_madre: string;\n  id_tarea: string;\n  value: string;\n  fecha: string;\n  fechafin: string;\n  repeticiones: string;\n  name: string;\n  checked: string;\n\n\n}\n\n","export class PeriodicidadMadre {\n\n    id_period_madre: string;\n    fecha: string;\n    id_tarea: string;\n    value: string;\n    fechafin: string;\n    repeticiones: string;\n\n\n}\n\n","export class Personas {\n  id_persona: string;\n  nombres: string;\n  telefono: string;\n  email: string;\n  direccion: string;\n  registrado: string;\n  id_rol: string;\n  password: string;\n  imagen: string;\n}\n","export class Seguimiento {\n  id_seguimiento: string;\n  id_persona: string;\n  id_tarea: string;\n\n}\n","export class UsuarioModel {\r\n    email: string;\r\n    password: string;\r\n    nombre: string;\r\n}","import {Component, ViewChild} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { ApiService } from '../services/apiregistros.service';\nimport { Issue } from  '../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../models/constantes.model';\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { Router } from '@angular/router';\nimport { Roles } from '../models/roles';\nimport { Recurrencias } from '../models/recurrencias';\nimport { Estados } from '../models/estados';\nimport { Categorias } from '../models/categorias';\nimport { FullCalendarOptions, EventObject } from 'ngx-fullcalendar';\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-alta',\n  templateUrl: './alta.component.html'\n  \n})\n\nexport class AltaComponent {\n\n    model: NgbDateStruct;\n\n    options: FullCalendarOptions;\n   events: EventObject[];\n\n    public Editor = ClassicEditor;\n    public onReady( editor ) {\n        editor.ui.getEditableElement().parentElement.insertBefore(\n            editor.ui.view.toolbar.element,\n            editor.ui.getEditableElement()\n        );\n    }\n    roles: Roles[] = [];\n   // recurrencias: Recurrencias[] = [];\n    estados: Estados [] = [];\n    categorias: Categorias [] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n    personas:Issue[] = [];\n    issue: Issue = new Issue();\n    editing = {};\n    rows = [];\n    temp = [];\n\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n    datoregistro = {\n        id_tarea: null,\n        tarea: null,\n      \n        hora: null,\n       \n        estatus: null,\n\n        observaciones: null,\n        id_categoria:  null,\n  \n        flag_visibilidad:  null,\n  \n        prioridad:  null\n    }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  \n  \n  constructor(private httpClient: HttpClient, private apiService: ApiService, private router: Router) {\n\n\n        //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n            this.roles = result;\n          }, error => console.error(error));\n \n\n        //cargo las categorias para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/categorias_read.php').subscribe(result => {\n            this.categorias = result;\n          }, error => console.error(error));                   \n\n\n\n  }\n\n  ngOnInit(){\n\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n    this.router.navigate(['/home']);\n  }\n\n\n  //alta de registro\n  altaRegistro() {\n\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.tarea==null || this.datoregistro.hora==null ){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.tarea,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : true\n          }),this.recarga();      \n        });\n    }\n  }\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ \"txtNuevoRegistro\" | translate }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-6 pt-5\">\n      <div class=\"form-group\">\n        <label for=\"tarea\">{{ \"txtTarea\" | translate }}</label>\n        <input\n          required\n          style=\"background-color: white;\"\n          placeholder=\"Resumen tarea\"\n          class=\"form-control form-control-sm\"\n          [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n          #tarea=\"ngModel\"\n          required\n          minlength=\"4\"\n          name=\"tarea\"\n          type=\"text\"\n          [(ngModel)]=\"datoregistro.tarea\"\n        />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <div class=\"form-group 24hr-example\">\n            <label for=\"hora\">{{ \"txtHora\" | translate }}</label>\n            <input\n              required\n              aria-label=\"24hr format\"\n              style=\"background-color: white;\"\n              placeholder=\"00:00\"\n              class=\"form-control form-control-sm reloj\"\n              [class.is-invalid]=\"hora.invalid && hora.touched\"\n              #hora=\"ngModel\"\n              minlength=\"5\"\n              maxlength=\"5\"\n              type=\"text\"\n              [(ngModel)]=\"datoregistro.hora\"\n              [ngxTimepicker]=\"fullTime\"\n              [format]=\"24\"\n              readonly\n            />\n            <ngx-material-timepicker\n              #fullTime\n              [minutesGap]=\"30\"\n            ></ngx-material-timepicker>\n          </div>\n        </div>\n\n        \n    \n<!-- <div class=\"form-group\">\n         \n            <label for=\"id_categoria\">Categoría</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"id_categoria\"\n              placeholder=\"Seleccione categoria\"\n              #id_categoria=\"ngModel\"\n              [(ngModel)]=\"datoregistro.id_categoria\"\n            >\n              <option [ngValue]=\"null\">Seleccione Categoría</option>\n              <option\n                *ngFor=\"let categoria of categorias\"\n                value=\"{{ categoria.id_categoria }}\"\n              >\n                {{ categoria.categoria_name }}\n              </option>\n            </select>\n</div> -->\n\n\n\n\n    \n        <div class=\"col-md-6\">\n            <label for=\"prioridad\">Prioridad</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"prioridad\"\n              placeholder=\"Seleccione prioridad\"\n              #prioridad=\"ngModel\"\n              [(ngModel)]=\"datoregistro.prioridad\"\n            >\n              <option [ngValue]=\"null\" selected>Seleccione prioridad</option>\n              <option value=\"alta\">Alta</option>\n              <option value=\"media\">Media</option>\n              <option value=\"baja\">Baja</option>\n            </select>\n        </div>\n        <div class=\"col-md-2\"></div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <!-- <div class=\"form-group\">\n            <label for=\"tarea\">Asignar persona</label>\n            <input\n              required\n              style=\"background-color: white;\"\n              placeholder=\"Resumen tarea\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n              #tarea=\"ngModel\"\n              required\n              minlength=\"4\"\n              name=\"tarea\"\n              type=\"text\"\n              [(ngModel)]=\"datoregistro.tarea\"\n            />\n          </div> -->\n        </div>\n        <div class=\"col-md-4\">\n\n            \n<!-- \n\n            <div class=\"form-group\">\n                <label for=\"id_recurrencia\">Recurrencia</label>\n                <select\n                  required\n                  style=\"background-color: white;\"\n                  class=\"form-control form-control-sm\"\n                  name=\"id_recurrencia\"\n                  #estatus=\"ngModel\"\n                  [(ngModel)]=\"datoregistro.id_recurrencia\"\n                >\n                  <option [ngValue]=\"null\">Seleccione recurrencia</option>\n                  <option\n                    *ngFor=\"let recurrencia of recurrencias\"\n                    value=\"{{ recurrencia.id_recurrencia }}\"\n                  >\n                    {{ recurrencia.recurrencia_name }}\n                  </option>\n                </select>\n              </div>\n\n -->\n\n\n\n\n\n        </div>\n        <div class=\"col-md-4\">\n          <div *ngIf=\"datoregistro.id_categoria === '3'\">\n            <label for=\"dp\">Fecha fin acción</label>\n            <div class=\"input-group\">\n              <input\n                class=\"form-control\"\n                placeholder=\"yyyy-mm-dd\"\n                name=\"dp\"\n                [(ngModel)]=\"model\"\n                ngbDatepicker\n                #d=\"ngbDatepicker\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  class=\"btn btn-outline-secondary calendar\"\n                  (click)=\"d.toggle()\"\n                  type=\"button\"\n                ></button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-4\">\n\n        </div>\n        <div class=\"col-4\"></div>\n        <div class=\"col-4\"></div>\n      </div>\n    </div>\n    <div class=\"col-md-6 pt-5\">\n      <div class=\"form-group\">\n        <label for=\"observaciones\">{{ \"txtObservaciones\" | translate }}</label>\n\n        <ckeditor\n          (ready)=\"onReady($event)\"\n          rows=\"10\"\n          placeholder=\"Observaciones\"\n          #observaciones=\"ngModel\"\n          maxlength=\"2000\"\n          name=\"observaciones\"\n          [(ngModel)]=\"datoregistro.observaciones\"\n          [editor]=\"Editor\"\n          data=\"\"\n        ></ckeditor>\n      </div>\n\n      <div class=\"form-group text-center\">\n        <button (click)=\"altaRegistro()\" class=\"btn btn-primary colortopacio\">\n          {{ \"txtAgregar\" | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-configuracion',\r\n    templateUrl: './configuracion.pages.html'\r\n})\r\n\r\nexport class ConfiguracionPage {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"page-content\" id=\"content\">\r\n  <app-header></app-header>\r\n  <app-menu></app-menu>\r\n\r\n  \r\n  <div class=\"row m-2\">\r\n    <div class=\"col-md-12 mt-4\">\r\n      <h3>Configuración</h3>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\"><a [routerLink]=\"['/', 'home']\">Home</a></li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">Configuración</li>\r\n        </ol>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n  <div class=\"row m-2 mt-4\">\r\n    <div class=\"col-md-12 \">\r\n      <table class=\"table table-hover table-sm \">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Acciones\r\n            </th>\r\n            <th>\r\n              categoria\r\n            </th>\r\n            <th>\r\n              recurrencia\r\n            </th>\r\n            <th>\r\n              Status\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr class=\"table-active\">\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-descarga',\r\n    templateUrl: './descarga.pages.html'\r\n})\r\n\r\nexport class DescargaPage {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"page-content\" id=\"content\">\r\n  <app-header></app-header>\r\n  <app-menu></app-menu>\r\n\r\n  \r\n  <div class=\"row m-2\">\r\n    <div class=\"col-md-12 mt-4\">\r\n      <h3>Descarga</h3>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\"><a [routerLink]=\"['/', 'home']\">Home</a></li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">Descarga</li>\r\n        </ol>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n  <div class=\"row m-2 mt-4\">\r\n    <div class=\"col-md-12 \">\r\n      <table class=\"table table-hover table-sm \">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Acciones\r\n            </th>\r\n            <th>\r\n              categoria\r\n            </th>\r\n            <th>\r\n              recurrencia\r\n            </th>\r\n            <th>\r\n              Status\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr class=\"table-active\">\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <app-footer></app-footer>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../models/issue';\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Roles } from '../models/roles';\nimport { Recurrencias } from '../models/recurrencias';\nimport { Estados } from '../models/estados';\nimport { Categorias } from '../models/categorias';\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\n@Component({\n  selector: 'app-detalle',\n  templateUrl: './detalle.component.html'\n  \n})\n\n\n\nexport class DetalleComponent implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:Issue = new Issue();\n  registropersona:Seguimiento = new Seguimiento();\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n  roles: Roles[] = [];\n    recurrencias: Recurrencias[] = [];\n    estados: Estados [] = [];\n    categorias: Categorias [] = [];\n    personas: Personas [] = [];\n    suscripcion: Seguimiento[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n    datoregistro = {\n      id_seguimiento: null,\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id_tarea'),\n      id_persona: null\n    }\n  constructor(private httpClient: HttpClient,private registroService: DetalleService,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n\n                this.dias = [\n                  {name:'OptionA', value:'first_opt', checked:true},\n                  {name:'OptionB', value:'second_opt', checked:false},\n                  {name:'OptionC', value:'third_opt', checked:true}\n                 ];\n \n\n                \n\n        //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n      //cargo los estados para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/estados_read.php').subscribe(result => {\n          this.estados = result;\n        }, error => console.error(error));\n       //cargo las recurrencias para los combos select\n       httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/recurrencias_read.php').subscribe(result => {\n          this.recurrencias = result;\n        }, error => console.error(error));\n      //cargo las categorias para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/categorias_read.php').subscribe(result => {\n          this.categorias = result;\n        }, error => console.error(error));        \n      //cargo las personas para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n        this.personas = result;\n      }, error => console.error(error));   \n     //cargo el listado de personas para esta ID tarea\n     httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_suscritas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n      this.suscripcion = result;\n     }, error => console.error(error));\n\n\n\n\n              }\n\n  ngOnInit(){\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id_tarea');\n    this.registroService.getPerson ( id_tarea )\n      .subscribe( (respuesta:Issue) => {\n         this.registro = respuesta;\n         this.registro.id_tarea =   id_tarea;\n         console.log(id_tarea);\n      });\n\n  }\n\n\n  recarga(){ \n    location.reload();\n  }\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  guardarregistro( form: NgForm){\n     if(this.registro.tarea=='' || this.registro.hora=='' || this.registro.estatus=='' ){\n      Swal.fire({\n        text: 'Los campos obligatorios no pueden quedar vacíos',\n        icon: 'error',  \n        showConfirmButton : true\n      }); \n     } else {\n      var patronHora = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n      var horaResult = patronHora.test(this.registro.hora);\n\n      if(horaResult==false){\n        Swal.fire({\n          text: 'El campo Hora debe cumplir con el formato adecuado',\n          icon: 'error',  \n          showConfirmButton : true\n        });\n      } else {\n        let peticion: Observable<any>;\n        peticion = this.registroService.actualizarRegistro(this.registro);\n        peticion.subscribe( respuesta => {\n          Swal.fire({\n            title: this.registro.tarea,\n            text: 'Registro modificado',\n            icon: 'success',  \n            showConfirmButton : false\n          }),this.recarga();  \n         \n        });\n\n      }\n\n    }\n\n  }\n\n\n\n\n\n  guardarseguimiento(){\n\n    if(this.datoregistro.id_persona==null){\n     Swal.fire({\n       text: 'Debe seleccionar a alguien!',\n       icon: 'error',  \n       showConfirmButton : true\n     }); \n    \n    } else {\n\n       let peticion: Observable<any>;\n       peticion = this.registroService.actualizarRegistroSeguimiento(this.datoregistro);\n       peticion.subscribe( respuesta => {\n         Swal.fire({\n           title: this.datoregistro.id_persona,\n           text: 'Persona asignada',\n           icon: 'success',  \n           showConfirmButton : false\n         }),this.recarga();  \n       });\n\n\n   }\n }\n\n\n\n\n   //eliminar registro      \n   eliminarpersona ( registro: Seguimiento, i:string){\n\n    Swal.fire({\n        title: `¿Desea elimina a esta persona del seguimiento?`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n      console.log(\"id seguimiento: \",registro.id_seguimiento);\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"id_seguimiento\": registro.id_seguimiento });\n            this.registroService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.id_seguimiento,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n// registro: any = {};\n\n\n//   constructor( private activatedRoute: ActivatedRoute, \n//                private _registroService: registrosService \n//                ) {\n\n//     this.activatedRoute.params.subscribe ( params => {\n//       this.registro = this._registroService.getPerson( params['id'] );\n//     })\n\n//    }\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.tarea }} - #{{ registro.id_tarea }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <form (ngSubmit)=\"guardarregistro(f)\" #f=\"ngForm\">\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.fecha | date: \"dd/MM/y HH:mm\"\n          }}</em>\n          | {{ \"txtUltimaModificacion\" | translate }}:\n          <em class=\"text-muted\" *ngIf=\"registro.fechamodi == null\"\n            >nunca modificado</em\n          >\n          <em class=\"text-muted\">{{\n            registro.fechamodi | date: \"dd/MM/y HH:mm\"\n          }}</em>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-7 alturaminima mb-5\">\n        <input\n          type=\"hidden\"\n          class=\"form-control\"\n          name=\"id_tarea\"\n          readonly\n          [(ngModel)]=\"registro.id_tarea\"\n        />\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group\">\n              <label for=\"tarea\">\n                {{ \"txtTarea\" | translate }}\n              </label>\n              <input\n                name=\"tarea\"\n                required\n                class=\"form-control form-control-sm\"\n                [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n                #tarea=\"ngModel\"\n                minlength=\"4\"\n                type=\"text\"\n                [(ngModel)]=\"registro.tarea\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"hora\">\n                {{ \"txtHora\" | translate }}\n              </label>\n              <input\n                name=\"hora\"\n                required\n                id=\"reloj\"\n                style=\"background-color: white;\"\n                placeholder=\"00:00\"\n                class=\"form-control form-control-sm hora\"\n                [class.is-invalid]=\"hora.invalid && hora.touched\"\n                #hora=\"ngModel\"\n                pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n                minlength=\"5\"\n                maxlength=\"5\"\n                type=\"text\"\n                [(ngModel)]=\"registro.hora\"\n                [ngxTimepicker]=\"fullTime\"\n                [format]=\"24\"\n                readonly\n              />\n\n              <ngx-material-timepicker\n                #fullTime\n                [minutesGap]=\"30\"\n              ></ngx-material-timepicker>\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"estatus\">\n                {{ \"txtStatus\" | translate }}\n              </label>\n\n              <select\n                required\n                class=\"form-control form-control-sm\"\n                name=\"estatus\"\n                [class.is-invalid]=\"estatus.invalid && estatus.touched\"\n                #estatus=\"ngModel\"\n                [(ngModel)]=\"registro.estatus\"\n                ><option value=\"{{ registro.estatus }}\" selected>{{\n                  registro.estatus\n                }}</option>\n                <option value=\"OK\">OK</option>\n                <option value=\"KO\">KO</option>\n                <option value=\"OK-INC\">OK-INC</option>\n                <option value=\"PENDIENTE\">PENDIENTE</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"id_categoria\">Categoría </label>\n              <select\n                required\n                style=\"background-color: white;\"\n                class=\"form-control form-control-sm\"\n                name=\"id_categoria\"\n                placeholder=\"Seleccione categoria\"\n                #id_categoria=\"ngModel\"\n                [(ngModel)]=\"registro.id_categoria\"\n              >\n                <option\n                  *ngFor=\"let categoria of categorias\"\n                  value=\"{{ categoria.id_categoria }}\"\n                >\n                  {{ categoria.categoria_name }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n<!--acciones variables-->\n        <div class=\"row\">\n          <div class=\"col-md-12 mb-3\" >\n            <!--accion puntual-->\n            <div *ngIf=\"registro.id_categoria === '3'\">\n               <app-accion></app-accion> \n            </div>\n            <!--/end accion puntual-->\n            <!--check-->\n            <div *ngIf=\"registro.id_categoria === '1'\">\n              <app-check></app-check>\n            </div>\n            <!--end check-->\n          </div>  \n        </div>\n<!--/end acciones variables-->\n        <div class=\"row\">\n          <div class=\"col-4\">\n            <label for=\"prioridad\">Prioridad</label>\n            <select\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"prioridad\"\n              placeholder=\"Seleccione prioridad\"\n              #prioridad=\"ngModel\"\n              [(ngModel)]=\"registro.prioridad\"\n            >\n              <option [ngValue]=\"null\" selected>Seleccione prioridad</option>\n              <option value=\"alta\">Alta</option>\n              <option value=\"media\">Media</option>\n              <option value=\"baja\">Baja</option>\n            </select>\n          </div>\n          <div class=\"col-4\"></div>\n          <div class=\"col-4\"></div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12 mt-3 mb-3\">\n            <hr />\n\n            <div class=\"row\">\n              <div class=\"col-10 mt-2 mb-2 pt3 pb3\">\n                <h5 class=\"titolpetit\">\n                  Personas que participan en el seguimiento\n                </h5>\n              </div>\n              <div class=\"col-2 mt-2 mb-2 text-right\">\n                <a\n                  alt=\"Asignar nueva persona de seguimiento\"\n                  title=\"Asignar nueva persona de seguimiento\"\n                  (click)=\"open(content)\"\n                  class=\"altaseguimiento\"\n                  ><i class=\"fa fa-plus fa-1\"></i\n                ></a>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div\n                class=\"col-12 mt-1 mb-1 pb1 pt1\"\n                *ngFor=\"let suscripcio of suscripcion\"\n              >\n                <div class=\"row\">\n                  <div class=\"col-4\">\n                    {{ suscripcio.id_seguimiento }} - {{ suscripcio.nombres }}\n                  </div>\n                  <div class=\"col-4\">{{ suscripcio.email }}</div>\n                  <div class=\"col-2\">{{ suscripcio.rol_name }}</div>\n                  <div class=\"col-2 text-right\">\n                    <a\n                      alt=\"Eliminar persona de seguimiento\"\n                      title=\"Eliminar persona de seguimiento\"\n                      (click)=\"eliminarpersona(suscripcio, i)\"\n                      class=\"altaseguimiento\"\n                      ><i class=\"fa fa-trash\"></i\n                    ></a>\n                  </div>\n                </div>\n\n                <hr class=\"bdott\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group text-center\">\n              <button type=\"submit\" class=\"btn btn-info mr-2\">\n                {{ \"txtModificar\" | translate }}\n              </button>\n              <button [routerLink]=\"['/home']\" class=\"btn btn-warning\">\n                {{ \"txtVolver\" | translate }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-5 alturaminima mb-5\">\n        <div class=\"form-group\">\n          <label for=\"observaciones\">{{\n            \"txtObservaciones\" | translate\n          }}</label>\n          <ckeditor\n          [config]=\"{ toolbar: [ 'link', '|', 'bold', 'italic' ] }\"\n            (ready)=\"onReady($event)\"\n            id=\"ibmeditor\"\n            placeholder=\"Observaciones\"\n            #observaciones=\"ngModel\"\n            maxlength=\"2000\"\n            name=\"observaciones\"\n            [(ngModel)]=\"registro.observaciones\"\n            [editor]=\"Editor\"\n            data=\"\"\n          ></ckeditor>\n        </div>\n      </div>\n    </div>\n  </form>\n\n  <ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Seguimiento de la issue\n      </h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <input\n          name=\"id_tarea\"\n          type=\"hidden\"\n          #id_tarea=\"ngModel\"\n          [(ngModel)]=\"datoregistro.id_tarea\"\n        />\n\n        <label for=\"id_persona\"\n          >Seleccione la persona para designarle el seguimiento</label\n        >\n        <div class=\"input-group\">\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm\"\n            name=\"id_persona\"\n            placeholder=\"Seleccione persona\"\n            #id_persona=\"ngModel\"\n            [(ngModel)]=\"datoregistro.id_persona\"\n          >\n            <option [ngValue]=\"null\">Seleccione persona</option>\n            <option\n              *ngFor=\"let persona of personas\"\n              value=\"{{ persona.id_persona }}\"\n            >\n              {{ persona.nombres }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button (click)=\"guardarseguimiento()\" class=\"btn btn-info\">\n        Añadir persona\n      </button>\n    </div>\n  </ng-template>\n\n  <app-footer></app-footer>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../models/issue';\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Roles } from '../models/roles';\nimport { Recurrencias } from '../models/recurrencias';\nimport { Estados } from '../models/estados';\nimport { Categorias } from '../models/categorias';\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\nimport { DetalleHistoricoService } from '../services/detallehistorico.service';\n@Component({\n  selector: 'app-detallehistorico',\n  templateUrl: './detallehistorico.component.html'\n  \n})\n\n\n\nexport class DetalleHistoricoComponent implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:Issue = new Issue();\n  registropersona:Seguimiento = new Seguimiento();\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n  roles: Roles[] = [];\n    recurrencias: Recurrencias[] = [];\n    estados: Estados [] = [];\n    categorias: Categorias [] = [];\n    personas: Personas [] = [];\n    suscripcion: Seguimiento[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n    datoregistro = {\n      id_seguimiento: null,\n      id_tarea: this.activatedRoute.snapshot.paramMap.get('id'),\n      id_persona: null\n    }\n  constructor(private httpClient: HttpClient,private registroService: DetalleHistoricoService,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n\n                this.dias = [\n                  {name:'OptionA', value:'first_opt', checked:true},\n                  {name:'OptionB', value:'second_opt', checked:false},\n                  {name:'OptionC', value:'third_opt', checked:true}\n                 ];\n \n\n                \n\n        //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n      //cargo los estados para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/estados_read.php').subscribe(result => {\n          this.estados = result;\n        }, error => console.error(error));\n       //cargo las recurrencias para los combos select\n       httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/recurrencias_read.php').subscribe(result => {\n          this.recurrencias = result;\n        }, error => console.error(error));\n      //cargo las categorias para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/categorias_read.php').subscribe(result => {\n          this.categorias = result;\n        }, error => console.error(error));        \n      //cargo las personas para los combos select\n      httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n        this.personas = result;\n      }, error => console.error(error));   \n     //cargo el listado de personas para esta ID tarea\n     httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/personas_suscritas_seguimiento_read.php?id_tarea=' + this.datoregistro.id_tarea).subscribe(result => {\n      this.suscripcion = result;\n     }, error => console.error(error));\n\n\n\n\n              }\n\n  ngOnInit(){\n    const id_tarea = this.activatedRoute.snapshot.paramMap.get('id_tarea');\n    this.registroService.getPerson ( id_tarea )\n      .subscribe( (respuesta:Issue) => {\n         this.registro = respuesta;\n         this.registro.id_tarea =   id_tarea;\n         console.log(this.registro.fechamodi);\n      });\n\n  }\n\n\n  recarga(){ \n    location.reload();\n  }\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n   //eliminar registro      \n   eliminarpersona ( registro: Seguimiento, i:string){\n\n    Swal.fire({\n        title: `¿Desea elimina a esta persona del seguimiento?`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n      console.log(\"id seguimiento: \",registro.id_seguimiento);\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"id_seguimiento\": registro.id_seguimiento });\n            this.registroService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.id_seguimiento,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.tarea }} - #{{ registro.id_tarea }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.fecha | date: \"dd/MM/y HH:mm\"\n          }}</em>\n          | {{ \"txtUltimaModificacion\" | translate }}:\n          <em class=\"text-muted\" *ngIf=\"registro.fechamodi == null\"\n            >nunca modificado</em\n          >\n          <em class=\"text-muted\">{{\n            registro.fechamodi | date: \"dd/MM/y HH:mm\"\n          }}</em>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-7 alturaminima mb-5\">\n        <input\n          type=\"hidden\"\n          class=\"form-control\"\n          name=\"id\"\n          readonly\n          [(ngModel)]=\"registro.id_tarea\"\n        />\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group\">\n              <label for=\"tarea\">\n                {{ \"txtTarea\" | translate }}\n              </label>\n              <input\n                name=\"tarea\"\n                required\n                class=\"form-control form-control-sm\"\n                [class.is-invalid]=\"tarea.invalid && tarea.touched\"\n                #tarea=\"ngModel\"\n                minlength=\"4\"\n                type=\"text\"\n                [(ngModel)]=\"registro.tarea\"\n                disabled\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"hora\">\n                {{ \"txtHora\" | translate }}\n              </label>\n              <input\n                name=\"hora\"\n                required\n                id=\"reloj\"\n                style=\"background-color: white;\"\n                placeholder=\"00:00\"\n                class=\"form-control form-control-sm hora\"\n                [class.is-invalid]=\"hora.invalid && hora.touched\"\n                #hora=\"ngModel\"\n                pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n                minlength=\"5\"\n                maxlength=\"5\"\n                type=\"text\"\n                [(ngModel)]=\"registro.hora\"\n             \n                disabled\n              />\n\n              <ngx-material-timepicker\n                #fullTime\n                [minutesGap]=\"30\"\n              ></ngx-material-timepicker>\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"estatus\">\n                {{ \"txtStatus\" | translate }}\n              </label>\n\n              <select \n              disabled\n                class=\"form-control form-control-sm\"\n                name=\"estatus\"\n                [class.is-invalid]=\"estatus.invalid && estatus.touched\"\n                #estatus=\"ngModel\"\n                [(ngModel)]=\"registro.estatus\"\n                ><option value=\"{{ registro.estatus }}\" selected>{{\n                  registro.estatus\n                }}</option>\n                <option value=\"OK\">OK</option>\n                <option value=\"KO\">KO</option>\n                <option value=\"OK-INC\">OK-INC</option>\n                <option value=\"PENDIENTE\">PENDIENTE</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"id_categoria\">Categoría </label>\n              <select \n                required\n                style=\"background-color: white;\"\n                class=\"form-control form-control-sm\"\n                name=\"id_categoria\"\n                \n                #id_categoria=\"ngModel\"\n                [(ngModel)]=\"registro.id_categoria\"\n                \n                disabled\n              >\n                <option\n                  *ngFor=\"let categoria of categorias\"\n                  value=\"{{ categoria.id_categoria }}\"\n                >\n                  {{ categoria.categoria_name }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n<!--acciones variables-->\n        <div class=\"row\">\n          <div class=\"col-md-12 mb-3\" >\n            <!--accion puntual-->\n            <div *ngIf=\"registro.id_categoria === '3'\">\n               <app-accionhistorico></app-accionhistorico> \n            </div>\n            <!--/end accion puntual-->\n            <!--check-->\n            <div *ngIf=\"registro.id_categoria === '1'\">\n              <app-check></app-check>\n            </div>\n            <!--end check-->\n          </div>  \n        </div>\n<!--/end acciones variables-->\n        <div class=\"row\">\n          <div class=\"col-4\">\n            <label for=\"prioridad\">Prioridad</label>\n            <select disabled\n              required\n              style=\"background-color: white;\"\n              class=\"form-control form-control-sm\"\n              name=\"prioridad\"\n              placeholder=\"Seleccione prioridad\"\n              #prioridad=\"ngModel\"\n              [(ngModel)]=\"registro.prioridad\"\n            >\n              <option [ngValue]=\"null\" selected>Seleccione prioridad</option>\n              <option value=\"alta\">Alta</option>\n              <option value=\"media\">Media</option>\n              <option value=\"baja\">Baja</option>\n            </select>\n          </div>\n          <div class=\"col-4\"></div>\n          <div class=\"col-4\"></div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12 mt-3 mb-3\">\n            <hr />\n\n            <div class=\"row\">\n              <div class=\"col-10 mt-2 mb-2 pt3 pb3\">\n                <h5 class=\"titolpetit\">\n                  Personas que participan en el seguimiento\n                </h5>\n              </div>\n              <div class=\"col-2 mt-2 mb-2 text-right\">\n              \n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div\n                class=\"col-12 mt-1 mb-1 pb1 pt1\"\n                *ngFor=\"let suscripcio of suscripcion\"\n              >\n                <div class=\"row\">\n                  <div class=\"col-4\">\n                    {{ suscripcio.id_seguimiento }} - {{ suscripcio.nombres }}\n                  </div>\n                  <div class=\"col-4\">{{ suscripcio.email }}</div>\n                  <div class=\"col-2\">{{ suscripcio.rol_name }}</div>\n                  <div class=\"col-2 text-right\">\n                   \n                  </div>\n                </div>\n\n                <hr class=\"bdott\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group text-center\">\n              <!-- <button type=\"submit\" class=\"btn btn-info mr-2\">\n                {{ \"txtModificar\" | translate }}\n              </button> -->\n              <button [routerLink]=\"['/historico']\" class=\"btn btn-warning\">\n                {{ \"txtVolver\" | translate }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-5 alturaminima mb-5\">\n        <div class=\"form-group\">\n          <label for=\"observaciones\">{{\n            \"txtObservaciones\" | translate\n          }}</label>\n          <ckeditor\n          [config]=\"{ toolbar: [ 'link', '|', 'bold', 'italic' ] }\"\n            (ready)=\"onReady($event)\"\n            id=\"ibmeditor\"\n            placeholder=\"Observaciones\"\n            #observaciones=\"ngModel\"\n            maxlength=\"2000\"\n            name=\"observaciones\"\n            [(ngModel)]=\"registro.observaciones\"\n            [editor]=\"Editor\"\n            data=\"\"\n            disabled\n          ></ckeditor>\n        </div>\n      </div>\n    </div>\n \n\n \n\n  <app-footer></app-footer>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\nimport { DetalleService } from '../services/detalle.service';\nimport { ActivatedRoute, Router  } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { DatePipe } from '@angular/common';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport { Constantes } from '../models/constantes.model';\n\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal,ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Personas } from '../models/personas';\nimport { Seguimiento } from '../models/seguimiento';\nimport { DetalleHistoricoService } from '../services/detallehistorico.service';\nimport { ApiPersonas } from '../services/apipersonas.service';\nimport { Roles } from '../models/roles';\n@Component({\n  selector: 'app-detallepersona',\n  templateUrl: './detallepersona.component.html'\n  \n})\n\n\n\nexport class DetallePersona implements OnInit{\n  closeResult = '';\n  model: NgbDateStruct;\n  registro:Personas = new Personas();\n\n  public Editor = ClassicEditor;\n  dias: { name: string; value: string; checked: boolean; }[];\n  \n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n\n    personas: Personas [] = [];\n    roles: Roles[] = [];\n    PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n    datosborrado: string;\n    numero: number;\n    final: Observable<Object>;\n    dregistro = null;\n\n    fieldTextType: boolean;\n    datoregistro = {\n      id_persona: this.activatedRoute.snapshot.paramMap.get('id_persona'),\n      nombres: null,\n      telefono: null,\n      email:  null,\n      direccion: null,\n      registrado: null,\n      id_rol: null,\n      password:  null,\n      imagen:  null\n    }\n\n    \n\n  constructor(private httpClient: HttpClient,private registroService: ApiPersonas,\n              private activatedRoute: ActivatedRoute,private router: Router,\n              private modalService: NgbModal){\n\n       //cargo los roles para los combos select\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\n          this.roles = result;\n        }, error => console.error(error));\n\n              }\n\n\n\n  ngOnInit(){\n\n    const id_persona = this.activatedRoute.snapshot.paramMap.get('id_persona');\n    this.registroService.getPerson ( id_persona )\n      .subscribe( (respuesta:Personas) => {\n         this.registro = respuesta;\n         this.registro.id_persona =   id_persona;\n        \n      });\n\n  }\n\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  recarga(){ \n    location.reload();\n  }\n\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  \n\n\n\n  //alta de registro\n  altaRegistro() {\n\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.nombres==null || this.datoregistro.email==null || this.datoregistro.id_rol==null || this.datoregistro.password==null){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos obligatorios no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.registroService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.nombres,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : false\n          }),this.recarga();      \n        });\n    }\n  }\n\n  \n\n\n  guardarregistro( form: NgForm){\n    console.log(this.registro);\n    if(\n      this.registro.nombres=='' || \n      this.registro.telefono=='' || \n      this.registro.email=='' || \n      this.registro.password=='' ||\n      this.registro.direccion=='' ||\n      this.registro.id_rol=='' \n      ){\n     Swal.fire({\n       text: 'Los campos obligatorios no pueden quedar vacíos',\n       icon: 'error',  \n       showConfirmButton : true\n     }); \n    }  else {\n            //validacion email      \n            var patronEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/;\n            var emailResult = patronEmail.test(this.registro.email);\n            if(emailResult==false){\n              Swal.fire({\n                text: 'El campo E-mail debe cumplir con el formato adecuado',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else \n            // validacion password\n            // al menos 1 número, una minúscula y una mayuscula\n            // al menos 6 carácteres\n            var patronPassword = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/;\n            var passwordResult = patronPassword.test(this.registro.password);\n            if(passwordResult==false){\n              Swal.fire({\n                text: 'El campo Password debe tener al menos 1 número, una minúscula y una mayúscula y como mínimo 6 carácteres',\n                icon: 'error',  \n                showConfirmButton : true\n              });\n            } else {\n              let peticion: Observable<any>;\n              peticion = this.registroService.actualizarRegistro(this.registro);\n              peticion.subscribe( respuesta => {\n                Swal.fire({\n                  title: this.registro.nombres,\n                  text: 'Registro modificado',\n                  icon: 'success',  \n                  showConfirmButton : false\n                }),this.recarga();  \n              });\n            }\n\n   }\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4 tituloseccion\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ registro.nombres }} - #{{ registro.id_persona }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-12\">\n        <div class=\"alert linealbase\">\n          {{ \"txtCreado\" | translate }}:\n          <em class=\"text-muted\">{{\n            registro.registrado | date: \"dd/MM/y HH:mm\"\n          }}</em>\n         \n          \n          \n        </div>\n      </div>\n    </div>\n\n    <div class=\"row m-2 mt-4\">\n      <div class=\"col-md-3 alturaminima mb-5\">\n       \n\n\n\n\n<app-modimagen></app-modimagen>\n\n\n\n\n\n\n\n      </div>\n\n        <div class=\"col-md-9 alturaminima mb-5\">\n\n\n\n        <div class=\"form-group\">\n          <label for=\"nombres\">{{ \"txtNombres\" | translate }}</label>\n          <input\n            required\n            style=\"background-color: white;\"\n            placeholder=\"{{ 'txtNombres' | translate }}\"\n            class=\"form-control form-control-sm\"\n            [class.is-invalid]=\"nombres.invalid && nombres.touched\"\n            #nombres=\"ngModel\"\n            required\n            minlength=\"4\"\n            name=\"nombres\"\n            type=\"text\"\n            [(ngModel)]=\"registro.nombres\"\n          />\n        </div>\n  \n\n        <div class=\"form-group\">\n            <label for=\"telefono\">{{ \"txtTelefono\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txt9digitos' | translate }}\"\n              class=\"form-control form-control-sm\"\n              #telefono=\"ngModel\"\n              minlength=\"9\"\n              name=\"telefono\"\n              type=\"text\"\n              [(ngModel)]=\"registro.telefono\"\n            />\n          </div>\n\n<div class=\"row\">\n  <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"txtEmail\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtEmail' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"email.invalid && email.touched\"\n              #email=\"ngModel\"\n              required\n              [email]=\"true\"\n              name=\"email\"\n              type=\"email\"\n              [(ngModel)]=\"registro.email\"\n            />\n          </div>\n  </div><div class=\"col-md-6\">       \n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"txtPassword\" | translate }}</label>\n            <div class=\"input-group\">\n            <input\n              required\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtPassword' | translate }}\"\n              class=\"form-control form-control-sm\"\n              [class.is-invalid]=\"password.invalid && password.touched\"\n              #password=\"ngModel\"\n              required\n              name=\"password\"\n              type=\"password\"\n              [(ngModel)]=\"registro.password\"\n              [type]=\"fieldTextType ? 'text' : 'password'\"\n            />\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\">\n                <i\n                class=\"fa\"\n                [ngClass]=\"{\n                  'fa-eye-slash': !fieldTextType,\n                  'fa-eye': fieldTextType\n                }\"\n                (click)=\"toggleFieldTextType()\"\n              ></i>\n              </span>\n           </div>\n          </div>\n</div>\n</div>          \n          </div>\n          <div class=\"form-group\">\n            <label for=\"direccion\">{{ \"txtDireccion\" | translate }}</label>\n            <input\n              style=\"background-color: white;\"\n              placeholder=\"{{ 'txtDireccion' | translate }}\"\n              class=\"form-control form-control-sm\"\n              #direccion=\"ngModel\"\n              name=\"direccion\"\n              type=\"text\"\n              [(ngModel)]=\"registro.direccion\"\n            />\n          </div>\n\n\n\n\n        <div class=\"form-group\">\n          <label for=\"id_rol\">{{ \"txtRol\" | translate }}</label>\n          <select\n            required\n            style=\"background-color: white;\"\n            class=\"form-control form-control-sm\"\n            name=\"id_rol\"\n           \n            [class.is-invalid]=\"id_rol.invalid && id_rol.touched\"\n            #id_rol=\"ngModel\"\n            [(ngModel)]=\"registro.id_rol\"\n          >\n          <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\n            {{rol.rol_name}}\n          </option>\n          </select>\n        </div>\n\n        <div class=\"form-group text-center\">\n          <!-- <button (click)=\"guardarregistro()\" class=\"btn btn-primary colortopacio\">\n            {{ \"txtModificar\" | translate }}\n          </button> -->\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    </div>\n \n\n \n\n  <app-footer></app-footer>\n</div>\n","import {Component, ViewChild} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { Issue } from  '../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../models/constantes.model';\nimport { HistoricoService } from '../services/historico.service';\n\n@Component({\n  selector: 'app-historico',\n  templateUrl: './historico.component.html'\n  \n})\n\nexport class HistoricoComponent {\n   \n  personas:Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id: null,\n    fecha: null,\n    tarea: null,\n    issueg: null,\n    hora: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  \n  constructor(private httpClient: HttpClient, private historicoService: HistoricoService) {\n        this.fetch(data => {\n          // cache\n            this.temp = [...data];\n            this.rows = data;\n        });\n\n\n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit(){\n    this.fetch(data => {\n        this.temp = [...data];\n        this.rows = data;\n      });\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n      location.reload();\n  }\n\n  //cargamos el listado\n  fetch(cb) {\n    if(cb){\n      const req = new XMLHttpRequest();\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/read_historico.php`);\n      req.onload = () => {\n        cb(JSON.parse(req.response));\n      };\n      req.send();\n    }\n  }\n\n\n\n\n   //eliminar registro      \n   borrarRegistro ( registro: Issue, i:string){\n\n    Swal.fire({\n        title: `¿Desea borrar el registro histórico ${registro.tarea}`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"tarea\": registro.tarea, \"id_tarea\": registro.id_tarea });\n            this.historicoService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.tarea,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function(d) {\n      return  d.tarea.toLowerCase().indexOf(val) !== -1 || d.hora.toLowerCase().indexOf(val) !== -1|| d.estatus.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Historial {{ \"txtRegistros\" | translate }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2 mt-4\">\n    <div class=\"col-md-12 alturaminima mb-5\">\n\n<div class=\"row\">\n  <div class=\"col-6\">\n    <div class=\"form\">\n      <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n        <input\n          matInput\n          #filter\n          placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\n          (keyup)=\"updateFilter($event)\"\n        />\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"col-6 text-right\">\n  </div>\n</div>\n\n      <ngx-datatable\n        #mydatatable\n        class=\"material striped\"\n        headerHeight=\"50\"\n        [limit]=\"15\"\n        [columnMode]=\"'force'\"\n        footerHeight=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"id\" [maxWidth]=\"90\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <div class=\"text-center\">{{ row.id }}</div>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Fecha\" [maxWidth]=\"200\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n              {{ value | slice: 0:90 }}\n\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Tarea\" [maxWidth]=\"1810\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n\n              {{ value | slice: 0:90 }}\n           \n          \n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Hora\" [maxWidth]=\"110\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n           \n              {{ value }}\n            \n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Estatus\" [maxWidth]=\"90\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-row=\"row\"\n            let-value=\"value\"\n          >\n            <div\n              [ngClass]=\"{\n                positive: row.estatus == 'OK',\n                negative: row.estatus == 'KO',\n                posnegtive: row.estatus == 'OK-INC'\n              }\"\n            >\n              \n                {{ value }}\n              \n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"ver\" [maxWidth]=\"80\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-row=\"row\"\n          >\n            <div class=\"text-center\">\n              <div class=\"row\">\n                <div class=\"col-12 p0 m0\">\n                  <a\n                    [routerLink]=\"['/detallehistorico', row.id]\"\n                    class=\"btn btn-warning botonsizes mr-1\"\n                    ><i class=\"fa fa-eye\"></i\n                  ></a>\n                  <button\n                    (click)=\"borrarRegistro(row, i)\"\n                    class=\"btn btn-warning botonsizes\"\n                  >\n                    <i class=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n\n\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","import {Component, ViewChild} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { ApiService } from '../services/apiregistros.service';\nimport { Issue } from  '../models/issue';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Constantes } from '../models/constantes.model';\n\n@Component({\n  selector: 'app-app',\n  templateUrl: './home.component.html'\n  \n})\n\nexport class HomeComponent {\n   \n  personas:Issue[] = [];\n  issue: Issue = new Issue();\n  editing = {};\n  rows = [];\n  temp = [];\n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  numero: number;\n  final: Observable<Object>;\n  dregistro = null;\n  datoregistro = {\n    id_tarea: null,\n    tarea: null,\n    issueg: null,\n    hora: null,\n    hour: null,\n    estatus: null,\n    status: null,\n    observaciones: null\n  }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  ColumnMode = ColumnMode;\n  campo: any;\n  id_tarea: any;\n  valor: any;\n  ever: any;\n  datos: string;\n  datosborrado: string;\n  \n  constructor(private httpClient: HttpClient, private apiService: ApiService) {\n        this.fetch(data => {\n          // cache\n            this.temp = [...data];\n            this.rows = data;\n        });\n\n\n  }\n\n  //el ngoninit nos servira para recargar en caso de error de validacion\n  ngOnInit(){\n    this.fetch(data => {\n        this.temp = [...data];\n        this.rows = data;\n      });\n  }\n\n  //reload pagina al usar sweet alerts etc\n  recarga(){ \n      location.reload();\n  }\n\n  //cargamos el listado\n  fetch(cb) {\n    if(cb){\n      const req = new XMLHttpRequest();\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/registro_read.php`);\n      req.onload = () => {\n        cb(JSON.parse(req.response));\n      };\n      req.send();\n    }\n  }\n\n  //alta de registro\n  altaRegistro() {\n\n    //si los campos obligatorios nos llegan vacios\n    if(this.datoregistro.tarea==null || this.datoregistro.hora==null || this.datoregistro.estatus==null){\n      Swal.fire({\n        title: 'Revise los datos',\n        text: 'Los campos no pueden estar vacíos!!',\n        icon: 'error',\n      });   \n    } else {\n      //enviamos el array a la funcions del server\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\n        datos => {\n          Swal.fire({\n            title: this.datoregistro.tarea,\n            text: 'Registro añadido',\n            icon: 'success',  \n            showConfirmButton : false\n          }),this.recarga();      \n        });\n    }\n  }\n\n  //actualización campos inline\n  updateValue(event, cell, rowIndex) {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n    this.campo = cell;\n    this.id_tarea = event.target.title;\n    this.valor = event.target.value;\n    this.ever = this.campo,this.id_tarea,this.valor;\n    this.datos = JSON.stringify({ \"campo\": this.campo, \"id_tarea\": this.id_tarea, \"valor\": this.valor });\n\n    //validacion del formato de la hora\n    var patronHora = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n    var horaResult = patronHora.test(this.valor);\n\n    //si el campo que recibo es hora...\n    if(this.campo == \"hora\"){\n      //...valido su formato\n      if(horaResult==false){\n        Swal.fire({\n          title: 'Revise los datos',\n          text: 'El campo \"hora\" debe de cumplir con los requerimientos!!',\n          icon: 'error',\n        }); \n        this.ngOnInit();  \n      } \n      // else {\n      //   Swal.fire({\n      //     text: 'Registro actualizado',\n      //     icon: 'success',  \n      //     showConfirmButton : false\n      //   })\n      // }\n    }\n    //el campo que recibo es tarea pero es menor de 3 caracteres\n    else if(this.campo == \"tarea\" && this.valor.length < 3){\n       \n          Swal.fire({\n            title: 'Revise los datos',\n            text: 'El campo \"tarea\" debe contener como mínimo tres carácteres!!',\n            icon: 'error',\n          });   \n          this.ngOnInit();  \n             \n    } else {\n      //todo Ok llamo al servicio\n      this.apiService.modiRegistro(this.datos).subscribe(\n        datos => {\n          Swal.fire({\n            text: 'Registro actualizado',\n            icon: 'success',  \n            showConfirmButton : false\n          })\n      \n        });\n    }\n\n  }\n\n\n   //eliminar registro      \n   borrarRegistro ( registro: Issue, i:string){\n\n    Swal.fire({\n        title: `¿Desea borrar el registro ${registro.tarea}`,\n        text: 'Confirme si desea borrar el registro',\n        icon: 'question',\n        showConfirmButton: true,\n        showCancelButton: true\n\n    }).then( respuesta => {\n        if ( respuesta.value ) {\n            this.datosborrado = JSON.stringify({ \"tarea\": registro.tarea, \"id_tarea\": registro.id_tarea });\n            this.apiService.delete( this.datosborrado ).subscribe();\n\n            Swal.fire({\n              title: registro.tarea,\n              text: 'Registro eliminado',\n              icon: 'success',  \n              showConfirmButton : false\n            }),this.recarga();  \n\n        }\n      });\n    }\n\n\n\n  //actualizacion filtro busqueda\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = this.temp.filter(function(d) {\n      return  d.tarea.toLowerCase().indexOf(val) !== -1 || d.hora.toLowerCase().indexOf(val) !== -1|| d.estatus.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // actualizamos las rows\n    this.rows = temp;\n    // Cuando cambie el filtro, regresa a la primera página.\n    this.table.offset = 0;\n  }\n\n\n}","<div class=\"page-content\" id=\"content\">\n  <app-header></app-header>\n  <app-menu></app-menu>\n\n  <div class=\"row m-2\">\n    <div class=\"col-md-12 mt-4\">\n      <h3>{{ \"txtRegistros\" | translate }}</h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/', 'home']\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {{ \"txtRegistros\" | translate }}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row m-2 mt-4\">\n    <div class=\"col-md-12 alturaminima mb-5\">\n\n<div class=\"row\">\n  <div class=\"col-6\">\n    <div class=\"form\">\n      <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n        <input\n          matInput\n          #filter\n          placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\n          (keyup)=\"updateFilter($event)\"\n        />\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"col-6 text-right\">\n    <a alt=\"Nuevo registro\" title=\"nuevo registro\" [routerLink]=\"['/', 'alta']\" class=\"btn btn-info pt4 btn-circle posicionplus\"><i class=\"fa fa-plus fa-3\"></i></a>\n  </div>\n</div>\n\n      <ngx-datatable\n        #mydatatable\n        class=\"material striped\"\n        headerHeight=\"50\"\n        [limit]=\"15\"\n        [columnMode]=\"'force'\"\n        footerHeight=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"id_tarea\" [maxWidth]=\"90\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <div class=\"text-center\">{{ row.id_tarea }}</div>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Tarea\" [maxWidth]=\"1810\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <span\n              title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n              (dblclick)=\"editing[rowIndex + '-tarea'] = true\"\n              *ngIf=\"!editing[rowIndex + '-tarea']\"\n            >\n              {{ value | slice: 0:90 }}\n            </span>\n            <input\n              required\n              autofocus\n              (keyup.enter)=\"updateValue($event, 'tarea', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-tarea']\"\n              type=\"text\"\n              class=\"form-control\"\n              [value]=\"value\"\n              [title]=\"row.id\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Hora\" [maxWidth]=\"110\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n          >\n            <span\n              title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n              (dblclick)=\"editing[rowIndex + '-hora'] = true\"\n              *ngIf=\"!editing[rowIndex + '-hora']\"\n            >\n              {{ value }}\n            </span>\n            <input\n              required\n              class=\"form-control\"\n              min=\"5\"\n              max=\"5\"\n              (onError)=\"(myHandleError)\"\n              pattern=\"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\"\n              [class.is-invalid]=\"hora.invalid && hora.touched\"\n              autofocus\n              (keyup.enter)=\"updateValue($event, 'hora', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-hora']\"\n              type=\"time\"\n              [value]=\"value\"\n              [title]=\"row.id_tarea\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Estatus\" [maxWidth]=\"90\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-row=\"row\"\n            let-value=\"value\"\n          >\n            <div\n              [ngClass]=\"{\n                positive: row.estatus == 'OK',\n                negative: row.estatus == 'KO',\n                posnegtive: row.estatus == 'OK-INC'\n              }\"\n            >\n              <span\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\n                (dblclick)=\"editing[rowIndex + '-estatus'] = true\"\n                *ngIf=\"!editing[rowIndex + '-estatus']\"\n              >\n                {{ value }}\n              </span>\n              <input type=\"hidden\" #varId [value]=\"row.id\" />\n\n              <select\n                class=\"form-control\"\n                name=\"estatus\"\n                *ngIf=\"editing[rowIndex + '-estatus']\"\n                (blur)=\"editing[rowIndex + '-estatus'] = false\"\n                (change)=\"updateValue($event, 'estatus', rowIndex)\"\n                [value]=\"value\"\n                [title]=\"row.id\"\n              >\n                <option value=\"OK\">OK</option>\n                <option value=\"KO\">KO</option>\n                <option value=\"OK-INC\">OK-INC</option>\n              </select>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"ver\" [maxWidth]=\"80\">\n          <ng-template\n            class=\"mat-column-id\"\n            ngx-datatable-cell-template\n            let-row=\"row\"\n          >\n            <div class=\"text-center\">\n              <div class=\"row\">\n                <div class=\"col-12 p0 m0\">\n                  <a\n                    [routerLink]=\"['/detalle', row.id_tarea]\"\n                    class=\"btn btn-warning botonsizes mr-1\"\n                    ><i class=\"fa fa-pencil\"></i\n                  ></a>\n                  <button\n                    (click)=\"borrarRegistro(row, i)\"\n                    class=\"btn btn-warning botonsizes\"\n                  >\n                    <i class=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n\n\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UsuarioModel } from '../../models/usuario.model';\nimport { AuthService } from '../../services/auth.service';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  usuario: UsuarioModel = new UsuarioModel();\n  recordarme= false;\n\n  constructor( private auth: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    if ( localStorage.getItem('email') ){\n      this.usuario.email = localStorage.getItem('email');\n      this.recordarme = true;\n      }\n  }\n\n\n  login(form:NgForm){\n       if( form.invalid ){ return; }\n\n        //alerts de sweet al efectuar el submit\n        Swal.fire({\n          allowOutsideClick: false,\n          icon: 'info',\n          text: 'espere, por favor'\n        });\n        Swal.showLoading();\n        this.auth.login( this.usuario) .subscribe ( respuesta => {\n          //accedemos con exito\n          Swal.close();\n          console.log(respuesta);\n          //recordamos usuario si esta marcado el check\n          if ( this.recordarme ){\n            localStorage.setItem('email', this.usuario.email);\n          }\n          //redireccionamos\n          this.router.navigateByUrl('/home');\n        }, (err) => {\n          console.log(err.error.error.message);\n          //han habido errores de autenticacion\n          Swal.fire({\n            allowOutsideClick: false,\n            icon: 'error',\n            title: 'Error al autentificar',\n            text: err.error.error.message\n          });\n        });\n  }\n\n}\n","<div class=\"limiter animated fadeInLeft\">\n    <div class=\"container-login100\">\n        <div class=\"wrap-login100 p-t-50 p-b-90\">\n            <form (ngSubmit)=\"login( f )\"\n            #f=\"ngForm\"\n            class=\"login100-form validate-form flex-sb flex-w\">\n\n                <span class=\"login100-form-title p-b-51\">\n                    Login\n                </span>\n\n                <span *ngIf=\"f.submitted && f.controls['email'].errors\"\n                class=\"text-danger animated fadeIn\">El correo es obligatorio</span> \n                <div class=\"wrap-input100 m-b-16\">\n                    <input class=\"input100\" \n                           type=\"text\" \n                           required\n                           email\n                           name=\"email\" \n                           [(ngModel)]=\"usuario.email\"\n                           placeholder=\"E-mail\">\n\n                    <span class=\"focus-input100\"></span>\n                </div>\n                \n                <span *ngIf=\"f.submitted && f.controls['password'].errors\"\n                class=\"text-danger animated fadeIn\">El contraseña es obligatoria</span> \n                <div class=\"wrap-input100 m-b-16\" >\n                    <input class=\"input100\"\n                           type=\"password\" \n                           name=\"password\" \n                           required\n                           minlength=\"6\"\n                           [(ngModel)]=\"usuario.password\"\n                           placeholder=\"Password\">\n                    <span class=\"focus-input100\"></span>\n                </div>\n                \n                <div class=\"flex-sb-m w-full p-t-3 p-b-24\">\n                    <div class=\"contact100-form-checkbox\">\n                        <input [(ngModel)]=\"recordarme\"\n                        class=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\">\n                        <label class=\"label-checkbox100\" for=\"ckb1\">\n                            Recordar mi usuario\n                        </label>\n                    </div>\n\n                    <div>\n                        <!-- <a routerLink=\"/registro\" class=\"txt1\">\n                            ¿No tienes cuenta?\n                        </a> -->\n                    </div>\n                </div>\n\n                <div class=\"container-login100-form-btn m-t-17\">\n                    <button class=\"login100-form-btn\" type=\"submit\">\n                        Ingresar\n                    </button>\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>\n\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-perfil',\r\n    templateUrl: './perfil.pages.html'\r\n})\r\n\r\nexport class PerfilPage {\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"page-content\" id=\"content\">\r\n  <app-header></app-header>\r\n  <app-menu></app-menu>\r\n\r\n  \r\n  <div class=\"row m-2\">\r\n    <div class=\"col-md-12 mt-4\">\r\n      <h3>Perfil</h3>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\"><a href=\"\">Home</a></li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">Perfil</li>\r\n        </ol>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n  <div class=\"row m-2 mt-4\">\r\n    <div class=\"col-md-12 \">\r\n      <table class=\"table table-hover table-sm \">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Acciones\r\n            </th>\r\n            <th>\r\n              categoria\r\n            </th>\r\n            <th>\r\n              recurrencia\r\n            </th>\r\n            <th>\r\n              Status\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr class=\"table-active\">\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <app-footer></app-footer>\r\n</div>\r\n","import {Component, ViewChild} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { ColumnMode } from '@swimlane/ngx-datatable';\r\nimport Swal from 'sweetalert2';\r\nimport { Constantes } from '../models/constantes.model';\r\nimport { ApiPersonas } from '../services/apipersonas.service';\r\nimport { Roles } from '../models/roles';\r\nimport { Personas } from '../models/personas';\r\n\r\n@Component({\r\n  selector: 'app-personas',\r\n  templateUrl: './personas.pages.html'\r\n  \r\n})\r\n\r\nexport class PersonasPage {\r\n  roles: Roles[] = [];\r\n  personas:Personas[] = [];\r\n  issue: Personas = new Personas();\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\r\n\r\n  final: Observable<Object>;\r\n  dregistro = null;\r\n  datoregistro = {\r\n    id_persona: null,\r\n    nombres: null,\r\n    telefono: null,\r\n    email:  null,\r\n    direccion: null,\r\n    id_rol: null,\r\n    password:  null,\r\n    imagen:  null\r\n  }\r\n\r\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\r\n  ColumnMode = ColumnMode;\r\n  campo: any;\r\n  id_persona: any;\r\n  valor: any;\r\n  ever: any;\r\n  datos: string;\r\n  datosborrado: string;\r\n\r\n  \r\n  constructor(private httpClient: HttpClient, private apiService: ApiPersonas) {\r\n        this.fetch(data => {\r\n          // cache\r\n            this.temp = [...data];\r\n            this.rows = data;\r\n        });\r\n\r\n        //cargo los roles para los combos select\r\n        httpClient.get<any[]>(this.PHP_API_SERVER + '/ajax/roles_read.php').subscribe(result => {\r\n            this.roles = result;\r\n          }, error => console.error(error));\r\n\r\n  }\r\n\r\n  //el ngoninit nos servira para recargar en caso de error de validacion\r\n  ngOnInit(){\r\n    this.fetch(data => {\r\n        this.temp = [...data];\r\n        this.rows = data;\r\n      });\r\n  }\r\n\r\n  //reload pagina al usar sweet alerts etc\r\n  recarga(){ \r\n      location.reload();\r\n  }\r\n\r\n  //cargamos el listado\r\n  fetch(cb) {\r\n    if(cb){\r\n      const req = new XMLHttpRequest();\r\n      req.open('GET', `${this.PHP_API_SERVER}/ajax/personas_read.php`);\r\n      req.onload = () => {\r\n        cb(JSON.parse(req.response));\r\n      };\r\n      req.send();\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  //alta de registro\r\n  altaRegistro() {\r\n\r\n    //si los campos obligatorios nos llegan vacios\r\n    if(this.datoregistro.nombres==null || this.datoregistro.email==null || this.datoregistro.id_rol==null || this.datoregistro.password==null){\r\n      Swal.fire({\r\n        title: 'Revise los datos',\r\n        text: 'Los campos obligatorios no pueden estar vacíos!!',\r\n        icon: 'error',\r\n      });   \r\n    } else {\r\n      //enviamos el array a la funcions del server\r\n      this.apiService.altaRegistro(this.datoregistro).subscribe(\r\n        datos => {\r\n          Swal.fire({\r\n            title: this.datoregistro.nombres,\r\n            text: 'Registro añadido',\r\n            icon: 'success',  \r\n            showConfirmButton : false\r\n          }),this.recarga();      \r\n        });\r\n    }\r\n  }\r\n\r\n  //actualización campos inline\r\n  updateValue(event, cell, rowIndex) {\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    this.rows[rowIndex][cell] = event.target.value;\r\n    this.rows = [...this.rows];\r\n    this.campo = cell;\r\n    this.id_persona = event.target.title;\r\n    this.valor = event.target.value;\r\n    this.ever = this.campo,this.id_persona,this.valor;\r\n    this.datos = JSON.stringify({ \"campo\": this.campo, \"id_persona\": this.id_persona, \"valor\": this.valor });\r\n\r\n    //validacion del formato email\r\n     var patronEmail = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/;\r\n     var emailResult = patronEmail.test(this.valor);\r\n\r\n    // //si el campo que recibo es email...\r\n    if(this.campo == \"email\"){\r\n      //...valido su formato\r\n      if(emailResult==false){\r\n        Swal.fire({\r\n          title: 'Revise los datos',\r\n          text: 'El campo \"email\" debe de cumplir con los requerimientos!!',\r\n          icon: 'error',\r\n        }); \r\n        this.ngOnInit();  \r\n      } \r\n      // else {\r\n      //   Swal.fire({\r\n      //     text: 'Registro actualizado',\r\n      //     icon: 'success',  \r\n      //     showConfirmButton : false\r\n      //   })\r\n      // }\r\n    }\r\n    //el campo que recibo es tarea pero es menor de 3 caracteres\r\n    else \r\n    if(this.campo == \"nombres\" && this.valor.length < 3){\r\n       \r\n          Swal.fire({\r\n            title: 'Revise los datos',\r\n            text: 'El campo \"nombres\" debe contener como mínimo tres carácteres!!',\r\n            icon: 'error',\r\n          });   \r\n          this.ngOnInit();  \r\n             \r\n    } \r\n    else \r\n    if(this.campo == \"telefono\" && this.valor.length < 9){       \r\n          Swal.fire({\r\n            title: 'Revise los datos',\r\n            text: 'El campo \"telefono\" debe contener nueve carácteres!!',\r\n            icon: 'error',\r\n          });   \r\n          this.ngOnInit();  \r\n             \r\n    } else {\r\n      //todo Ok llamo al servicio\r\n      this.apiService.modiRegistro(this.datos).subscribe(\r\n        datos => {\r\n          Swal.fire({\r\n            text: 'Registro actualizado',\r\n            icon: 'success',  \r\n            showConfirmButton : false\r\n          })\r\n      \r\n        });\r\n    }\r\n\r\n  }\r\n\r\n\r\n   //eliminar registro      \r\n   borrarRegistro ( registro: Personas, i:string){\r\n\r\n    Swal.fire({\r\n        title: `¿Desea borrar el registro ${registro.nombres}`,\r\n        text: 'Confirme si desea borrar el registro',\r\n        icon: 'question',\r\n        showConfirmButton: true,\r\n        showCancelButton: true\r\n\r\n    }).then( respuesta => {\r\n        if ( respuesta.value ) {\r\n            this.datosborrado = JSON.stringify({ \"nombres\": registro.nombres, \"id_persona\": registro.id_persona });\r\n            this.apiService.delete( this.datosborrado ).subscribe();\r\n\r\n            Swal.fire({\r\n              title: registro.nombres,\r\n              text: 'Registro eliminado',\r\n              icon: 'success',  \r\n              showConfirmButton : false\r\n            })\r\n            ,this.recarga();  \r\n\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n\r\n  //actualizacion filtro busqueda\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n    const temp = this.temp.filter(function(d) {\r\n      return  d.nombres.toLowerCase().indexOf(val) !== -1 || d.telefono.toLowerCase().indexOf(val) !== -1 || d.email.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n    // actualizamos las rows\r\n    this.rows = temp;\r\n    // Cuando cambie el filtro, regresa a la primera página.\r\n    this.table.offset = 0;\r\n  }\r\n\r\n}\r\n\r\ninterface Rols {\r\n    rol_name: string;\r\n}","<div class=\"page-content\" id=\"content\">\r\n    <app-header></app-header>\r\n    <app-menu></app-menu>\r\n  \r\n    <div class=\"row m-2\">\r\n      <div class=\"col-md-12 mt-4\">\r\n        <h3>{{ \"txtPersonas\" | translate }}</h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n              <a [routerLink]=\"['/', 'home']\">Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n              {{ \"txtPersonas\" | translate }}\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"row m-2 mt-4\">\r\n      <div class=\"col-md-8 alturaminima mb-5\">\r\n        <div class=\"form\">\r\n          <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\r\n            <input\r\n              matInput\r\n              #filter\r\n              placeholder=\"{{ 'txtFiltrarRegistros' | translate }}\"\r\n              (keyup)=\"updateFilter($event)\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n        <ngx-datatable\r\n          #mydatatable\r\n          class=\"material striped\"\r\n          headerHeight=\"50\"\r\n          [limit]=\"15\"\r\n          [columnMode]=\"'force'\"\r\n          footerHeight=\"50\"\r\n          rowHeight=\"auto\"\r\n          [rows]=\"rows\"\r\n        >\r\n          <ngx-datatable-column name=\"id_persona\" [maxWidth]=\"90\">\r\n            <ng-template\r\n              class=\"mat-column-id\"\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <div class=\"text-center\">{{ row.id_persona }}</div>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n          <ngx-datatable-column name=\"Nombres\" [maxWidth]=\"1810\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span\r\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                (dblclick)=\"editing[rowIndex + '-nombres'] = true\"\r\n                *ngIf=\"!editing[rowIndex + '-nombres']\"\r\n              >\r\n                {{ value | slice: 0:90 }}\r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'nombres', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-nombres']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n          <ngx-datatable-column name=\"Telefono\" [maxWidth]=\"120\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span\r\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                (dblclick)=\"editing[rowIndex + '-telefono'] = true\"\r\n                *ngIf=\"!editing[rowIndex + '-telefono']\"\r\n              >\r\n           <a href='tel:{{ value }}'>{{ value | slice: 0:90 }}</a> \r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'telefono', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-telefono']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n\r\n\r\n\r\n          <ngx-datatable-column name=\"Email\" [maxWidth]=\"180\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span\r\n                title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                (dblclick)=\"editing[rowIndex + '-email'] = true\"\r\n                *ngIf=\"!editing[rowIndex + '-email']\"\r\n              >\r\n              <a href='mailto:{{ value }}'> {{ value | slice: 0:90 }}</a>\r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'email', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-email']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n\r\n<!-- \r\n\r\n          <ngx-datatable-column name=\"Registrado\" [maxWidth]=\"1810\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <span>\r\n                {{ value | slice: 0:10 }}\r\n              </span>\r\n              <input\r\n                required\r\n                autofocus\r\n                (keyup.enter)=\"updateValue($event, 'registrado', rowIndex)\"\r\n                *ngIf=\"editing[rowIndex + '-registrado']\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"value\"\r\n                [title]=\"row.id\"\r\n              />\r\n            </ng-template>\r\n          </ngx-datatable-column> -->\r\n\r\n\r\n          <ngx-datatable-column name=\"Rol\" [maxWidth]=\"80\">\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-rowIndex=\"rowIndex\"\r\n              let-row=\"row\"\r\n              let-value=\"value\"\r\n            >\r\n                <span\r\n                  title=\"{{ 'txtDobleclickparaeditar' | translate }}\"\r\n                  (dblclick)=\"editing[rowIndex + '-id_rol'] = true\"\r\n                  *ngIf=\"!editing[rowIndex + '-id_rol']\"\r\n                >\r\n                  {{ value }}\r\n                </span>\r\n                <input type=\"hidden\" #varId [value]=\"row.id\" />\r\n  \r\n                <select\r\n                  class=\"form-control\"\r\n                  name=\"id_rol\"\r\n                  *ngIf=\"editing[rowIndex + '-id_rol']\"\r\n                  (blur)=\"editing[rowIndex + '-id_rol'] = false\"\r\n                  (change)=\"updateValue($event, 'id_rol', rowIndex)\"\r\n                  [value]=\"value\"\r\n                  [title]=\"row.id\"\r\n                >\r\n                <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\r\n                    {{rol.rol_name}}\r\n                  </option>\r\n        \r\n                </select>\r\n             \r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n  \r\n          <ngx-datatable-column name=\"ver\" [maxWidth]=\"80\">\r\n            <ng-template\r\n              class=\"mat-column-id\"\r\n              ngx-datatable-cell-template\r\n              let-row=\"row\"\r\n            >\r\n              <div class=\"text-center\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 p0 m0\">\r\n                    <a\r\n                      [routerLink]=\"['/detallepersona', row.id_persona]\"\r\n                      class=\"btn btn-warning botonsizes mr-1\"\r\n                      ><i class=\"fa fa-pencil\"></i\r\n                    ></a>\r\n                    <button\r\n                      (click)=\"borrarRegistro(row, i)\"\r\n                      class=\"btn btn-warning botonsizes\"\r\n                    >\r\n                      <i class=\"fa fa-trash\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n      <div class=\"col-md-4 pt-5\">\r\n       \r\n        <div class=\"form-group\">\r\n          <label for=\"nombres\">{{ \"txtNombres\" | translate }}</label>\r\n          <input\r\n            required\r\n            style=\"background-color: white;\"\r\n            placeholder=\"{{ 'txtNombres' | translate }}\"\r\n            class=\"form-control form-control-sm\"\r\n            [class.is-invalid]=\"nombres.invalid && nombres.touched\"\r\n            #nombres=\"ngModel\"\r\n            required\r\n            minlength=\"4\"\r\n            name=\"nombres\"\r\n            type=\"text\"\r\n            [(ngModel)]=\"datoregistro.nombres\"\r\n          />\r\n        </div>\r\n  \r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"telefono\">{{ \"txtTelefono\" | translate }}</label>\r\n            <input\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txt9digitos' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              #telefono=\"ngModel\"\r\n              minlength=\"9\"\r\n              name=\"telefono\"\r\n              type=\"text\"\r\n              [(ngModel)]=\"datoregistro.telefono\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">{{ \"txtEmail\" | translate }}</label>\r\n            <input\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txtEmail' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              [class.is-invalid]=\"email.invalid && email.touched\"\r\n              #email=\"ngModel\"\r\n              required\r\n              [email]=\"true\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              [(ngModel)]=\"datoregistro.email\"\r\n            />\r\n          </div>\r\n          \r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"direccion\">{{ \"txtDireccion\" | translate }}</label>\r\n            <input\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txtDireccion' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              #direccion=\"ngModel\"\r\n              name=\"direccion\"\r\n              type=\"text\"\r\n              [(ngModel)]=\"datoregistro.direccion\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">{{ \"txtPassword\" | translate }}</label>\r\n            <input\r\n              required\r\n              style=\"background-color: white;\"\r\n              placeholder=\"{{ 'txtPassword' | translate }}\"\r\n              class=\"form-control form-control-sm\"\r\n              [class.is-invalid]=\"password.invalid && password.touched\"\r\n              #password=\"ngModel\"\r\n              required\r\n              name=\"password\"\r\n              type=\"password\"\r\n              [(ngModel)]=\"datoregistro.password\"\r\n            />\r\n          </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"id_rol\">{{ \"txtRol\" | translate }}</label>\r\n          <select\r\n            required\r\n            style=\"background-color: white;\"\r\n            class=\"form-control form-control-sm\"\r\n            name=\"id_rol\"\r\n           \r\n            [class.is-invalid]=\"id_rol.invalid && id_rol.touched\"\r\n            #id_rol=\"ngModel\"\r\n            [(ngModel)]=\"datoregistro.id_rol\"\r\n          >\r\n          <option *ngFor=\"let rol of roles\" value={{rol.id_rol}}>\r\n            {{rol.rol_name}}\r\n          </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center\">\r\n          <button (click)=\"altaRegistro()\" class=\"btn btn-primary colortopacio\">\r\n            {{ \"txtAgregar\" | translate }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n    <app-footer></app-footer>\r\n  </div>\r\n  ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\nimport { Personas } from '../models/personas';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiPersonas {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n\n  //obtener persona por id_tarea\n  getPerson( id_persona ){\n      return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  //obtener foto persona\n  getFotografia( id_persona ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/personas_detalle.php?id_persona=${ id_persona }`);\n  }\n\n  altaRegistro(datoregistro) {\n      console.log(JSON.stringify(datoregistro));\n      return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_crear.php`, JSON.stringify(datoregistro));\n  }\n\n\n  actualizarRegistro(persona: Personas){\n    const personaTemp = {\n        ...persona\n    };\n    delete personaTemp.id_persona;\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_update_detalle.php`, persona);  \n  }\n\n  modiRegistro(datos){\n    console.log(datos);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_update.php`, datos);   \n  \n  }\n  \n  delete(datosborrado){\n    console.log(datosborrado);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/personas_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n  altaRegistro(datoregistro) {\n      console.log(JSON.stringify(datoregistro));\n      return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_crear.php`, JSON.stringify(datoregistro));\n  }\n\n  modiRegistro(datos){\n    console.log(datos);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_update.php`, datos);   \n  \n  }\n\n  delete(datosborrado){\n    console.log(datosborrado);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UsuarioModel } from '../models/usuario.model';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  private url = 'https://identitytoolkit.googleapis.com/v1/accounts';\n  private apikey = 'AIzaSyBOXG3p_p7CJBDUTBTwkAviZS2ry-Wq3TE';\n\n  userToken: string;\n\n  // https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=[API_KEY]\n\n  // https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=[API_KEY]\n  \n\n\n  constructor( private http: HttpClient ) { \n\n    this.leerToken();\n  }\n\n\n  logout(){\n\n  }\n  \n  login( usuario: UsuarioModel){\n    const authData = {\n      email: usuario.email,\n      password: usuario.password,\n      returnSecureToken: true\n    };\n\n    return this.http.post(\n      `${this.url}:signInWithPassword?key=${ this.apikey }`,\n      authData\n    ).pipe(\n      map(  respuesta => {\n              this.guardarToken ( respuesta['idToken'] );\n              return respuesta;\n      })\n    );\n\n  }\n\n  nuevoUsuario(usuario: UsuarioModel){\n    const authData = {\n      email: usuario.email,\n      password: usuario.password,\n      returnSecureToken: true\n    };\n\n    return this.http.post(\n      `${this.url}:signUp?key=${ this.apikey }`,\n      authData\n    ).pipe(\n        map(  respuesta => {\n                this.guardarToken ( respuesta['idToken'] );\n                return respuesta;\n        })\n    );\n  }\n\n\n  private guardarToken( idToken: string ){\n      this.userToken = idToken;\n      localStorage.setItem('token', idToken);\n  }\n\n\n  leerToken(){\n    if( localStorage.getItem('token') ) {\n      this.userToken = localStorage.getItem('token');\n    } else {\n      this.userToken = '';\n    }\n    return this.userToken;\n  }\n\n  estaAutenticado(): boolean{\n      return this.userToken.length > 2;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {Issue} from '../models/issue';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\n\n@Injectable()\nexport class DataService {\n\n  private readonly API_URL = 'http://joraco.site:8081/b/ajax/registro_read.php';\n\n  dataChange: BehaviorSubject<Issue[]> = new BehaviorSubject<Issue[]>([]);\n  \n  // Temporarily stores data from dialogs\n  dialogData: any;\n\n  constructor (private httpClient: HttpClient) {}\n\n  get data(): Issue[] {\n    return this.dataChange.value;\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  /** CRUD METHODS */\n  getAllIssues(): void {\n    this.httpClient.get<Issue[]>(this.API_URL).subscribe(data => {\n        this.dataChange.next(data);\n      },\n      (error: HttpErrorResponse) => {\n      console.log (error.name + ' ' + error.message);\n      });\n  }\n\n  // DEMO ONLY, you can find working methods below\n  addIssue (issue: Issue): void {\n    this.dialogData = issue;\n  }\n\n  updateIssue (issue: Issue): void {\n    this.dialogData = issue;\n  }\n\n  deleteIssue (id: number): void {\n    console.log(id);\n  }\n}\n\n\n\n/* REAL LIFE CRUD Methods I've used in my projects. ToasterService uses Material Toasts for displaying messages:\n\n    // ADD, POST METHOD\n    addItem(kanbanItem: KanbanItem): void {\n    this.httpClient.post(this.API_URL, kanbanItem).subscribe(data => {\n      this.dialogData = kanbanItem;\n      this.toasterService.showToaster('Successfully added', 3000);\n      },\n      (err: HttpErrorResponse) => {\n      this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n    });\n   }\n\n    // UPDATE, PUT METHOD\n     updateItem(kanbanItem: KanbanItem): void {\n    this.httpClient.put(this.API_URL + kanbanItem.id, kanbanItem).subscribe(data => {\n        this.dialogData = kanbanItem;\n        this.toasterService.showToaster('Successfully edited', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n\n  // DELETE METHOD\n  deleteItem(id: number): void {\n    this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(data['']);\n        this.toasterService.showToaster('Successfully deleted', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n*/\n\n\n\n\n","\r\n\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Issue } from '../../app/models/issue';\r\nimport { Personas } from '../models/personas';\r\nimport { Seguimiento } from '../models/seguimiento';\r\n@Injectable(\r\n    {\r\n        providedIn:'root'\r\n    }\r\n)\r\n\r\n\r\nexport class DetalleService {\r\n\r\n    private personas:Issue[] = [];\r\n     //persons:any[] = [];\r\n \r\n        //definimos la url del servicio\r\n        private url = 'http://joraco.site:8081/b/ajax';\r\n\r\n\r\n\r\n        constructor( private http: HttpClient) {\r\n            // console.log(\"servicio listo para usar\");\r\n            // this.http.get('https://restcountries.eu/rest/v2/lang/es') //URL del servicio\r\n            // .subscribe( (resultados:any) => {\r\n            // this.persons = resultados;\r\n            // } );\r\n        }\r\n\r\n        // //nuevo registro\r\n        // crearPersona( persona: Issue ){\r\n        //     return this.http.post(`${ this.url}/personas.php`,persona)\r\n        //     .pipe(\r\n        //         map( (respuesta:any) => {\r\n        //             persona.id = respuesta.name;\r\n        //             return persona;\r\n        //         })\r\n        //     );\r\n        // }\r\n\r\n        //modificar registro\r\n        actualizarRegistro(persona: Issue){\r\n\r\n            const personaTemp = {\r\n                ...persona\r\n            };\r\n            delete personaTemp.id_tarea;\r\n\r\n            return this.http.post(`${this.url}/registro_update_detalle.php`, persona);  \r\n\r\n        }\r\n\r\n\r\n        actualizarRegistroSeguimiento(datoregistro) {\r\n            console.log(JSON.stringify(datoregistro));\r\n            return this.http.post(`${this.url}/registro_update_seguimiento.php`, JSON.stringify(datoregistro));\r\n        }\r\n\r\n\r\n\r\n        //obtener persona por id_tarea\r\n        getPerson( id_tarea:string ){\r\n            return this.http.get(`${ this.url}/registro_detalle.php?id_tarea=${ id_tarea }`);\r\n        }\r\n\r\n\r\n        delete(datosborrado){\r\n            console.log(datosborrado);\r\n            return this.http.post(`${this.url}/registro_seguimiento_borrado.php`,datosborrado);\r\n          }\r\n\r\n\r\n   \r\n          \r\n\r\n        // buscarPersonas( termino:string ){\r\n        //     let heroesArr:PersonaModel[] = [];\r\n        //     termino = termino.toLowerCase(); \r\n        //     //console.log('termino: ', heroesArr); \r\n\r\n        //     for( let i = 0; i < this.personas.length; i ++ ){  \r\n\r\n        //       let persona = this.personas[i];     \r\n        //       let nombre = persona.nombre.toLowerCase(); \r\n                  \r\n        //       if( nombre.indexOf( termino ) >= 0  ){\r\n        //         persona.idx = i;\r\n        //         heroesArr.push( persona )\r\n        //       }\r\n        //     }\r\n        //     return heroesArr; \r\n        //   }\r\n       \r\n \r\n    \r\n}\r\n\r\n//SI QUEREMOS ESPECIFICAR EL TIPO DE DATOS RECIBIDOS, por lo general ANY\r\n// export interface Heroe{\r\n//         nombre: string;\r\n//          bio: string;\r\n//          img: string;\r\n//          aparicion: string;\r\n//          casa: string;\r\n//          idx?: number\r\n// }\r\n\r\n","\r\n\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Issue } from '../models/issue';\r\nimport { Personas } from '../models/personas';\r\nimport { Seguimiento } from '../models/seguimiento';\r\n@Injectable(\r\n    {\r\n        providedIn:'root'\r\n    }\r\n)\r\n\r\n\r\nexport class DetalleHistoricoService {\r\n\r\n    private personas:Issue[] = [];\r\n     //persons:any[] = [];\r\n \r\n        //definimos la url del servicio\r\n        private url = 'http://joraco.site:8081/b/ajax';\r\n\r\n\r\n\r\n        constructor( private http: HttpClient) {\r\n            // console.log(\"servicio listo para usar\");\r\n            // this.http.get('https://restcountries.eu/rest/v2/lang/es') //URL del servicio\r\n            // .subscribe( (resultados:any) => {\r\n            // this.persons = resultados;\r\n            // } );\r\n        }\r\n\r\n\r\n\r\n        //obtener persona por id\r\n        getPerson( id:string ){\r\n            return this.http.get(`${ this.url}/registro_detalle.php?id=${ id }`);\r\n        }\r\n\r\n\r\n        delete(datosborrado){\r\n            console.log(datosborrado);\r\n            return this.http.post(`${this.url}/registro_seguimiento_borrado.php`,datosborrado);\r\n          }\r\n\r\n\r\n \r\n    \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoricoService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n\n\n\n  delete(datosborrado){\n    console.log(datosborrado);\n    return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_historico_borrado.php`,datosborrado);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constantes } from '../models/constantes.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeriodicidadService {\n \n  private PHP_API_SERVER = Constantes.API_SERVER; //URL del servicio\n\n  constructor(private httpClient: HttpClient) {}\n\n  altaRegistrochecks(datoregistro) {\n      console.log(JSON.stringify(datoregistro));\n      return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/periodicidad_crear.php`, JSON.stringify(datoregistro));\n  }\n\n  //obtener persona por id\n          getCheckeds( id_tarea:string ){\n            return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/periodicidad_detalle.php?id_tarea=${ id_tarea }`);\n        }\n\n  getDatosMadre( id_tarea ){\n    return this.httpClient.get(`${ this.PHP_API_SERVER}/ajax/periodicidad_madre.php?id_tarea=${ id_tarea }`)\n    \n  }\n  \n\n//   modiRegistro(datos){\n//     console.log(datos);\n//     return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_update.php`, datos);   \n  \n//   }\n\n//   delete(datosborrado){\n//     console.log(datosborrado);\n//     return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_borrado.php`,datosborrado);\n//   }\n\n\ndelete(datosborrado){\n  console.log(datosborrado);\n  return this.httpClient.post(`${this.PHP_API_SERVER}/ajax/registro_diames_borrado.php`,datosborrado);\n}\n\n\n\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}